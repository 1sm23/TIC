(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["TEduBoard"] = factory();
	else
		root["TEduBoard"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/TEduBoard.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/AlloyFinger/alloy_finger.js":
/*!**************************************************!*\
  !*** ./node_modules/AlloyFinger/alloy_finger.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* AlloyFinger v0.1.15
 * By dntzhang
 * Github: https://github.com/AlloyTeam/AlloyFinger
 */
; (function () {
    function getLen(v) {
        return Math.sqrt(v.x * v.x + v.y * v.y);
    }

    function dot(v1, v2) {
        return v1.x * v2.x + v1.y * v2.y;
    }

    function getAngle(v1, v2) {
        var mr = getLen(v1) * getLen(v2);
        if (mr === 0) return 0;
        var r = dot(v1, v2) / mr;
        if (r > 1) r = 1;
        return Math.acos(r);
    }

    function cross(v1, v2) {
        return v1.x * v2.y - v2.x * v1.y;
    }

    function getRotateAngle(v1, v2) {
        var angle = getAngle(v1, v2);
        if (cross(v1, v2) > 0) {
            angle *= -1;
        }

        return angle * 180 / Math.PI;
    }

    var HandlerAdmin = function(el) {
        this.handlers = [];
        this.el = el;
    };

    HandlerAdmin.prototype.add = function(handler) {
        this.handlers.push(handler);
    }

    HandlerAdmin.prototype.del = function(handler) {
        if(!handler) this.handlers = [];

        for(var i=this.handlers.length; i>=0; i--) {
            if(this.handlers[i] === handler) {
                this.handlers.splice(i, 1);
            }
        }
    }

    HandlerAdmin.prototype.dispatch = function() {
        for(var i=0,len=this.handlers.length; i<len; i++) {
            var handler = this.handlers[i];
            if(typeof handler === 'function') handler.apply(this.el, arguments);
        }
    }

    function wrapFunc(el, handler) {
        var handlerAdmin = new HandlerAdmin(el);
        handlerAdmin.add(handler);

        return handlerAdmin;
    }

    var AlloyFinger = function (el, option) {

        this.element = typeof el == 'string' ? document.querySelector(el) : el;

        this.start = this.start.bind(this);
        this.move = this.move.bind(this);
        this.end = this.end.bind(this);
        this.cancel = this.cancel.bind(this);
        this.element.addEventListener("touchstart", this.start, false);
        this.element.addEventListener("touchmove", this.move, false);
        this.element.addEventListener("touchend", this.end, false);
        this.element.addEventListener("touchcancel", this.cancel, false);

        this.preV = { x: null, y: null };
        this.pinchStartLen = null;
        this.zoom = 1;
        this.isDoubleTap = false;

        var noop = function () { };

        this.rotate = wrapFunc(this.element, option.rotate || noop);
        this.touchStart = wrapFunc(this.element, option.touchStart || noop);
        this.multipointStart = wrapFunc(this.element, option.multipointStart || noop);
        this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);
        this.pinch = wrapFunc(this.element, option.pinch || noop);
        this.swipe = wrapFunc(this.element, option.swipe || noop);
        this.tap = wrapFunc(this.element, option.tap || noop);
        this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);
        this.longTap = wrapFunc(this.element, option.longTap || noop);
        this.singleTap = wrapFunc(this.element, option.singleTap || noop);
        this.pressMove = wrapFunc(this.element, option.pressMove || noop);
        this.twoFingerPressMove = wrapFunc(this.element, option.twoFingerPressMove || noop);
        this.touchMove = wrapFunc(this.element, option.touchMove || noop);
        this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);
        this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);

        this._cancelAllHandler = this.cancelAll.bind(this);

        window.addEventListener('scroll', this._cancelAllHandler);

        this.delta = null;
        this.last = null;
        this.now = null;
        this.tapTimeout = null;
        this.singleTapTimeout = null;
        this.longTapTimeout = null;
        this.swipeTimeout = null;
        this.x1 = this.x2 = this.y1 = this.y2 = null;
        this.preTapPosition = { x: null, y: null };
    };

    AlloyFinger.prototype = {
        start: function (evt) {
            if (!evt.touches) return;
            this.now = Date.now();
            this.x1 = evt.touches[0].pageX;
            this.y1 = evt.touches[0].pageY;
            this.delta = this.now - (this.last || this.now);
            this.touchStart.dispatch(evt, this.element);
            if (this.preTapPosition.x !== null) {
                this.isDoubleTap = (this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30);
                if (this.isDoubleTap) clearTimeout(this.singleTapTimeout);
            }
            this.preTapPosition.x = this.x1;
            this.preTapPosition.y = this.y1;
            this.last = this.now;
            var preV = this.preV,
                len = evt.touches.length;
            if (len > 1) {
                this._cancelLongTap();
                this._cancelSingleTap();
                var v = { x: evt.touches[1].pageX - this.x1, y: evt.touches[1].pageY - this.y1 };
                preV.x = v.x;
                preV.y = v.y;
                this.pinchStartLen = getLen(preV);
                this.multipointStart.dispatch(evt, this.element);
            }
            this._preventTap = false;
            this.longTapTimeout = setTimeout(function () {
                this.longTap.dispatch(evt, this.element);
                this._preventTap = true;
            }.bind(this), 750);
        },
        move: function (evt) {
            if (!evt.touches) return;
            var preV = this.preV,
                len = evt.touches.length,
                currentX = evt.touches[0].pageX,
                currentY = evt.touches[0].pageY;
            this.isDoubleTap = false;
            if (len > 1) {
                var sCurrentX = evt.touches[1].pageX,
                    sCurrentY = evt.touches[1].pageY
                var v = { x: evt.touches[1].pageX - currentX, y: evt.touches[1].pageY - currentY };

                if (preV.x !== null) {
                    if (this.pinchStartLen > 0) {
                        evt.zoom = getLen(v) / this.pinchStartLen;
                        this.pinch.dispatch(evt, this.element);
                    }

                    evt.angle = getRotateAngle(v, preV);
                    this.rotate.dispatch(evt, this.element);
                }
                preV.x = v.x;
                preV.y = v.y;

                if (this.x2 !== null && this.sx2 !== null) {
                    evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;
                    evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;
                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }
                this.twoFingerPressMove.dispatch(evt, this.element);

                this.sx2 = sCurrentX;
                this.sy2 = sCurrentY;
            } else {
                if (this.x2 !== null) {
                    evt.deltaX = currentX - this.x2;
                    evt.deltaY = currentY - this.y2;

                    //move事件中添加对当前触摸点到初始触摸点的判断，
                    //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。
                    var movedX = Math.abs(this.x1 - this.x2),
                        movedY = Math.abs(this.y1 - this.y2);

                    if(movedX > 10 || movedY > 10){
                        this._preventTap = true;
                    }

                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }
                
                
                this.pressMove.dispatch(evt, this.element);
            }

            this.touchMove.dispatch(evt, this.element);

            this._cancelLongTap();
            this.x2 = currentX;
            this.y2 = currentY;
            
            if (len > 1) {
                evt.preventDefault();
            }
        },
        end: function (evt) {
            if (!evt.changedTouches) return;
            this._cancelLongTap();
            var self = this;
            if (evt.touches.length < 2) {
                this.multipointEnd.dispatch(evt, this.element);
                this.sx2 = this.sy2 = null;
            }

            //swipe
            if ((this.x2 && Math.abs(this.x1 - this.x2) > 30) ||
                (this.y2 && Math.abs(this.y1 - this.y2) > 30)) {
                evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);
                this.swipeTimeout = setTimeout(function () {
                    self.swipe.dispatch(evt, self.element);

                }, 0)
            } else {
                this.tapTimeout = setTimeout(function () {
                    if(!self._preventTap){
                        self.tap.dispatch(evt, self.element);
                    }
                    // trigger double tap immediately
                    if (self.isDoubleTap) {
                        self.doubleTap.dispatch(evt, self.element);
                        self.isDoubleTap = false;
                    }
                }, 0)

                if (!self.isDoubleTap) {
                    self.singleTapTimeout = setTimeout(function () {
                        self.singleTap.dispatch(evt, self.element);
                    }, 250);
                }
            }

            this.touchEnd.dispatch(evt, this.element);

            this.preV.x = 0;
            this.preV.y = 0;
            this.zoom = 1;
            this.pinchStartLen = null;
            this.x1 = this.x2 = this.y1 = this.y2 = null;
        },
        cancelAll: function () {
            this._preventTap = true
            clearTimeout(this.singleTapTimeout);
            clearTimeout(this.tapTimeout);
            clearTimeout(this.longTapTimeout);
            clearTimeout(this.swipeTimeout);
        },
        cancel: function (evt) {
            this.cancelAll()
            this.touchCancel.dispatch(evt, this.element);
        },
        _cancelLongTap: function () {
            clearTimeout(this.longTapTimeout);
        },
        _cancelSingleTap: function () {
            clearTimeout(this.singleTapTimeout);
        },
        _swipeDirection: function (x1, x2, y1, y2) {
            return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')
        },

        on: function(evt, handler) {
            if(this[evt]) {
                this[evt].add(handler);
            }
        },

        off: function(evt, handler) {
            if(this[evt]) {
                this[evt].del(handler);
            }
        },

        destroy: function() {
            if(this.singleTapTimeout) clearTimeout(this.singleTapTimeout);
            if(this.tapTimeout) clearTimeout(this.tapTimeout);
            if(this.longTapTimeout) clearTimeout(this.longTapTimeout);
            if(this.swipeTimeout) clearTimeout(this.swipeTimeout);

            this.element.removeEventListener("touchstart", this.start);
            this.element.removeEventListener("touchmove", this.move);
            this.element.removeEventListener("touchend", this.end);
            this.element.removeEventListener("touchcancel", this.cancel);

            this.rotate.del();
            this.touchStart.del();
            this.multipointStart.del();
            this.multipointEnd.del();
            this.pinch.del();
            this.swipe.del();
            this.tap.del();
            this.doubleTap.del();
            this.longTap.del();
            this.singleTap.del();
            this.pressMove.del();
            this.twoFingerPressMove.del()
            this.touchMove.del();
            this.touchEnd.del();
            this.touchCancel.del();

            this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;

            window.removeEventListener('scroll', this._cancelAllHandler);
            return null;
        }
    };

    if (true) {
        module.exports = AlloyFinger;
    } else {}
})();


/***/ }),

/***/ "./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_advance-string-index.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_advance-string-index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-instance.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_an-instance.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-copy-within.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-copy-within.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-fill.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_array-fill.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-includes.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-methods.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-constructor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-create.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_classof.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_classof.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_create-property.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-bug-keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-bug-keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-keys.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/modules/_fails-is-regexp.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_fails-is-regexp.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_fix-re-wks.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_fix-re-wks.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ./es6.regexp.exec */ "./node_modules/core-js/modules/es6.regexp.exec.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_flags.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_flags.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_for-of.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_for-of.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/modules/_function-to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_function-to-string.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('native-function-to-string', Function.toString);


/***/ }),

/***/ "./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_html.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_html.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_inherit-if-required.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_inherit-if-required.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var setPrototypeOf = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_invoke.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_invoke.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array-iter.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array-iter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-regexp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-regexp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-call.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-call.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-create.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-create.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-define.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-define.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-detect.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-detect.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-step.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-step.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iterators.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iterators.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/modules/_meta.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_meta.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/modules/_microtask.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_microtask.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_new-promise-capability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/_new-promise-capability.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-assign.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-assign.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-create.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-create.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dps.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dps.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopd.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopd.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn-ext.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gops.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gops.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gpo.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gpo.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys-internal.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys-internal.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-pie.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-pie.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-sap.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-sap.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-to-array.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-to-array.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var isEnum = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_perform.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_perform.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_promise-resolve.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_promise-resolve.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine-all.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine-all.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
var $toString = __webpack_require__(/*! ./_function-to-string */ "./node_modules/core-js/modules/_function-to-string.js");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "./node_modules/core-js/modules/_regexp-exec-abstract.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec-abstract.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_regexp-exec.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "./node_modules/core-js/modules/_set-proto.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_set-proto.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-species.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_set-species.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-to-string-tag.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-to-string-tag.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared-key.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_shared-key.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/modules/_species-constructor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_species-constructor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_strict-method.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_strict-method.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-at.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-at.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-context.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-context.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-trim.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-trim.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var spaces = __webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "./node_modules/core-js/modules/_string-ws.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-ws.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "./node_modules/core-js/modules/_task.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_task.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-absolute-index.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-index.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_to-index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-iobject.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-array.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-array.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js")) {
  var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
  var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
  var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
  var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
  var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
  var $buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
  var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
  var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
  var propertyDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
  var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
  var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
  var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
  var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
  var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
  var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
  var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
  var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
  var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
  var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
  var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
  var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
  var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
  var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
  var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
  var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
  var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
  var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
  var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
  var createArrayIncludes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js");
  var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
  var ArrayIterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
  var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
  var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
  var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
  var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
  var arrayCopyWithin = __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js");
  var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
  var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-buffer.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-buffer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "./node_modules/core-js/modules/_typed.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_typed.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),

/***/ "./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_user-agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_user-agent.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-define.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-define.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-ext.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-ext.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");


/***/ }),

/***/ "./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/modules/core.get-iterator-method.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/core.get-iterator-method.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.fill.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.fill.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { fill: __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('fill');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.find.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.from.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.sort.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.sort.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-string.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.function.name.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.name.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.hypot.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.hypot.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.constructor.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, NUMBER, $Number);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.assign.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.assign.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.keys.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.to-string.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var test = {};
test[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.promise.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.promise.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.exec.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.exec.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
__webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.flags.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && /./g.flags != 'g') __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js")
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.match.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.match.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@match logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.replace.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.replace.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.split.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.split.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var callRegExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ./es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.ends-with.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.ends-with.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.iterator.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.starts-with.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.starts-with.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.symbol.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.symbol.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f = $propertyIsEnumerable;
  __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint8-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.object.values.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.values.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $values = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.symbol.async-iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom.iterable.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "./node_modules/js-md5/src/md5.js":
/*!****************************************!*\
  !*** ./node_modules/js-md5/src/md5.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-md5]{@link https://github.com/emn178/js-md5}
 *
 * @namespace md5
 * @version 0.7.3
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function () {
  'use strict';

  var ERROR = 'input is invalid type';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_MD5_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = global;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;
  var AMD =  true && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js");
  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var EXTRA = [128, 32768, 8388608, -2147483648];
  var SHIFT = [0, 8, 16, 24];
  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];
  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

  var blocks = [], buffer8;
  if (ARRAY_BUFFER) {
    var buffer = new ArrayBuffer(68);
    buffer8 = new Uint8Array(buffer);
    blocks = new Uint32Array(buffer);
  }

  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  /**
   * @method hex
   * @memberof md5
   * @description Output hash as hex string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} Hex string
   * @example
   * md5.hex('The quick brown fox jumps over the lazy dog');
   * // equal to
   * md5('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method digest
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.digest('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method array
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.array('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method arrayBuffer
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.buffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method base64
   * @memberof md5
   * @description Output hash as base64 string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} base64 string
   * @example
   * md5.base64('The quick brown fox jumps over the lazy dog');
   */
  var createOutputMethod = function (outputType) {
    return function (message) {
      return new Md5(true).update(message)[outputType]();
    };
  };

  /**
   * @method create
   * @memberof md5
   * @description Create Md5 object
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.create();
   */
  /**
   * @method update
   * @memberof md5
   * @description Create and update Md5 object
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.update('The quick brown fox jumps over the lazy dog');
   * // equal to
   * var hash = md5.create();
   * hash.update('The quick brown fox jumps over the lazy dog');
   */
  var createMethod = function () {
    var method = createOutputMethod('hex');
    if (NODE_JS) {
      method = nodeWrap(method);
    }
    method.create = function () {
      return new Md5();
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(type);
    }
    return method;
  };

  var nodeWrap = function (method) {
    var crypto = eval("require('crypto')");
    var Buffer = eval("require('buffer').Buffer");
    var nodeMethod = function (message) {
      if (typeof message === 'string') {
        return crypto.createHash('md5').update(message, 'utf8').digest('hex');
      } else {
        if (message === null || message === undefined) {
          throw ERROR;
        } else if (message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        }
      }
      if (Array.isArray(message) || ArrayBuffer.isView(message) ||
        message.constructor === Buffer) {
        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');
      } else {
        return method(message);
      }
    };
    return nodeMethod;
  };

  /**
   * Md5 class
   * @class Md5
   * @description This is internal class.
   * @see {@link md5.create}
   */
  function Md5(sharedMemory) {
    if (sharedMemory) {
      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      this.blocks = blocks;
      this.buffer8 = buffer8;
    } else {
      if (ARRAY_BUFFER) {
        var buffer = new ArrayBuffer(68);
        this.buffer8 = new Uint8Array(buffer);
        this.blocks = new Uint32Array(buffer);
      } else {
        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      }
    }
    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;
    this.finalized = this.hashed = false;
    this.first = true;
  }

  /**
   * @method update
   * @memberof Md5
   * @instance
   * @description Update hash
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @see {@link md5.update}
   */
  Md5.prototype.update = function (message) {
    if (this.finalized) {
      return;
    }

    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw ERROR;
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw ERROR;
          }
        }
      } else {
        throw ERROR;
      }
      notString = true;
    }
    var code, index = 0, i, length = message.length, blocks = this.blocks;
    var buffer8 = this.buffer8;

    while (index < length) {
      if (this.hashed) {
        this.hashed = false;
        blocks[0] = blocks[16];
        blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      }

      if (notString) {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            buffer8[i++] = message[index];
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
          }
        }
      } else {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              buffer8[i++] = code;
            } else if (code < 0x800) {
              buffer8[i++] = 0xc0 | (code >> 6);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else if (code < 0xd800 || code >= 0xe000) {
              buffer8[i++] = 0xe0 | (code >> 12);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              buffer8[i++] = 0xf0 | (code >> 18);
              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            }
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              blocks[i >> 2] |= code << SHIFT[i++ & 3];
            } else if (code < 0x800) {
              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else if (code < 0xd800 || code >= 0xe000) {
              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            }
          }
        }
      }
      this.lastByteIndex = i;
      this.bytes += i - this.start;
      if (i >= 64) {
        this.start = i - 64;
        this.hash();
        this.hashed = true;
      } else {
        this.start = i;
      }
    }
    if (this.bytes > 4294967295) {
      this.hBytes += this.bytes / 4294967296 << 0;
      this.bytes = this.bytes % 4294967296;
    }
    return this;
  };

  Md5.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex;
    blocks[i >> 2] |= EXTRA[i & 3];
    if (i >= 56) {
      if (!this.hashed) {
        this.hash();
      }
      blocks[0] = blocks[16];
      blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }
    blocks[14] = this.bytes << 3;
    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;
    this.hash();
  };

  Md5.prototype.hash = function () {
    var a, b, c, d, bc, da, blocks = this.blocks;

    if (this.first) {
      a = blocks[0] - 680876937;
      a = (a << 7 | a >>> 25) - 271733879 << 0;
      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;
      d = (d << 12 | d >>> 20) + a << 0;
      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;
      c = (c << 17 | c >>> 15) + d << 0;
      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;
      b = (b << 22 | b >>> 10) + c << 0;
    } else {
      a = this.h0;
      b = this.h1;
      c = this.h2;
      d = this.h3;
      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;
      a = (a << 7 | a >>> 25) + b << 0;
      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;
      d = (d << 12 | d >>> 20) + a << 0;
      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;
      c = (c << 17 | c >>> 15) + d << 0;
      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;
      b = (b << 22 | b >>> 10) + c << 0;
    }

    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;
    b = (b << 20 | b >>> 12) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[5] - 378558;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[8] - 2022574463;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[11] + 1839030562;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[14] - 35309556;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[1] - 1530992060;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[4] + 1272893353;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[7] - 155497632;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[10] - 1094730640;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[13] + 681279174;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[0] - 358537222;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[3] - 722521979;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[6] + 76029189;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[9] - 640364487;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[12] - 421815835;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[15] + 530742520;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[2] - 995338651;
    b = (b << 23 | b >>> 9) + c << 0;
    a += (c ^ (b | ~d)) + blocks[0] - 198630844;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[5] - 57434055;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[10] - 1051523;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[15] - 30611744;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[4] - 145523070;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[2] + 718787259;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[9] - 343485551;
    b = (b << 21 | b >>> 11) + c << 0;

    if (this.first) {
      this.h0 = a + 1732584193 << 0;
      this.h1 = b - 271733879 << 0;
      this.h2 = c - 1732584194 << 0;
      this.h3 = d + 271733878 << 0;
      this.first = false;
    } else {
      this.h0 = this.h0 + a << 0;
      this.h1 = this.h1 + b << 0;
      this.h2 = this.h2 + c << 0;
      this.h3 = this.h3 + d << 0;
    }
  };

  /**
   * @method hex
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.hex();
   */
  Md5.prototype.hex = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;

    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +
      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +
      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +
      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +
      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +
      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +
      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +
      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +
      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +
      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +
      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +
      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +
      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +
      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +
      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +
      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];
  };

  /**
   * @method toString
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.toString();
   */
  Md5.prototype.toString = Md5.prototype.hex;

  /**
   * @method digest
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.digest}
   * @example
   * hash.digest();
   */
  Md5.prototype.digest = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;
    return [
      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,
      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,
      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,
      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF
    ];
  };

  /**
   * @method array
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.array}
   * @example
   * hash.array();
   */
  Md5.prototype.array = Md5.prototype.digest;

  /**
   * @method arrayBuffer
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.arrayBuffer}
   * @example
   * hash.arrayBuffer();
   */
  Md5.prototype.arrayBuffer = function () {
    this.finalize();

    var buffer = new ArrayBuffer(16);
    var blocks = new Uint32Array(buffer);
    blocks[0] = this.h0;
    blocks[1] = this.h1;
    blocks[2] = this.h2;
    blocks[3] = this.h3;
    return buffer;
  };

  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.buffer}
   * @example
   * hash.buffer();
   */
  Md5.prototype.buffer = Md5.prototype.arrayBuffer;

  /**
   * @method base64
   * @memberof Md5
   * @instance
   * @description Output hash as base64 string
   * @returns {String} base64 string
   * @see {@link md5.base64}
   * @example
   * hash.base64();
   */
  Md5.prototype.base64 = function () {
    var v1, v2, v3, base64Str = '', bytes = this.array();
    for (var i = 0; i < 15;) {
      v1 = bytes[i++];
      v2 = bytes[i++];
      v3 = bytes[i++];
      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +
        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +
        BASE64_ENCODE_CHAR[v3 & 63];
    }
    v1 = bytes[i];
    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +
      '==';
    return base64Str;
  };

  var exports = createMethod();

  if (COMMON_JS) {
    module.exports = exports;
  } else {
    /**
     * @method md5
     * @description Md5 hash function, export to global in browsers.
     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
     * @returns {String} md5 hashes
     * @example
     * md5(''); // d41d8cd98f00b204e9800998ecf8427e
     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6
     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0
     *
     * // It also supports UTF-8 encoding
     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07
     *
     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`
     * md5([]); // d41d8cd98f00b204e9800998ecf8427e
     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e
     */
    root.md5 = exports;
    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return exports;
      }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/long/src/long.js":
/*!***************************************!*\
  !*** ./node_modules/long/src/long.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Long;

/**
 * wasm optimizations, to do native i64 multiplication and divide
 */
var wasm = null;

try {
  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11
  ])), {}).exports;
} catch (e) {
  // no wasm support :(
}

/**
 * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
 *  See the from* functions below for more convenient ways of constructing Longs.
 * @exports Long
 * @class A Long class for representing a 64 bit two's-complement integer value.
 * @param {number} low The low (signed) 32 bits of the long
 * @param {number} high The high (signed) 32 bits of the long
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @constructor
 */
function Long(low, high, unsigned) {

    /**
     * The low 32 bits as a signed value.
     * @type {number}
     */
    this.low = low | 0;

    /**
     * The high 32 bits as a signed value.
     * @type {number}
     */
    this.high = high | 0;

    /**
     * Whether unsigned or not.
     * @type {boolean}
     */
    this.unsigned = !!unsigned;
}

// The internal representation of a long is the two given signed, 32-bit values.
// We use 32-bit pieces because these are the size of integers on which
// Javascript performs bit-operations.  For operations like addition and
// multiplication, we split each number into 16 bit pieces, which can easily be
// multiplied within Javascript's floating-point representation without overflow
// or change in sign.
//
// In the algorithms below, we frequently reduce the negative case to the
// positive case by negating the input(s) and then post-processing the result.
// Note that we must ALWAYS check specially whether those values are MIN_VALUE
// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
// a positive number, it overflows back into a negative).  Not handling this
// case would often result in infinite recursion.
//
// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
// methods on which they depend.

/**
 * An indicator used to reliably determine if an object is a Long or not.
 * @type {boolean}
 * @const
 * @private
 */
Long.prototype.__isLong__;

Object.defineProperty(Long.prototype, "__isLong__", { value: true });

/**
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 * @inner
 */
function isLong(obj) {
    return (obj && obj["__isLong__"]) === true;
}

/**
 * Tests if the specified object is a Long.
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 */
Long.isLong = isLong;

/**
 * A cache of the Long representations of small integer values.
 * @type {!Object}
 * @inner
 */
var INT_CACHE = {};

/**
 * A cache of the Long representations of small unsigned integer values.
 * @type {!Object}
 * @inner
 */
var UINT_CACHE = {};

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromInt(value, unsigned) {
    var obj, cachedObj, cache;
    if (unsigned) {
        value >>>= 0;
        if (cache = (0 <= value && value < 256)) {
            cachedObj = UINT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
        if (cache)
            UINT_CACHE[value] = obj;
        return obj;
    } else {
        value |= 0;
        if (cache = (-128 <= value && value < 128)) {
            cachedObj = INT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
            INT_CACHE[value] = obj;
        return obj;
    }
}

/**
 * Returns a Long representing the given 32 bit integer value.
 * @function
 * @param {number} value The 32 bit integer in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromInt = fromInt;

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromNumber(value, unsigned) {
    if (isNaN(value))
        return unsigned ? UZERO : ZERO;
    if (unsigned) {
        if (value < 0)
            return UZERO;
        if (value >= TWO_PWR_64_DBL)
            return MAX_UNSIGNED_VALUE;
    } else {
        if (value <= -TWO_PWR_63_DBL)
            return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
            return MAX_VALUE;
    }
    if (value < 0)
        return fromNumber(-value, unsigned).neg();
    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
}

/**
 * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 * @function
 * @param {number} value The number in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromNumber = fromNumber;

/**
 * @param {number} lowBits
 * @param {number} highBits
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromBits(lowBits, highBits, unsigned) {
    return new Long(lowBits, highBits, unsigned);
}

/**
 * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
 *  assumed to use 32 bits.
 * @function
 * @param {number} lowBits The low 32 bits
 * @param {number} highBits The high 32 bits
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromBits = fromBits;

/**
 * @function
 * @param {number} base
 * @param {number} exponent
 * @returns {number}
 * @inner
 */
var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

/**
 * @param {string} str
 * @param {(boolean|number)=} unsigned
 * @param {number=} radix
 * @returns {!Long}
 * @inner
 */
function fromString(str, unsigned, radix) {
    if (str.length === 0)
        throw Error('empty string');
    if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return ZERO;
    if (typeof unsigned === 'number') {
        // For goog.math.long compatibility
        radix = unsigned,
        unsigned = false;
    } else {
        unsigned = !! unsigned;
    }
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');

    var p;
    if ((p = str.indexOf('-')) > 0)
        throw Error('interior hyphen');
    else if (p === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 8));

    var result = ZERO;
    for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i),
            value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
            var power = fromNumber(pow_dbl(radix, size));
            result = result.mul(power).add(fromNumber(value));
        } else {
            result = result.mul(radixToPower);
            result = result.add(fromNumber(value));
        }
    }
    result.unsigned = unsigned;
    return result;
}

/**
 * Returns a Long representation of the given string, written using the specified radix.
 * @function
 * @param {string} str The textual representation of the Long
 * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed
 * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
 * @returns {!Long} The corresponding Long value
 */
Long.fromString = fromString;

/**
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromValue(val, unsigned) {
    if (typeof val === 'number')
        return fromNumber(val, unsigned);
    if (typeof val === 'string')
        return fromString(val, unsigned);
    // Throws for non-objects, converts non-instanceof Long:
    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);
}

/**
 * Converts the specified value to a Long using the appropriate from* function for its type.
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long}
 */
Long.fromValue = fromValue;

// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
// no runtime penalty for these.

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_16_DBL = 1 << 16;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_24_DBL = 1 << 24;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

/**
 * @type {!Long}
 * @const
 * @inner
 */
var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

/**
 * @type {!Long}
 * @inner
 */
var ZERO = fromInt(0);

/**
 * Signed zero.
 * @type {!Long}
 */
Long.ZERO = ZERO;

/**
 * @type {!Long}
 * @inner
 */
var UZERO = fromInt(0, true);

/**
 * Unsigned zero.
 * @type {!Long}
 */
Long.UZERO = UZERO;

/**
 * @type {!Long}
 * @inner
 */
var ONE = fromInt(1);

/**
 * Signed one.
 * @type {!Long}
 */
Long.ONE = ONE;

/**
 * @type {!Long}
 * @inner
 */
var UONE = fromInt(1, true);

/**
 * Unsigned one.
 * @type {!Long}
 */
Long.UONE = UONE;

/**
 * @type {!Long}
 * @inner
 */
var NEG_ONE = fromInt(-1);

/**
 * Signed negative one.
 * @type {!Long}
 */
Long.NEG_ONE = NEG_ONE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);

/**
 * Maximum signed value.
 * @type {!Long}
 */
Long.MAX_VALUE = MAX_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);

/**
 * Maximum unsigned value.
 * @type {!Long}
 */
Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MIN_VALUE = fromBits(0, 0x80000000|0, false);

/**
 * Minimum signed value.
 * @type {!Long}
 */
Long.MIN_VALUE = MIN_VALUE;

/**
 * @alias Long.prototype
 * @inner
 */
var LongPrototype = Long.prototype;

/**
 * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
 * @returns {number}
 */
LongPrototype.toInt = function toInt() {
    return this.unsigned ? this.low >>> 0 : this.low;
};

/**
 * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
 * @returns {number}
 */
LongPrototype.toNumber = function toNumber() {
    if (this.unsigned)
        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
};

/**
 * Converts the Long to a string written in the specified radix.
 * @param {number=} radix Radix (2-36), defaults to 10
 * @returns {string}
 * @override
 * @throws {RangeError} If `radix` is out of range
 */
LongPrototype.toString = function toString(radix) {
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');
    if (this.isZero())
        return '0';
    if (this.isNegative()) { // Unsigned Longs are never negative
        if (this.eq(MIN_VALUE)) {
            // We need to change the Long value before it can be negated, so we remove
            // the bottom-most digit in this base and then recurse to do the rest.
            var radixLong = fromNumber(radix),
                div = this.div(radixLong),
                rem1 = div.mul(radixLong).sub(this);
            return div.toString(radix) + rem1.toInt().toString(radix);
        } else
            return '-' + this.neg().toString(radix);
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
        rem = this;
    var result = '';
    while (true) {
        var remDiv = rem.div(radixToPower),
            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
            digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
            return digits + result;
        else {
            while (digits.length < 6)
                digits = '0' + digits;
            result = '' + digits + result;
        }
    }
};

/**
 * Gets the high 32 bits as a signed integer.
 * @returns {number} Signed high bits
 */
LongPrototype.getHighBits = function getHighBits() {
    return this.high;
};

/**
 * Gets the high 32 bits as an unsigned integer.
 * @returns {number} Unsigned high bits
 */
LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
    return this.high >>> 0;
};

/**
 * Gets the low 32 bits as a signed integer.
 * @returns {number} Signed low bits
 */
LongPrototype.getLowBits = function getLowBits() {
    return this.low;
};

/**
 * Gets the low 32 bits as an unsigned integer.
 * @returns {number} Unsigned low bits
 */
LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
    return this.low >>> 0;
};

/**
 * Gets the number of bits needed to represent the absolute value of this Long.
 * @returns {number}
 */
LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
    if (this.isNegative()) // Unsigned Longs are never negative
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
    var val = this.high != 0 ? this.high : this.low;
    for (var bit = 31; bit > 0; bit--)
        if ((val & (1 << bit)) != 0)
            break;
    return this.high != 0 ? bit + 33 : bit + 1;
};

/**
 * Tests if this Long's value equals zero.
 * @returns {boolean}
 */
LongPrototype.isZero = function isZero() {
    return this.high === 0 && this.low === 0;
};

/**
 * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.
 * @returns {boolean}
 */
LongPrototype.eqz = LongPrototype.isZero;

/**
 * Tests if this Long's value is negative.
 * @returns {boolean}
 */
LongPrototype.isNegative = function isNegative() {
    return !this.unsigned && this.high < 0;
};

/**
 * Tests if this Long's value is positive.
 * @returns {boolean}
 */
LongPrototype.isPositive = function isPositive() {
    return this.unsigned || this.high >= 0;
};

/**
 * Tests if this Long's value is odd.
 * @returns {boolean}
 */
LongPrototype.isOdd = function isOdd() {
    return (this.low & 1) === 1;
};

/**
 * Tests if this Long's value is even.
 * @returns {boolean}
 */
LongPrototype.isEven = function isEven() {
    return (this.low & 1) === 0;
};

/**
 * Tests if this Long's value equals the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.equals = function equals(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
        return false;
    return this.high === other.high && this.low === other.low;
};

/**
 * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.eq = LongPrototype.equals;

/**
 * Tests if this Long's value differs from the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.notEquals = function notEquals(other) {
    return !this.eq(/* validates */ other);
};

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.neq = LongPrototype.notEquals;

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ne = LongPrototype.notEquals;

/**
 * Tests if this Long's value is less than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThan = function lessThan(other) {
    return this.comp(/* validates */ other) < 0;
};

/**
 * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lt = LongPrototype.lessThan;

/**
 * Tests if this Long's value is less than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
    return this.comp(/* validates */ other) <= 0;
};

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lte = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.le = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is greater than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThan = function greaterThan(other) {
    return this.comp(/* validates */ other) > 0;
};

/**
 * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gt = LongPrototype.greaterThan;

/**
 * Tests if this Long's value is greater than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
    return this.comp(/* validates */ other) >= 0;
};

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gte = LongPrototype.greaterThanOrEqual;

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ge = LongPrototype.greaterThanOrEqual;

/**
 * Compares this Long's value with the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.compare = function compare(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.eq(other))
        return 0;
    var thisNeg = this.isNegative(),
        otherNeg = other.isNegative();
    if (thisNeg && !otherNeg)
        return -1;
    if (!thisNeg && otherNeg)
        return 1;
    // At this point the sign bits are the same
    if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
    // Both are positive if at least one is unsigned
    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
};

/**
 * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.comp = LongPrototype.compare;

/**
 * Negates this Long's value.
 * @returns {!Long} Negated Long
 */
LongPrototype.negate = function negate() {
    if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
    return this.not().add(ONE);
};

/**
 * Negates this Long's value. This is an alias of {@link Long#negate}.
 * @function
 * @returns {!Long} Negated Long
 */
LongPrototype.neg = LongPrototype.negate;

/**
 * Returns the sum of this and the specified Long.
 * @param {!Long|number|string} addend Addend
 * @returns {!Long} Sum
 */
LongPrototype.add = function add(addend) {
    if (!isLong(addend))
        addend = fromValue(addend);

    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = addend.high >>> 16;
    var b32 = addend.high & 0xFFFF;
    var b16 = addend.low >>> 16;
    var b00 = addend.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the difference of this and the specified Long.
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.subtract = function subtract(subtrahend) {
    if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
    return this.add(subtrahend.neg());
};

/**
 * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
 * @function
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.sub = LongPrototype.subtract;

/**
 * Returns the product of this and the specified Long.
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.multiply = function multiply(multiplier) {
    if (this.isZero())
        return ZERO;
    if (!isLong(multiplier))
        multiplier = fromValue(multiplier);

    // use wasm support if present
    if (wasm) {
        var low = wasm.mul(this.low,
                           this.high,
                           multiplier.low,
                           multiplier.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (multiplier.isZero())
        return ZERO;
    if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
    if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;

    if (this.isNegative()) {
        if (multiplier.isNegative())
            return this.neg().mul(multiplier.neg());
        else
            return this.neg().mul(multiplier).neg();
    } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();

    // If both longs are small, use float multiplication
    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = multiplier.high >>> 16;
    var b32 = multiplier.high & 0xFFFF;
    var b16 = multiplier.low >>> 16;
    var b00 = multiplier.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
 * @function
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.mul = LongPrototype.multiply;

/**
 * Returns this Long divided by the specified. The result is signed if this Long is signed or
 *  unsigned if this Long is unsigned.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.divide = function divide(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);
    if (divisor.isZero())
        throw Error('division by zero');

    // use wasm support if present
    if (wasm) {
        // guard against signed division overflow: the largest
        // negative number / -1 would be 1 larger than the largest
        // positive number, due to two's complement.
        if (!this.unsigned &&
            this.high === -0x80000000 &&
            divisor.low === -1 && divisor.high === -1) {
            // be consistent with non-wasm code path
            return this;
        }
        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
    var approx, rem, res;
    if (!this.unsigned) {
        // This section is only relevant for signed longs and is derived from the
        // closure library as a whole.
        if (this.eq(MIN_VALUE)) {
            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
            else if (divisor.eq(MIN_VALUE))
                return ONE;
            else {
                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
                var halfThis = this.shr(1);
                approx = halfThis.div(divisor).shl(1);
                if (approx.eq(ZERO)) {
                    return divisor.isNegative() ? ONE : NEG_ONE;
                } else {
                    rem = this.sub(divisor.mul(approx));
                    res = approx.add(rem.div(divisor));
                    return res;
                }
            }
        } else if (divisor.eq(MIN_VALUE))
            return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
            if (divisor.isNegative())
                return this.neg().div(divisor.neg());
            return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
            return this.div(divisor.neg()).neg();
        res = ZERO;
    } else {
        // The algorithm below has not been made for unsigned longs. It's therefore
        // required to take special care of the MSB prior to running it.
        if (!divisor.unsigned)
            divisor = divisor.toUnsigned();
        if (divisor.gt(this))
            return UZERO;
        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
            return UONE;
        res = UZERO;
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    rem = this;
    while (rem.gte(divisor)) {
        // Approximate the result of division. This may be a little greater or
        // smaller than the actual value.
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

        // We will tweak the approximate result by changing it in the 48-th digit or
        // the smallest non-fractional digit, whichever is larger.
        var log2 = Math.ceil(Math.log(approx) / Math.LN2),
            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

        // Decrease the approximation until it is smaller than the remainder.  Note
        // that if it is too large, the product overflows and is negative.
            approxRes = fromNumber(approx),
            approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
            approx -= delta;
            approxRes = fromNumber(approx, this.unsigned);
            approxRem = approxRes.mul(divisor);
        }

        // We know the answer can't be zero... and actually, zero would cause
        // infinite recursion since we would make no progress.
        if (approxRes.isZero())
            approxRes = ONE;

        res = res.add(approxRes);
        rem = rem.sub(approxRem);
    }
    return res;
};

/**
 * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.div = LongPrototype.divide;

/**
 * Returns this Long modulo the specified.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.modulo = function modulo(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);

    // use wasm support if present
    if (wasm) {
        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    return this.sub(this.div(divisor).mul(divisor));
};

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.mod = LongPrototype.modulo;

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.rem = LongPrototype.modulo;

/**
 * Returns the bitwise NOT of this Long.
 * @returns {!Long}
 */
LongPrototype.not = function not() {
    return fromBits(~this.low, ~this.high, this.unsigned);
};

/**
 * Returns the bitwise AND of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.and = function and(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
};

/**
 * Returns the bitwise OR of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.or = function or(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
};

/**
 * Returns the bitwise XOR of this Long and the given one.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.xor = function xor(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftLeft = function shiftLeft(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
    else
        return fromBits(0, this.low << (numBits - 32), this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shl = LongPrototype.shiftLeft;

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRight = function shiftRight(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
    else
        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
};

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr = LongPrototype.shiftRight;

/**
 * Returns this Long with bits logically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    numBits &= 63;
    if (numBits === 0)
        return this;
    else {
        var high = this.high;
        if (numBits < 32) {
            var low = this.low;
            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);
        } else if (numBits === 32)
            return fromBits(high, 0, this.unsigned);
        else
            return fromBits(high >>> (numBits - 32), 0, this.unsigned);
    }
};

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shru = LongPrototype.shiftRightUnsigned;

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;

/**
 * Converts this Long to signed.
 * @returns {!Long} Signed long
 */
LongPrototype.toSigned = function toSigned() {
    if (!this.unsigned)
        return this;
    return fromBits(this.low, this.high, false);
};

/**
 * Converts this Long to unsigned.
 * @returns {!Long} Unsigned long
 */
LongPrototype.toUnsigned = function toUnsigned() {
    if (this.unsigned)
        return this;
    return fromBits(this.low, this.high, true);
};

/**
 * Converts this Long to its byte representation.
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {!Array.<number>} Byte representation
 */
LongPrototype.toBytes = function toBytes(le) {
    return le ? this.toBytesLE() : this.toBytesBE();
};

/**
 * Converts this Long to its little endian byte representation.
 * @returns {!Array.<number>} Little endian byte representation
 */
LongPrototype.toBytesLE = function toBytesLE() {
    var hi = this.high,
        lo = this.low;
    return [
        lo        & 0xff,
        lo >>>  8 & 0xff,
        lo >>> 16 & 0xff,
        lo >>> 24       ,
        hi        & 0xff,
        hi >>>  8 & 0xff,
        hi >>> 16 & 0xff,
        hi >>> 24
    ];
};

/**
 * Converts this Long to its big endian byte representation.
 * @returns {!Array.<number>} Big endian byte representation
 */
LongPrototype.toBytesBE = function toBytesBE() {
    var hi = this.high,
        lo = this.low;
    return [
        hi >>> 24       ,
        hi >>> 16 & 0xff,
        hi >>>  8 & 0xff,
        hi        & 0xff,
        lo >>> 24       ,
        lo >>> 16 & 0xff,
        lo >>>  8 & 0xff,
        lo        & 0xff
    ];
};

/**
 * Creates a Long from its byte representation.
 * @param {!Array.<number>} bytes Byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {Long} The corresponding Long value
 */
Long.fromBytes = function fromBytes(bytes, unsigned, le) {
    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
};

/**
 * Creates a Long from its little endian byte representation.
 * @param {!Array.<number>} bytes Little endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
    return new Long(
        bytes[0]       |
        bytes[1] <<  8 |
        bytes[2] << 16 |
        bytes[3] << 24,
        bytes[4]       |
        bytes[5] <<  8 |
        bytes[6] << 16 |
        bytes[7] << 24,
        unsigned
    );
};

/**
 * Creates a Long from its big endian byte representation.
 * @param {!Array.<number>} bytes Big endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
    return new Long(
        bytes[4] << 24 |
        bytes[5] << 16 |
        bytes[6] <<  8 |
        bytes[7],
        bytes[0] << 24 |
        bytes[1] << 16 |
        bytes[2] <<  8 |
        bytes[3],
        unsigned
    );
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./src/TEduBoard.js":
/*!**************************!*\
  !*** ./src/TEduBoard.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.function.name */ "./node_modules/core-js/modules/es6.function.name.js");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _board_Board__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./board/Board */ "./src/board/Board.js");
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config/Config */ "./src/config/Config.js");
/* harmony import */ var _board_Event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./board/Event */ "./src/board/Event.js");
/* harmony import */ var _config_Constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config/Constant */ "./src/config/Constant.js");
/* harmony import */ var _cos_FileCos__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cos/FileCos */ "./src/cos/FileCos.js");
/* harmony import */ var _model_TEduBoardToolType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./model/TEduBoardToolType */ "./src/model/TEduBoardToolType.js");
/* harmony import */ var _model_TEduBoardContentFitMode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./model/TEduBoardContentFitMode */ "./src/model/TEduBoardContentFitMode.js");











/**
 * TEduBoard 白板类
 * @constructor
 * @param {Object} options 构造函数参数
 */

function TEduBoard(options) {
  _config_Config__WEBPACK_IMPORTED_MODULE_5__["default"].setNativeVersion(options.nativeVersion);
  _config_Config__WEBPACK_IMPORTED_MODULE_5__["default"].setPlatform(options.platform || _config_Config__WEBPACK_IMPORTED_MODULE_5__["default"].PLATFORM);
  options.tlsData = {
    sdkAppId: options.sdkAppId,
    identifier: options.userId + '',
    userSig: options.userSig
  };
  this.board = new _board_Board__WEBPACK_IMPORTED_MODULE_4__["default"](options);
  this.fileCos = new _cos_FileCos__WEBPACK_IMPORTED_MODULE_8__["default"](options);
  this.version = _config_Config__WEBPACK_IMPORTED_MODULE_5__["default"].VERSION;
  this.event = _board_Event__WEBPACK_IMPORTED_MODULE_6__["default"];
  console.log('tedu board version:', this.version);
}

TEduBoard.getVersion = function () {
  return _config_Config__WEBPACK_IMPORTED_MODULE_5__["default"].VERSION;
};

TEduBoard.EVENT = {
  'TEB_INIT': 'TEB_INIT',
  'TEB_OPERATE_CANUNDO_STATUS_CHANGED': 'TEB_OPERATE_CANUNDO_STATUS_CHANGED',
  'TEB_OPERATE_CANREDO_STATUS_CHANGED': 'TEB_OPERATE_CANREDO_STATUS_CHANGED',
  'TEB_ADDBOARD': 'TEB_ADDBOARD',
  'TEB_SYNCDATA': 'TEB_SYNCDATA',
  'TEB_ERROR': 'TEB_ERROR',
  'TEB_WARNING': 'TEB_WARNING',
  'TEB_HISTROYDATA_SYNCCOMPLETED': 'TEB_HISTROYDATA_SYNCCOMPLETED',
  'TEB_IMAGE_STATUS_CHANGED': 'TEB_IMAGE_STATUS_CHANGED',
  'TEB_H5BACKGROUND_STATUS_CHANGED': 'TEB_H5BACKGROUND_STATUS_CHANGED',
  'TEB_DELETEBOARD': 'TEB_DELETEBOARD',
  'TEB_GOTOBOARD': 'TEB_GOTOBOARD',
  'TEB_ADDH5PPTFILE': 'TEB_ADDH5PPTFILE',
  'TEB_ADDFILE': 'TEB_ADDFILE',
  'TEB_DELETEFILE': 'TEB_DELETEFILE',
  'TEB_FILEUPLOADSTATUS': 'TEB_FILEUPLOADSTATUS',
  'TEB_SWITCHFILE': 'TEB_SWITCHFILE',
  'TEB_SETBACKGROUNDIMAGE': 'TEB_SETBACKGROUNDIMAGE',
  'TEB_FILEUPLOADPROGRESS': 'TEB_FILEUPLOADPROGRESS'
};
TEduBoard.TOOL_TYPE = _model_TEduBoardToolType__WEBPACK_IMPORTED_MODULE_9__["default"];
TEduBoard.CONTENT_FIT_MODE = _model_TEduBoardContentFitMode__WEBPACK_IMPORTED_MODULE_10__["default"];
/**
 * @private
 * @description 事件监听
 * @param {String} name 事件名称
 * @param {Function} callback 事件回调
 */

TEduBoard.prototype.on = function (name, callback) {
  _board_Event__WEBPACK_IMPORTED_MODULE_6__["default"].on(name, callback);
};
/**
 * @private
 * @description 取消事件监听
 * @param {String} name 事件名称
 * @param {Function} callback 事件回调
 */


TEduBoard.prototype.off = function (name, callback) {
  _board_Event__WEBPACK_IMPORTED_MODULE_6__["default"].off(name, callback);
};
/**
 * d1.7 获取SDK版本号
 * @return SDK版本号
 */


TEduBoard.prototype.getVersion = function () {
  return this.version;
};
/**
 * 增加一页白板
 * @param url 要使用的背景图片URL，为空字符串表示不指定背景图片
 * @return 白板ID
 * @info 白板页会被添加到当前文件
 */


TEduBoard.prototype.addBoard = function (url, position) {
  var newBoardId = this.board.addBoard();
  this.board.setBackgroundPic(url, position);
  return newBoardId;
};
/**
 * d3.2 删除一页白板
 * @param boardId 要删除的白板ID，为空字符串表示删除当前页
 * @info 允许删除任意文件的白板页，默认白板页无法删除
 */


TEduBoard.prototype.deleteBoard = function (boardId) {
  this.board.deleteBoard(boardId);
};
/**
 * d3.3 上一步
 * @info 每个Step对应PPT的一个动画效果，若当前没有已展示的动画效果，则该接口调用会导致向前翻页
 */


TEduBoard.prototype.prevStep = function () {
  this.board.prevStep();
};
/**
 * d3.4 下一步
 * @info 每个Step对应PPT的一个动画效果，若当前没有未展示的动画效果，则该接口调用会导致向后翻页
 */


TEduBoard.prototype.nextStep = function () {
  this.board.nextStep();
};
/**
 * 向前翻页
 * @description 若当前白板页为当前文件的第一页，则该接口调用无效
 * @param resetStep {Boolean} 是否要重置动画步数，默认false
 */


TEduBoard.prototype.prevBoard = function (resetStep) {
  this.board.prevBoard(resetStep);
};
/**
 * 向后翻页
 * @info 若当前白板页为当前文件的最后一页，则该接口调用无效
 * @param resetStep {Boolean} 是否要重置动画步数，默认false
 */


TEduBoard.prototype.nextBoard = function (resetStep) {
  this.board.nextBoard(resetStep);
};
/**
 * 跳转到指定白板页
 * @param boardId            要跳转到的白板页ID
 * @param resetStep {Boolean} 是否要重置动画步数，默认false
 * @info 允许跳转到任意文件的白板页
 */


TEduBoard.prototype.gotoBoard = function (boardId, resetStep) {
  if (boardId) {
    this.board.switchBoard(boardId, resetStep);
  }
};
/**
 * d3.8 获取当前白板页ID
 * @return 当前白板页ID
 */


TEduBoard.prototype.getCurrentBoard = function () {
  return this.board.getCurrentBoard();
};
/**
 * d3.9 获取所有文件的白板列表
 * @return 所有文件的白板列表
 */


TEduBoard.prototype.getBoardList = function () {
  return this.board.getBoardList();
};
/**
 * d3.10 设置当前白板页宽高比, 只能设置普通白板
 * @param ratio   要设置的白板宽高比
 * @info 4:3 16:9
 */


TEduBoard.prototype.setBoardRatio = function (ratio) {
  this.board.setBoardRatio(ratio);
};
/**
 * d3.10 获取当前白板的宽高比
 * @return 返回当前白板的宽高比
 */


TEduBoard.prototype.getBoardRatio = function () {
  return this.board.getBoardRatio();
};
/**
 * d4.1 增加文件
 * @param path                要增加的文件路径
 * @info 支持 PPT、PDF、Word、Excel
 * @info 调用该接口后，SDK会先将文件上传到COS后再执行后续操作，因此该接口会触发文件上传相关回调
 * @info 文件上传成功后，将自动切换到该文件
 */


TEduBoard.prototype.addFile = function (fileObj) {
  var _this = this;

  var fileName = '';

  if (fileObj.data) {
    if (Object.prototype.toString.call(fileObj.data) === '[object File]') {
      fileName = fileObj.data.name;
    } else {
      fileName = fileObj.name;
    } // 如果上传的是图片


    if (/\.(bmp|jpg|jpeg|png|gif|webp|svg|psd|ai)/i.test(fileName)) {
      this.fileCos.uploadImgFile(fileObj, function (imgUrl) {
        _this.board.setBackgroundPic(imgUrl);
      });
    } else {
      this.fileCos.uploadFile(fileObj, function (totalPage, info) {
        _this.board.addFile(info.picUrls, info.fileName, info.fileUrl, info.ratio);
      });
    }
  } else if (Object.prototype.toString.call(fileObj) === '[object String]') {
    // 如果是字符串类型
    var url = fileObj;
    this.fileCos.addFileFromCosUrl(url, function (totalPage, picUrls, fileName, ratio) {
      _this.board.addFile(picUrls, fileName, url, ratio);
    }, function () {});
  }
};
/**
 * d4.2 增加H5动画PPT文件
 * @param url                要增加的H5动画PPT的URL
 * @info 调用该接口后，SDK会在后台进行H5加载，期间用户可正常进行其它操作，加载成功或失败后会触发相应回调
 * @info H5加载成功后，将自动切换到该文件
 */


TEduBoard.prototype.addH5PPTFile = function (url) {
  this.board.addH5PPTFile(url);
};
/**
 * d4.3 删除文件
 * @param fileId            要删除的文件ID
 * @info 文件ID为空字符串时表示当前文件，默认文件无法删除
 */


TEduBoard.prototype.deleteFile = function (fid) {
  this.board.deleteFile(fid);
};
/**
 * d4.4 切换文件
 * @param fileId            要切换到的文件ID
 * @info 文件ID为必填项，为空字符串将导致文件切换失败
 */


TEduBoard.prototype.switchFile = function (fid) {
  this.board.switchFile(fid);
};
/**
 * d4.5 获取当前文件ID
 * @return 当前文件ID
 */


TEduBoard.prototype.getCurrentFile = function () {
  return this.board.getCurrentFile();
};
/**
 * @description 根据指定文件id获取文件信息
 * @method getFileInfo
 * @param fid {String} 文件ID
 * @return 文件信息
 */


TEduBoard.prototype.getFileInfo = function (fid) {
  return this.board.getFileInfo(fid);
};
/**
 * d4.6 获取白板中上传的所有文件的文件信息列表
 * @return 文件信息列表
 */


TEduBoard.prototype.getFileInfoList = function () {
  return this.board.getGroup();
};
/**
 * d4.7 获取指定文件的白板ID列表
 * @param fileId            文件ID
 * @return 白板ID列表
 */


TEduBoard.prototype.getFileBoardList = function (fid) {
  return this.board.getBoardByGroup(fid);
};
/**
 * d4.8 清空指定文件的所有白板涂鸦
 * @param fileId  文件ID
 */


TEduBoard.prototype.clearFileDraws = function (fid) {
  this.board.clearFileDraws(fid);
};
/**
 * d1.6 重置白板
 * @info 调用该接口后将会删除所有的白板页和文件
 */


TEduBoard.prototype.reset = function () {
  this.board.clearAll();
};
/**
 * d1.5 添加白板同步数据
 * @param data                 接收到的房间内其他人发送的同步数据
 * @info 该接口用于多个白板间的数据同步，使用内置IM作为信令通道时，不需要调用该接口
 */


TEduBoard.prototype.addSyncData = function (data) {
  this.board.addData(data);
};
/**
 * d2.1 设置白板是否允许涂鸦
 * @param enabled             是否允许涂鸦，true 表示白板可以涂鸦，false 表示白板不能涂鸦
 * @info 白板创建后默认为允许涂鸦状态
 */


TEduBoard.prototype.setDrawEnable = function (enabled) {
  this.board.setCanDraw(enabled);
};
/**
 * d2.2 获取白板是否允许涂鸦
 * @return 是否允许涂鸦，true 表示白板可以涂鸦，false 表示白板不能涂鸦
 */


TEduBoard.prototype.isDrawEnable = function () {
  return this.board.isDrawEnable();
};
/**
 * d2.3 设置白板默认背景色
 * @param color             要设置的默认背景色
 * @info 白板创建后默认背景色为白色
 */


TEduBoard.prototype.setGlobalBackgroundColor = function (color) {
  this.board.setGlobalBackgroundColor(color);
};
/**
 * d2.4 获取白板默认背景色
 * @return 默认背景色
 */


TEduBoard.prototype.getGlobalBackgroundColor = function () {
  return this.board.getGlobalBackgroundColor();
};
/**
 * d2.5 设置当前白板页的背景色
 * @param color             要设置的背景色
 * @info 白板页创建以后的默认背景色由SetDefaultBackgroundColor接口设定
 */


TEduBoard.prototype.setBackgroundColor = function (color) {
  this.board.setBackgroundColor(color);
};
/**
 * d2.6 获取当前白板页的背景色
 * @return 当前白板页的背景色
 */


TEduBoard.prototype.getBackgroundColor = function () {
  return this.board.getBackgroundColor();
};
/**
 * d2.7 设置要使用的白板工具
 * @param type                 要设置的白板工具
 */


TEduBoard.prototype.setToolType = function (type) {
  this.board.setType(type);
};
/**
 * d2.8 获取正在使用的白板工具
 * @return 正在使用的白板工具
 */


TEduBoard.prototype.getToolType = function () {
  return this.board.getToolType();
};
/**
 * d2.9 设置画笔颜色
 * @param color             要设置的画笔颜色
 * @info 画笔颜色用于所有涂鸦绘制，白板创建后默认画笔颜色为红色
 */


TEduBoard.prototype.setBrushColor = function (color) {
  this.board.setColor(color);
};
/**
 * d2.10 获取画笔颜色
 * @return 画笔颜色
 */


TEduBoard.prototype.getBrushColor = function () {
  return this.board.getBrushColor();
};
/**
 * d2.11 设置画笔粗细
 * @param thin                 要设置的画笔粗细
 * @info 画笔粗细用于所有涂鸦绘制，实际像素值取值(thin * 白板的高度 / 10000)px，如果结果小于1px，则涂鸦的线条会比较虚
 */


TEduBoard.prototype.setBrushThin = function (thin) {
  this.board.setThin(thin);
};
/**
 * d2.12 获取画笔粗细
 * @return 画笔粗细
 */


TEduBoard.prototype.getBrushThin = function () {
  return this.board.getBrushThin();
};
/**
 * d2.13 设置文本颜色
 * @param color             要设置的文本颜色
 */


TEduBoard.prototype.setTextColor = function (color) {
  this.board.setTextColor(color);
};
/**
 * d2.14 获取文本颜色
 * @return 文本颜色
 */


TEduBoard.prototype.getTextColor = function () {
  return this.board.getTextColor();
};
/**
 * d2.15 设置文本大小
 * @param thin                 要设置的文本大小
 * @info 实际像素值取值(size * 白板的高度 / 10000)px
 */


TEduBoard.prototype.setTextSize = function (size) {
  this.board.setTextSize(size);
};
/**
 * d2.16 获取文本大小
 * @return 文本大小
 */


TEduBoard.prototype.getTextSize = function () {
  return this.board.getTextSize();
};
/**
 * d2.17 清空当前白板页涂鸦
 * @param clearBackground     是否同时清空背景色以及背景图片
 */


TEduBoard.prototype.clear = function (clearBackground) {
  if (clearBackground) {
    this.board.clear();
  } else {
    this.board.clearDraws();
  }
};
/**
 * d2.18 设置当前白板页的背景图片
 * @param url                 要设置的背景图片URL
 * @param mode                要使用的图片填充对齐模式
 * @info 当URL是一个有效的本地文件地址时，该文件会被自动上传到COS
 * @info 该接口与SetBackgroundH5接口互斥
 */


TEduBoard.prototype.setBackgroundImage = function (url, position) {
  var _this2 = this;

  if (Object.prototype.toString.call(url) === '[object String]') {
    this.board.setBackgroundPic(url, position);
  } else if (Object.prototype.toString.call(url) === '[object Object]') {
    var fileObj = url;
    this.fileCos.uploadImgFile(fileObj, function (imgUrl) {
      _this2.board.setBackgroundPic(imgUrl, position);
    });
  }
};
/**
 * d2.19 设置当前白板页的背景H5页面
 * @param url                要设置的背景H5页面URL
 * @info 该接口与SetBackgroundImage接口互斥
 */


TEduBoard.prototype.setBackgroundH5 = function (url) {
  this.board.setBackgroundH5(url);
};
/**
 * d2.20 撤销当前白板页上一次动作
 */


TEduBoard.prototype.undo = function () {
  this.board.undo();
};
/**
 * d2.21 重做当前白板页上一次撤销
 */


TEduBoard.prototype.redo = function () {
  this.board.redo();
};
/**
 * d2.22 重新计算白板大小，并渲染
 */


TEduBoard.prototype.resize = function () {
  this.board.resize();
};
/**
 * d2.23 设置文字样式
 * @param {Number} textStyle   0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0
 */


TEduBoard.prototype.setTextStyle = function (textStyle) {
  this.board.setTextFontStyle(textStyle);
};
/**
 * d2.24 获取文字样式
 * @return 文字样式
 */


TEduBoard.prototype.getTextStyle = function () {
  return this.board.getTextFontStyle();
};
/**
 * d2.25 设置文字字体
 * @param {String} textFace 默认 sans-serif,serif,monospace
 */


TEduBoard.prototype.setTextFamily = function (textFamily) {
  this.board.setTextFontFamily(textFamily);
};
/**
 * d2.26 获取文字字体
 * @return 文字字体
 */


TEduBoard.prototype.getTextFamily = function () {
  return this.board.getTextFontFamily();
};
/**
 * 设置当前白板缩放比
 * @param {Number} scale 白板缩放比
 */


TEduBoard.prototype.setBoardScale = function (scale) {
  this.board.setBoardScale(scale);
};
/**
 * d2.23 获取当前白板缩放比
 * @return 白板缩放比
 */


TEduBoard.prototype.getBoardScale = function () {
  return this.board.getBoardScale();
};
/**
 * d2.27 设置是否启用数据同步
 * @param enable 是否启用数据同步
 */


TEduBoard.prototype.setDataSyncEnable = function (enable) {
  this.board.setDataSyncEnable(enable);
};
/**
 * 检查是否启用数据同步
 * @returns {*} 是否启用数据同步
 */


TEduBoard.prototype.isDataSyncEnable = function () {
  return this.board.isDataSyncEnable();
};
/**
 * d2.27 设置文件显示模式
 * @param enable 是否启用数据同步
 */


TEduBoard.prototype.setBoardContentFitMode = function (mode) {
  this.board.setBoardContentFitMode(mode);
};
/**
 * 获取文件平铺模式
 * @returns {*} 返回文件平铺模式
 */


TEduBoard.prototype.getBoardContentFitMode = function () {
  return this.board.getBoardContentFitMode();
};

/* harmony default export */ __webpack_exports__["default"] = (TEduBoard);

/***/ }),

/***/ "./src/board/Board.js":
/*!****************************!*\
  !*** ./src/board/Board.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.object.keys */ "./node_modules/core-js/modules/es6.object.keys.js");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.array.find */ "./node_modules/core-js/modules/es6.array.find.js");
/* harmony import */ var core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es6.array.fill */ "./node_modules/core-js/modules/es6.array.fill.js");
/* harmony import */ var core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_string_ends_with__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es6.string.ends-with */ "./node_modules/core-js/modules/es6.string.ends-with.js");
/* harmony import */ var core_js_modules_es6_string_ends_with__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_ends_with__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _Store__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Store */ "./src/board/Store.js");
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _config_Constant__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../config/Constant */ "./src/config/Constant.js");
/* harmony import */ var _Event__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Event */ "./src/board/Event.js");
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _util_FitCurve__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../util/FitCurve */ "./src/util/FitCurve.js");
/* harmony import */ var _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../net/ELKLog */ "./src/net/ELKLog.js");
/* harmony import */ var _H5Control__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./H5Control */ "./src/board/H5Control.js");
/* harmony import */ var _model_TEduBoardImageStatus__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../model/TEduBoardImageStatus */ "./src/model/TEduBoardImageStatus.js");
/* harmony import */ var _model_TEduBoardWarningCode__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../model/TEduBoardWarningCode */ "./src/model/TEduBoardWarningCode.js");
/* harmony import */ var _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../model/TEduBoardErrorCode */ "./src/model/TEduBoardErrorCode.js");
/* harmony import */ var _model_TeduBoardH5BackgroudStatus__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../model/TeduBoardH5BackgroudStatus */ "./src/model/TeduBoardH5BackgroudStatus.js");
/* harmony import */ var _GroupTemplate__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./GroupTemplate */ "./src/board/GroupTemplate.js");
/* harmony import */ var AlloyFinger__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! AlloyFinger */ "./node_modules/AlloyFinger/alloy_finger.js");
/* harmony import */ var AlloyFinger__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(AlloyFinger__WEBPACK_IMPORTED_MODULE_26__);




























function Board(options) {
  var _this = this;

  if (!(this instanceof Board)) {
    return new Board(options);
  }

  this.option = Object.assign({}, options);
  console.log(options);
  this.container = document.getElementById(this.option.id);

  if (!this.container) {
    setTimeout(function () {
      _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(_this, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_23__["default"].TEDU_BOARD_ERROR_INIT, 'not found id:' + _this.option.id + ' Node');
    }, 10);
    return;
  } // 课堂id


  this.classId = this.option.classId;
  this.canDraw = true;

  if (Object.prototype.toString.call(options.drawEnable) === '[object Undefined]' || Object.prototype.toString.call(options.drawEnable) === '[object Null]') {
    this.canDraw = true;
  } else {
    this.canDraw = !!options.drawEnable;
  }

  this.pinchScale = []; // 移动端手指捏合系数集合

  this.beforePinchScale; // 捏合前的比例

  this.isMoving = false; // 是否在移动

  this.minLineWidth = options.minLineWidth || _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].MIN_LINE_WIDTH; // 涂鸦最小的像素

  this.store = new _Store__WEBPACK_IMPORTED_MODULE_13__["default"](options);
  this.init();
} // 重置画布


Board.prototype.resize = function () {
  this.draw();
};

Board.prototype.getEventLocation = function (e) {
  var result = {
    x: 0,
    y: 0,
    ox: 0,
    // 原始数据x
    oy: 0 // 原始数据y

  };
  var eventX, eventY;

  if (e.offsetX) {
    eventX = e.offsetX;
    eventY = e.offsetY;
    result.clientX = parseInt(e.clientX);
    result.clientY = parseInt(e.clientY);
  } else if (e.changedTouches) {
    var boardBox = e.currentTarget.getElementsByClassName('tx_board_canvas_box')[0];
    var boardBoxOffset = boardBox.getBoundingClientRect();
    eventX = e.changedTouches[0]['pageX'] - boardBoxOffset.left - boardBox.ownerDocument.defaultView.pageXOffset;
    eventY = e.changedTouches[0]['pageY'] - boardBoxOffset.top - boardBox.ownerDocument.defaultView.pageYOffset;
    result.clientX = parseInt(e.changedTouches[0].clientX);
    result.clientY = parseInt(e.changedTouches[0].clientY);
  } else {
    // 外层元素位置会变
    eventX = e.pageX - this.container.offsetLeft;
    eventY = e.pageY - this.container.offsetTop;
    result.clientX = parseInt(e.clientX);
    result.clientY = parseInt(e.clientY);
  } // 要转一下x


  result.x = parseInt(eventX / this.width * 10000);
  result.y = parseInt(eventY / this.height * 10000); // 保存原始数据

  result.ox = parseInt(eventX);
  result.oy = parseInt(eventY);
  return result;
}; // 全局重绘


Board.prototype.draw = function () {
  if (!this.store.getCurrentBoard()) {
    return;
  }

  var self = this; // 填充画板
  // 目前认为画板是透明的 暂时不添加背景色

  var transparent = this.store.getTransparent(); // 获取当前白板的数据

  var boardData = this.store.getCurrentBoardData();
  var currentPic = boardData.backgroundPic;

  if (!this.layout()) {
    this.store.setNeedDraw(true);
    return;
  }

  var ctx = self.el.getContext("2d"); // 先清空画板

  ctx.clearRect(0, 0, self.width, self.height);
  var fileInfo;
  var preloadTriggered = false;

  if (this.getCurrentFile() != _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_GROUP) {
    // 如果不是默认白板组
    fileInfo = this.getFileInfo(this.getCurrentFile()) || {
      type: _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.IMG
    };
    var originSrc = this.iframeDOM.getAttribute('src') || '';

    if (fileInfo.type == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.H5 && fileInfo.downloadURL) {
      var originPath = '';

      if (originSrc && originSrc.indexOf('?') > -1) {
        originPath = originSrc.substring(0, originSrc.indexOf('?'));
      } else {
        originPath = originSrc;
      }

      var downloadPath = '';

      if (fileInfo.downloadURL.indexOf('?') > -1) {
        downloadPath = fileInfo.downloadURL.substring(0, fileInfo.downloadURL.indexOf('?'));
      } else {
        downloadPath = fileInfo.downloadURL;
      }

      if (originPath != downloadPath) {
        this.iframeDOM.removeAttribute('src');
        var url = fileInfo.downloadURL;

        if (url.indexOf('?') > -1) {
          url += "&page=".concat(fileInfo.currentPageIndex, "&step=").concat(fileInfo.currentPageStep);
        } else {
          url += "?page=".concat(fileInfo.currentPageIndex, "&step=").concat(fileInfo.currentPageStep);
        }

        this.iframeDOM.setAttribute('src', url);
        preloadTriggered = true;
      }
    } else {
      this.iframeDOM.removeAttribute('src');
    }
  } else {
    this.iframeDOM.removeAttribute('src');
  } // ------------------------------  渲染图片 start --------------------------------------------- 


  if (currentPic.url && currentPic.show) {
    if (currentPic.type === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].BACKGROUND_TYPE.IMAGE) {
      // 如果背景是图片
      var mode = currentPic.mode || _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT;

      if (currentPic.url !== self.img.src && encodeURI(currentPic.url) !== self.img.src && decodeURI(currentPic.url) !== decodeURI(self.img.src)) {
        // 图片开始加载的事件
        var startLoadTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp();

        self.img.onload = function () {
          var styles = ['display:none', 'position:absolute', 'z-index:5']; // 图片原始宽高

          var naturalWidth = self.img.naturalWidth;
          var naturalHeight = self.img.naturalHeight;
          var isHeightCriterion = self.width / self.height > naturalWidth / naturalHeight; // 是否是以高度为标准

          if (isHeightCriterion) {
            // 以高度为标准（撑满高度）
            self.img.setAttribute('height', self.height);

            if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT) {
              // 默认
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.LEFT) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:0;z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.TOP) {
              // 铺满高度后，居底和居顶都无效
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.RIGHT) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; right:0;z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.BOTTOM) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;'); // 铺满高度后，居底和居顶都无效
            }

            self.img.removeAttribute('width');
          } else {
            // 以宽度为标准
            self.img.setAttribute('width', self.width);

            if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT) {
              // 默认
              self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.LEFT) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;'); // 铺满宽度后，居左和居右都无效
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.TOP) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:0;z-index:5;');
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.RIGHT) {
              self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;'); // 铺满宽度后，居左和居右都无效
            } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.BOTTOM) {
              self.img.setAttribute('style', 'display:none; position:absolute; bottom:0; left:0;z-index:5;');
            }

            self.img.removeAttribute('height');
          }

          self.img.style.display = 'block';
          self.img.onload = null;
          clearTimeout(self.pregressTask);
          self.progress.style.display = 'none'; // 图片加载完成

          _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_IMAGE_STATUS_CHANGED', _model_TEduBoardImageStatus__WEBPACK_IMPORTED_MODULE_21__["default"].TEDU_BOARD_IMAGE_STATUS_LOAD_DONE, {
            currentBoardId: self.getCurrentBoard(),
            imgUrl: currentPic.url,
            currentImgUrl: self.img.currentSrc
          }); // 图片加载完成

          _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('load_succ_img', {
            time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startLoadTime,
            image_url: currentPic.url,
            boardid: self.getCurrentBoard(),
            extra_info: JSON.stringify({
              image_url: currentPic.url,
              boardid: self.getCurrentBoard(),
              currentSrc: self.img.currentSrc
            })
          }); // 触发预加载

          self.store.preloadBoard();
        };

        self.img.onabort = function () {
          self.img.onabort = null;
          clearTimeout(self.pregressTask);
          self.progress.style.display = 'none';
          _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_IMAGE_STATUS_CHANGED', _model_TEduBoardImageStatus__WEBPACK_IMPORTED_MODULE_21__["default"].TEDU_BOARD_IMAGE_STATUS_LOAD_ABORT, {
            currentBoardId: self.getCurrentBoard(),
            imgUrl: currentPic.url,
            currentImgUrl: self.img.currentSrc
          }); // 图片加载中断

          _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('load_abort_img', {
            time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startLoadTime,
            image_url: currentPic.url,
            boardid: self.getCurrentBoard(),
            extra_info: JSON.stringify({
              image_url: currentPic.url,
              boardid: self.getCurrentBoard(),
              currentSrc: self.img.currentSrc
            })
          }); // 触发预加载

          self.store.preloadBoard();
        };

        self.img.onerror = function () {
          var currentSrc = self.img.currentSrc;

          if (currentSrc.endsWith('try=1')) {
            self.img.style.display = 'none';
            self.img.onerror = null;
            clearTimeout(self.pregressTask);
            self.progress.style.display = 'none';
            console.error('>>> 图片加载失败：', currentPic.url);
            _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_IMAGE_STATUS_CHANGED', _model_TEduBoardImageStatus__WEBPACK_IMPORTED_MODULE_21__["default"].TEDU_BOARD_IMAGE_STATUS_LOAD_ERROR, {
              currentBoardId: self.getCurrentBoard(),
              imgUrl: currentPic.url,
              currentImgUrl: self.img.currentSrc
            }); // 图片加载错误

            _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('load_error_img', {
              time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startLoadTime,
              image_url: currentPic.url,
              boardid: self.getCurrentBoard(),
              extra_info: JSON.stringify({
                image_url: currentPic.url,
                boardid: self.getCurrentBoard(),
                currentSrc: self.img.currentSrc
              })
            });
          } else {
            console.error('>>> 图片重新加载：', currentPic.url);
            var tempUrl = currentPic.url;

            if (currentPic.url.indexOf('?') > -1) {
              tempUrl += '&try=1';
            } else {
              tempUrl += '?try=1';
            }

            self.img.src = tempUrl; // 图片加载错误，重新加载

            _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('load_try_img', {
              time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startLoadTime,
              image_url: tempUrl,
              boardid: self.getCurrentBoard(),
              extra_info: JSON.stringify({
                image_url: tempUrl,
                boardid: self.getCurrentBoard(),
                currentSrc: self.img.currentSrc
              })
            });
          } // 触发预加载


          self.store.preloadBoard();
        }; // 图片开始加载


        _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_IMAGE_STATUS_CHANGED', _model_TEduBoardImageStatus__WEBPACK_IMPORTED_MODULE_21__["default"].TEDU_BOARD_IMAGE_STATUS_LOADING, {
          currentBoardId: self.getCurrentBoard(),
          imgUrl: currentPic.url,
          currentImgUrl: self.img.currentSrc
        }); // 开始加载图片

        _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('start_load_img', {
          image_url: currentPic.url,
          boardid: self.getCurrentBoard(),
          extra_info: JSON.stringify({
            image_url: currentPic.url,
            boardid: self.getCurrentBoard(),
            currentSrc: self.img.currentSrc
          })
        });
        self.img.style.display = 'none';
        self.img.src = currentPic.url;
        preloadTriggered = true;
        clearTimeout(this.pregressTask);
        self.pregressTask = setTimeout(function () {
          if (self.store.isProgressEnable()) {
            self.progress.style.display = 'block';
          }
        }, _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].PROGRESS_SHOW_DELAY);
      } else {
        // 则认为图片加载过了，这时候只要重新修改图片宽高就可以
        // 图片原始宽高
        self.img.style.display = 'none';
        var naturalWidth = self.img.naturalWidth;
        var naturalHeight = self.img.naturalHeight;
        var isHeightCriterion = self.width / self.height > naturalWidth / naturalHeight; // 是否是以高度为标准

        if (isHeightCriterion) {
          // 高度铺满
          self.img.setAttribute('height', self.height);

          if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT) {
            // 默认
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;');
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.LEFT) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:0;z-index:5;');
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.TOP) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;'); // 铺满高度后，居底和居顶都无效
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.RIGHT) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; right: 0;z-index:5;');
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.BOTTOM) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:50%;transform: translateX(-50%);-webkit-transform: translateX(-50%);z-index:5;'); // 铺满高度后，居底和居顶都无效
          }

          self.img.removeAttribute('width');
        } else {
          self.img.setAttribute('width', self.width);

          if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT) {
            // 默认
            self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;');
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.LEFT) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;'); // 铺满宽度后，居左和居右都无效
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.TOP) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:0; left:0;z-index:5;');
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.RIGHT) {
            self.img.setAttribute('style', 'display:none; position:absolute; top:50%; left:0;transform: translateY(-50%);-webkit-transform: translateY(-50%);z-index:5;'); // 铺满宽度后，居左和居右都无效
          } else if (mode === _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.BOTTOM) {
            self.img.setAttribute('style', 'display:none; position:absolute; bottom:0; left:0;z-index:5;');
          }

          self.img.removeAttribute('height');
        }

        self.img.style.display = 'block';
      }

      self.bgH5.style.display = 'none';
      self.bgH5.removeAttribute('src');
      self.bgH5.removeAttribute('width');
      self.bgH5.removeAttribute('height');
      preloadTriggered = true;
    } else {
      // 如果是H5
      // 当前背景url
      self.img.removeAttribute('src');
      self.img.removeAttribute('width');
      self.img.removeAttribute('height');
      var bgH5Url = self.bgH5.getAttribute('src');
      self.bgH5.setAttribute('width', self.width);
      self.bgH5.setAttribute('height', self.height);

      if (bgH5Url !== currentPic.url && bgH5Url !== encodeURI(currentPic.url)) {
        self.bgH5.setAttribute('src', currentPic.url);
        preloadTriggered = true;
        clearTimeout(this.pregressTask);
        self.pregressTask = setTimeout(function () {
          if (self.store.isProgressEnable()) {
            self.progress.style.display = 'block';
          }
        }, _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].PROGRESS_SHOW_DELAY); // 正在加载

        _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_H5BACKGROUND_STATUS_CHANGED', _model_TeduBoardH5BackgroudStatus__WEBPACK_IMPORTED_MODULE_24__["default"].TEDU_BOARD_H5_BACKGROUND_STATUS_LOADING, {
          currentBoardId: self.getCurrentBoard(),
          url: currentPic.url
        });
      }

      self.bgH5.style.display = 'block';
    }
  } else {
    self.img.removeAttribute('src');
    self.img.removeAttribute('width');
    self.img.removeAttribute('height');
    self.img.style.display = 'none';
    self.bgH5.style.display = 'none';
    self.bgH5.removeAttribute('src');
    self.bgH5.removeAttribute('width');
    self.bgH5.removeAttribute('height');
  } // ------------------------------  渲染图片 end --------------------------------------------- 
  // ------------------------------  渲染背景色 start --------------------------------------------- 


  if (this.getCurrentFile() == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_GROUP) {
    // 如果是默认白板组
    // 有正常的背景色
    if (boardData.backgroundColor) {
      this.bgDiv.setAttribute('style', "z-index:4;position:absolute; top:0; left:0;background-color:".concat(boardData.backgroundColor, ";width:").concat(this.width, "px;height:").concat(this.height, "px;"));
    } else {
      this.bgDiv.setAttribute('style', 'z-index:4;position:absolute; top:0; left:0;');
    }
  } else {
    // 如果不是默认白板组
    fileInfo = null;
    fileInfo = this.getFileInfo(this.getCurrentFile()) || {
      type: _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.IMG
    };

    if (fileInfo.type == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.IMG) {
      // 有正常的背景色
      if (boardData.backgroundColor) {
        this.bgDiv.setAttribute('style', "z-index:4;position:absolute; top:0; left:0;background-color:".concat(boardData.backgroundColor, ";width:").concat(this.width, "px;height:").concat(this.height, "px;"));
      } else {
        this.bgDiv.setAttribute('style', 'z-index:4;position:absolute; top:0; left:0;');
      }
    } else {
      this.bgDiv.setAttribute('style', 'z-index:4;position:absolute; top:0; left:0;');
    }
  } // ------------------------------  渲染背景色 end --------------------------------------------- 


  drawData.apply(this);

  if (!preloadTriggered) {
    // 触发预加载
    this.store.preloadBoard();
  } // 画椭圆(不精确，废弃)


  function drawEllipse(context, x, y, a, b, fill, color) {
    context.save();
    var r = a > b ? a : b;
    var ratioX = a / r;
    var ratioY = b / r;
    context.scale(ratioX, ratioY);
    context.beginPath();
    context.arc(x / ratioX, y / ratioY, r, 0, 2 * Math.PI, false);
    context.closePath();
    context.restore();

    if (fill) {
      context.fillStyle = color;
      context.fill();
    }
  } // 画圆


  function BezierEllipse2(context, x, y, a, b, fill, color) {
    var k = .5522848,
        ox = a * k,
        // 水平控制点偏移量
    oy = b * k; // 垂直控制点偏移量

    context.beginPath(); //从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线

    context.moveTo(x - a, y);
    context.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);
    context.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);
    context.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);
    context.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);
    context.closePath();
    context.stroke();

    if (fill) {
      context.fillStyle = color;
      context.fill();
    }
  }

  function drawData() {
    var data = boardData.data;
    data = data.sort(function (item1, item2) {
      return item1.seq - item2.seq;
    });
    data.forEach(function (item) {
      var lineWidth = item.thin / 10000 * self.height;
      var x, y;

      if (item.type == 'line' && item.show) {
        // 画线
        self.drawLine(ctx, item);
      } else if (item.type == 'raser' && item.status) {
        // 画激光笔
        ctx.beginPath();
        ctx.arc(item.location.x / 10000 * self.width, item.location.y / 10000 * self.height, Math.max(item.radius / 10000 * self.height, self.minLineWidth), 0, Math.PI * 2);
        ctx.fillStyle = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].COLOR.RED);
        ctx.fill();
        ctx.closePath();
      } else if (item.type == 'select' && item.show) {
        // 画选框
        ctx.setLineDash([15, 5]);
        ctx.lineWidth = 1;
        ctx.strokeStyle = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].COLOR.RED);
        ctx.strokeRect(item.startInfo.x / 10000 * self.width, item.startInfo.y / 10000 * self.height, (item.location.x - item.startInfo.x) / 10000 * self.width, (item.location.y - item.startInfo.y) / 10000 * self.height);
        ctx.setLineDash([]);
      } else if (item.type == 'graph' && item.show) {
        // 画图形
        if (item.graph == 'line') {
          // 画直线
          ctx.beginPath();
          ctx.moveTo(item.startPoint.x / 10000 * self.width, item.startPoint.y / 10000 * self.height);
          ctx.lineTo(item.endPoint.x / 10000 * self.width, item.endPoint.y / 10000 * self.height);
          ctx.strokeStyle = item.color;
          ctx.lineWidth = Math.max(lineWidth, self.minLineWidth);
          ctx.lineCap = "round";
          ctx.stroke();
        } else if (item.graph == 'rect') {
          // 画矩形
          // 先确定左上角
          x = item.startPoint.x > item.endPoint.x ? item.endPoint.x : item.startPoint.x;
          y = item.startPoint.y > item.endPoint.y ? item.endPoint.y : item.startPoint.y;
          ctx.strokeStyle = item.color;
          ctx.lineWidth = Math.max(lineWidth, self.minLineWidth);

          if (item.solid) {
            // 实心
            ctx.fillStyle = item.color;
            ctx.fillRect(x / 10000 * self.width, y / 10000 * self.height, Math.abs(item.startPoint.x - item.endPoint.x) / 10000 * self.width, Math.abs(item.startPoint.y - item.endPoint.y) / 10000 * self.height);
          } else {
            ctx.strokeRect(x / 10000 * self.width, y / 10000 * self.height, Math.abs(item.startPoint.x - item.endPoint.x) / 10000 * self.width, Math.abs(item.startPoint.y - item.endPoint.y) / 10000 * self.height);
          }
        } else if (item.graph == 'circle' || item.graph == 'oval') {
          // 画圆形或者椭圆
          x = (item.startPoint.x + item.endPoint.x) / 2 / 10000 * self.width;
          y = (item.startPoint.y + item.endPoint.y) / 2 / 10000 * self.height;
          var a = Math.abs(item.startPoint.x - item.endPoint.x) / 2 / 10000 * self.width;
          var b = Math.abs(item.startPoint.y - item.endPoint.y) / 2 / 10000 * self.height;
          ctx.strokeStyle = item.color;
          ctx.lineWidth = Math.max(lineWidth, self.minLineWidth);
          BezierEllipse2(ctx, x, y, a, b, item.solid, item.color);
          ctx.stroke();
        }
      } else if (item.type == 'inputtext') {
        // 画Text文字输入
        if (item.show) {
          var fontSize = Math.ceil(item.textSize / 10000 * self.height);
          ctx.beginPath();
          ctx.font = "".concat(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].fontStyle2CanvasFontStyle(item.fontStyle)).concat(fontSize, "px ").concat(item.typeFace);
          ctx.fillStyle = item.color;
          ctx.textBaseline = "hanging"; // ctx.fillText(item.text, item.location.x / 10000 * self.width, item.location.y / 10000 * self.height + Math.floor(item.textSize * self.height / 10000 / 16));

          var textHeight = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].canvasTextAutoLine(ctx, item.text, item.location.x / 10000 * self.width, item.location.y / 10000 * self.height, self.width, fontSize);
          item.textHeight = textHeight; // 测量文字所占长度

          var textWidth = 0;
          var wrapTexts = item.text.split('\n') || [];
          wrapTexts.forEach(function (lineText) {
            textWidth = Math.max(textWidth, Math.ceil(ctx.measureText(lineText).width + 10));
          });
          item.textWidth = textWidth;
          ctx.stroke();
        }
      }
    });

    if (self.isMoving) {
      var selectArea = self.store.getSelectArea();
      var thin = self.store.getThin();
      ctx.strokeStyle = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].COLOR.RED);
      ctx.setLineDash([15, 5]);
      ctx.lineWidth = 1;
      ctx.strokeRect((selectArea.x - thin) / 10000 * self.width, (selectArea.y - thin) / 10000 * self.height, (selectArea.width + thin * 2) / 10000 * self.width, (selectArea.height + thin * 2) / 10000 * self.height);
      ctx.setLineDash([]);
    } else {
      var selectedList = this.store.getSelectList();
      ctx.strokeStyle = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].COLOR.RED);
      selectedList.forEach(function (item) {
        if (item.type == 'line') {
          ctx.setLineDash([15, 5]);
          ctx.lineWidth = 1;
          ctx.strokeRect((item.border.minX - item.thin * 2) / 10000 * self.width, (item.border.minY - item.thin * 2) / 10000 * self.height, (item.border.maxX - item.border.minX + item.thin * 4) / 10000 * self.width, (item.border.maxY - item.border.minY + item.thin * 4) / 10000 * self.height);
          ctx.setLineDash([]);
        } else if (item.type == 'graph') {
          var graphLargeX = item.endPoint.x;
          var graphLargeY = item.endPoint.y;
          var graphSmallX = item.startPoint.x;
          var graphSmallY = item.startPoint.y;

          if (graphLargeX < graphSmallX) {
            // 交换位置
            graphLargeX = graphLargeX + graphSmallX;
            graphSmallX = graphLargeX - graphSmallX;
            graphLargeX = graphLargeX - graphSmallX;
          }

          if (graphLargeY < graphSmallY) {
            // 交换位置
            graphLargeY = graphLargeY + graphSmallY;
            graphSmallY = graphLargeY - graphSmallY;
            graphLargeY = graphLargeY - graphSmallY;
          }

          ctx.setLineDash([15, 5]);
          ctx.lineWidth = 1;
          ctx.strokeRect((graphSmallX - item.thin * 2) / 10000 * self.width, (graphSmallY - item.thin * 2) / 10000 * self.height, (graphLargeX - graphSmallX + item.thin * 4) / 10000 * self.width, (graphLargeY - graphSmallY + item.thin * 4) / 10000 * self.height);
          ctx.setLineDash([]);
        } else if (item.type == 'inputtext') {
          ctx.setLineDash([15, 5]);
          ctx.lineWidth = 1;
          ctx.strokeRect(item.location.x / 10000 * self.width - 5, item.location.y / 10000 * self.height - 5, item.textWidth + 10, item.textHeight + 10);
          ctx.setLineDash([]);
        }
      });
    }
  }
}; // 同步白板数据


Board.prototype.getBoardData = function () {
  return JSON.parse(JSON.stringify(this.store.getData()));
}; // 处理历史消息 和普通的不一样


Board.prototype.addHistory = function (data) {
  this.store.addHistory(data);
}; // 设置内容data


Board.prototype.addData = function (data) {
  this.store.addData(data);
};
/**
 * 删除白板，支持单个白板或者一个白板数组
 * @param {String|Array} boardId
 * @returns {Array} 删除的白板数组
 */


Board.prototype.deleteBoard = function () {
  var boardId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.store.getCurrentBoard();
  var fid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(boardId);

  if (fid == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_GROUP) {
    this.store.deleteBoard(boardId);
  } else {
    console.log('文件类白板不能删除');
  }
};
/**
 * 返回白板列表
 * @returns {Array} 返回白板列表
 */


Board.prototype.getBoardList = function () {
  return JSON.parse(JSON.stringify(this.store.getBoardList()));
};
/**
 * 返回白板背景图片列表
 * @returns {Array} 返回白板背景图片列表
 */


Board.prototype.getBoardPicList = function () {
  return JSON.parse(JSON.stringify(this.store.getBoardPicList()));
};
/**
 * 返回当前白板
 */


Board.prototype.getCurrentBoard = function () {
  return this.store.currentBoard;
};
/**
 * 获取当前白板所处的分组/文件
 */


Board.prototype.getCurrentFile = function () {
  return this.store.getCurrentFile();
}; // 增加一个白板，并初始化白板数据


Board.prototype.addBoard = function () {
  if (this.store.getCurrentFile() != _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_GROUP) {
    this.store.switchFile(_config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_GROUP);
  }

  return this.store.switchBoard();
};

Board.prototype.switchBoard = function (boardId, resetStep) {
  var _this2 = this;

  if (this.getBoardList().indexOf(boardId) === -1) {
    boardId = _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].COMMON_DEFAULT_BOARD;
  }

  if (boardId) {
    var fid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(boardId);
    var fileInfo = this.getFileInfo(fid);

    if (fileInfo.type === _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.H5) {
      // 如果是H5的PPT
      var boards = this.getBoardByGroup(fid);
      var slideIndex = boards.indexOf(boardId);
      _H5Control__WEBPACK_IMPORTED_MODULE_20__["default"].gotoTimestampNew(this.iframeDOM, {
        slideIndex: slideIndex,
        resetStep: resetStep,
        isPassive: false // 主动翻页（发起）

      });
    } else {
      // 如果是普通文件
      this.store.switchBoard(boardId);
    }
  } else {
    clearTimeout(this.bgH5LoadTask);
    this.bgH5.removeAttribute('src');
    this.bgH5LoadTask = setTimeout(function () {
      _this2.store.switchBoard(boardId);
    }, 50);
  }
};
/**
 * 要跳转的页数索引
 */


Board.prototype.switchPage = function () {
  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return this.store.switchPage(index);
};
/**
 * 要跳转的页数索引
 */
// Board.prototype.switchStep = function (step) {
//   this.store.switchStep(step);
// }


Board.prototype.prevBoard = function (resetStep) {
  var file = this.getFileInfo(this.getCurrentFile()); // 当前文件信息

  var boards = this.getBoardByGroup(this.getCurrentFile()); // 当前文件信息

  if (file.currentPageIndex < 1) {// 第一页，啥都不做
  } else {
    this.switchBoard(boards[file.currentPageIndex - 1], resetStep);
  }
};
/**
 * @description 上一步
 */


Board.prototype.prevStep = function () {
  var fileInfo = this.store.getFileInfo(this.store.getCurrentFile());

  if (fileInfo.type == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.H5) {
    _H5Control__WEBPACK_IMPORTED_MODULE_20__["default"].gotoPreviousStep(this.iframeDOM, {
      currentPageIndex: fileInfo.currentPageIndex,
      currentPageStep: fileInfo.currentPageStep
    });
  } else {
    this.prevBoard();
  }
};

Board.prototype.nextBoard = function (resetStep) {
  var file = this.getFileInfo(this.getCurrentFile()); // 当前文件信息

  var boards = this.getBoardByGroup(this.getCurrentFile()); // 当前文件信息

  if (file.currentPageIndex < file.pageCount - 1) {
    this.switchBoard(boards[file.currentPageIndex + 1], resetStep);
  }
};
/**
 * @description 下一步
 */


Board.prototype.nextStep = function () {
  var fileInfo = this.store.getFileInfo(this.store.getCurrentFile());

  if (fileInfo.type == _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].FILE_TYPE.H5) {
    _H5Control__WEBPACK_IMPORTED_MODULE_20__["default"].gotoNextStep(this.iframeDOM, {});
  } else {
    this.nextBoard();
  }
};
/**
 * 设置背景颜色
 * @param {Number} color 数字颜色，默认白色
 */


Board.prototype.setGlobalBackgroundColor = function (color) {
  this.store.setGlobalBackgroundColor(color);
};
/**
 * 设置背景颜色
 * @param {Number} color 数字颜色，默认白色
 */


Board.prototype.setBackgroundColor = function (color) {
  this.store.setBackgroundColor(color);
}; // 初始化


Board.prototype.init = function () {
  var _this3 = this;

  var self = this; // 上报init

  _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('init', {
    extra_info: JSON.stringify({
      option: this.option
    })
  });
  var resizeTask = null; // window.onresize = () => {
  //   clearTimeout(resizeTask);
  //   resizeTask = setTimeout(() => {
  //     this.resize();
  //   }, 200);
  // }

  window.addEventListener('resize', function () {
    clearTimeout(resizeTask);
    resizeTask = setTimeout(function () {
      _this3.resize();
    }, 200);
  });
  window.addEventListener('message', function (e) {
    if (e.data && e.data.module && 'tx_h5_postmessage' === e.data.module) {
      switch (e.data.cmd) {
        case 'init':
          var _JSON$parse = JSON.parse(e.data.data),
              title = _JSON$parse.title,
              count = _JSON$parse.count,
              url = _JSON$parse.url,
              width = _JSON$parse.width,
              height = _JSON$parse.height;

          console.log(' h5 ppt 宽高：', width, height);

          if (url && url.indexOf('?') > -1) {
            url = url.substring(0, url.indexOf('?'));
          } // 如果不存在就创建


          if (!_this3.store.isExistH5PPTUrl(url)) {
            _this3.store.addH5PPTFile(url, title, count, width, height);
          }

          var fileInfo = _this3.store.getH5PPTByUrl(url);

          if (fileInfo && fileInfo.fid) {
            _H5Control__WEBPACK_IMPORTED_MODULE_20__["default"].setFid(_this3.iframeDOM, fileInfo.fid);
          }

          break;

        case 'slideStepChangeEvent':
          self.store.switchH5Board(e.data.data);
          break;
      }
    }
  }, false);
  Board.prototype.renderCanvas = renderCanvas;
  this.renderCanvas();
  this.layout();
  clearTimeout(this.pregressTask);
  self.pregressTask = setTimeout(function () {
    if (self.store.isProgressEnable()) {
      self.progress.style.display = 'block';
    }
  }, _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].PROGRESS_SHOW_DELAY);
  _Event__WEBPACK_IMPORTED_MODULE_16__["default"].on('TEB_HISTROYDATA_SYNCCOMPLETED', function () {
    clearTimeout(self.pregressTask);
    self.progress.style.display = 'none';
  });
  this.drawInterval = setInterval(function () {
    if (_this3.store.getNeedDraw()) {
      try {
        _this3.draw();
      } catch (error) {
        _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(_this3, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_23__["default"].TEDU_BOARD_ERROR_RUNTIME, 'render failed');
        _net_ELKLog__WEBPACK_IMPORTED_MODULE_19__["default"].report('drawerror', {
          boardid: _this3.store.getCurrentBoard(),
          extra_info: JSON.stringify(error)
        });
      }

      _this3.store.setNeedDraw(false);
    }
  }, 50);
  var type, color, thin; // 是否是按下鼠标状态

  var onoff = false; // 开始位置

  var startx = -10;
  var starty = -10; // 当前位置

  var oldx = -10;
  var oldy = -10; // 控制点

  var cpx = -10;
  var cpy = -10;
  var inCanvas = false; // 鼠标是否在canvas内

  var ctx = this.el.getContext("2d");
  this.store.setCanvasContext(ctx);

  function renderCanvas() {
    var _this4 = this;

    var groupTemplate = new _GroupTemplate__WEBPACK_IMPORTED_MODULE_25__["default"]();
    this.container.innerHTML = "<div class=\"tx_board_canvas_wrap\">".concat(groupTemplate.getTemplate(), "</div>");
    this.boardWrap = this.container.getElementsByClassName('tx_board_canvas_wrap')[0];
    this.boardBox = this.container.getElementsByClassName('tx_board_canvas_box')[0];
    this.keyboardinput = this.container.getElementsByTagName('textarea')[0];
    this.el = this.container.getElementsByTagName('canvas')[0];
    this.progress = this.container.getElementsByClassName('tic_board_bg_pregress')[0];
    this.img = this.container.getElementsByClassName('tic_board_img_bg')[0];
    this.bgDiv = this.container.getElementsByClassName('tic_board_bg')[0];
    this.iframeDOM = this.container.getElementsByClassName('tic_iframe_H5')[0]; // H5背景

    this.bgH5 = this.container.getElementsByClassName('tic_board_h5_bg')[0];
    this.store.setIframeDom(this.iframeDOM);

    this.iframeDOM.onload = function () {
      // 同步一次postmessage的source
      if (this.src) {
        _H5Control__WEBPACK_IMPORTED_MODULE_20__["default"].init(self.iframeDOM, {
          isFirstLoad: true
        });
      } // 触发预加载


      self.store.preloadBoard();
    };

    this.bgH5.onload = function () {
      if (this.src) {
        _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_H5BACKGROUND_STATUS_CHANGED', _model_TeduBoardH5BackgroudStatus__WEBPACK_IMPORTED_MODULE_24__["default"].TEDU_BOARD_H5_BACKGROUND_STATUS_LOAD_DONE, {
          currentBoardId: self.getCurrentBoard(),
          url: this.src
        });
      }

      clearTimeout(self.pregressTask);
      self.progress.style.display = 'none'; // 触发预加载

      self.store.preloadBoard();
    };

    this.el.getContext('2d').translate(0.5, 0.5);
    this.draw();
    this.boardWrap.addEventListener("mousedown", function (e) {
      down.apply(_this4, [e]); // event.fire(this, Constant.EVENT.CANVAS_MOUSEDOWN, e);
    }, false);
    this.boardWrap.addEventListener("mousemove", function (e) {
      mouseMove.apply(_this4, [e]); // event.fire(this, Constant.EVENT.CANVAS_MOUSEMOVE, e);
    }, true);
    this.boardWrap.addEventListener("mouseup", function (e) {
      up.apply(_this4, [e]); // event.fire(this, Constant.EVENT.CANVAS_MOUSEUP, e);
    }, false);
    this.boardWrap.addEventListener("mouseleave", function (e) {
      over.apply(_this4, [e]); // event.fire(this, Constant.EVENT.CANVAS_MOUSELEAVE, e);
    }, false);
    var af = new AlloyFinger__WEBPACK_IMPORTED_MODULE_26___default.a(this.boardWrap, {});
    af.on('touchStart', function (e) {
      _this4.pinchScale = []; // 先清空

      down.apply(_this4, [e]);
    });
    af.on('touchMove', function (e) {
      mouseMove.apply(_this4, [e]);
    });
    af.on('touchEnd', function (e) {
      up.apply(_this4, [e]);
    });
    af.on('touchCancel', function (e) {
      over.apply(_this4, [e]);
    }); // 手指捏合

    af.on('pinch', function (evt) {
      type = _this4.store.getType();

      if (type === 'zoom') {
        _this4.pinchScale.push(evt.zoom);
      }
    }); // ========= 移动端  ==============
    // this.boardWrap.addEventListener("touchstart", (e) => {
    //   down.apply(this, [e]);
    //   // event.fire(this, Constant.EVENT.CANVAS_TOUCHSTART, e);
    // }, false);
    // this.boardWrap.addEventListener("touchmove", (e) => {
    //   mouseMove.apply(this, [e]);
    //   // event.fire(this, Constant.EVENT.CANVAS_TOUCHMOVE, e);
    // }, true);
    // this.boardWrap.addEventListener("touchend", (e) => {
    //   up.apply(this, [e]);
    //   // event.fire(this, Constant.EVENT.CANVAS_TOUCHEND, e);
    // }, false);
    // this.boardWrap.addEventListener("touchcancel", (e) => {
    //   over.apply(this, [e]);
    //   // event.fire(this, Constant.EVENT.CANVAS_TOUCHCANCEL, e);
    // }, false);

    if (this.option.event) {
      for (var i = 0; i < this.option.event.length; i++) {
        var item = this.option.event[i];
        this.el.addEventListener(item.type, item.fn, false);
      }
    }
  }

  function stopDefaultEvent(e) {
    // 阻止默认事件
    if (e.preventDefault) {
      e.preventDefault();
    } else {
      e.returnValue = false;
    } // //如果文字输入框已经在显示了，隐藏
    // if (this.keyboardinput.getAttribute('style').indexOf('block') > -1) {
    //   this.keyboardinput.setAttribute('style', this.keyboardinput.getAttribute('style').replace('block', 'none'));
    // }

  }

  function down(e) {
    if (type == 'mouse') {
      this.nextStep();
      return;
    }

    var self = this;
    stopDefaultEvent(e);

    if (!this.canDraw) {
      return;
    }

    inCanvas = true;
    onoff = true; // 每次操作会影响 opData  从第一步起截止到目前的操作步数
    // 重置操作步骤,具体请看store.js说明

    this.store.resetOperation();
    cpx = -10;
    cpy = -10;
    oldx = startx = this.getEventLocation(e).x;
    oldy = starty = this.getEventLocation(e).y;
    this.dragStartX = this.getEventLocation(e).clientX;
    this.dragStartY = this.getEventLocation(e).clientY; // 获取当前的涂鸦类型

    type = this.store.getType();
    color = this.store.getColor();
    thin = this.store.getThin(); // 类型是随便画

    if (type == 'line') {
      this.store.cancelSelect();
      this.store.collectLineData().start(startx, starty);
      var lineWidth = Math.max(thin / 10000 * this.height, this.minLineWidth);
      ctx.beginPath();
      ctx.arc(startx / 10000 * this.width, starty / 10000 * this.height, lineWidth / 2, 0, Math.PI * 2, !0);
      ctx.fillStyle = color;
      ctx.fill();
      ctx.closePath();
    } else if (type == 'eraser') {
      // 橡皮擦
      // 需要遍历全部的data 碰撞检测
      this.store.cancelSelect();
      this.store.collectEraserData(startx, starty);
    } else if (type == 'raser') {
      // 激光笔
      // 激光笔不算入操作
      this.store.cancelSelect();
      this.store.collectRaserData().start(startx, starty);
    } else if (type == 'select') {
      // 判断是否要移动
      if (this.store.collectMoverData().beforeStart(startx, starty)) {
        this.isMoving = true;
      } else {
        // 框选
        // 不算入操作
        this.store.cancelSelect();
        this.store.collectSelectData().start(startx, starty);
      }
    } else if (type == 'pointselect') {
      // 判断是否要移动
      if (this.store.collectMoverData().beforeStart(startx, starty)) {
        this.isMoving = true;
      }
    } else if (type == 'inputtext') {
      // 文字输入
      // 键盘输入
      // 获取点击的点XY坐标
      var _this$getEventLocatio = this.getEventLocation(e),
          ox = _this$getEventLocatio.ox,
          oy = _this$getEventLocatio.oy,
          x = _this$getEventLocatio.x,
          y = _this$getEventLocatio.y;

      var inputx = ox,
          inputy = oy;
      var styles = [];
      styles.push('position:absolute');
      styles.push('z-index:20');
      styles.push('box-sizing: content-box');
      styles.push('outline:none');
      styles.push('resize: none');
      styles.push('word-break: break-all');
      styles.push('overflow: hidden');
      styles.push('border:1px dashed red');
      styles.push('background:transparent');

      if (this.keyboardinput.getAttribute('style').indexOf('block') > -1) {
        //如果文字输入框已经在显示了，则隐藏
        styles.push('display:none');
        this.keyboardinput.setAttribute('style', styles.join(';'));
        this.keyboardinput.oninput = null;

        if (document.activeElement === this.keyboardinput) {
          this.keyboardinput.blur(); // mac上有Bug,需要主动触发blur
        }
      } else {
        //如果文字输入框没显示，则显示出来
        var inputItem = this.store.collectTextInputData().start(x, y);
        this.keyboardinput.value = inputItem.text || '';
        var fontSize = 0;

        if (inputItem.text) {
          // 如果是重复编辑
          fontSize = Math.ceil(inputItem.textSize / 10000 * this.height);
          inputx = Math.floor(inputItem.location.x * this.width / 10000);
          inputy = Math.floor(inputItem.location.y * this.height / 10000);
          styles.push('top:' + inputy + 'px');
          styles.push('left:' + inputx + 'px');
          styles.push('font-family:' + inputItem.typeFace);
          styles.push('color:' + inputItem.color); // 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；

          if (inputItem.fontStyle === 0) {
            styles.push('font-style: normal');
            styles.push('font-weight:normal');
          } else if (inputItem.fontStyle === 1) {
            styles.push('font-style: normal');
            styles.push('font-weight:bold');
          } else if (inputItem.fontStyle === 2) {
            styles.push('font-style: italic');
            styles.push('font-weight:normal');
          } else if (inputItem.fontStyle === 3) {
            styles.push('font-style: italic');
            styles.push('font-weight:bold');
          }
        } else {
          fontSize = Math.ceil(this.store.getTextSize() * self.height / 10000);
          styles.push('top:' + inputy + 'px');
          styles.push('left:' + inputx + 'px');
          styles.push('font-family:' + this.store.getTextFontFamily());
          styles.push('color:' + this.store.getTextColor());
          var fontStyle = this.store.getTextFontStyle(); // 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；

          if (fontStyle === 0) {
            styles.push('font-style: normal');
            styles.push('font-weight:normal');
          } else if (fontStyle === 1) {
            styles.push('font-style: normal');
            styles.push('font-weight:bold');
          } else if (fontStyle === 2) {
            styles.push('font-style: italic');
            styles.push('font-weight:normal');
          } else if (fontStyle === 3) {
            styles.push('font-style: italic');
            styles.push('font-weight:bold');
          }
        } // 测量文字所占长度


        ctx.font = "".concat(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].fontStyle2CanvasFontStyle(inputItem.fontStyle)).concat(fontSize, "px ").concat(self.store.getTextFontFamily()); //输入框动态变长；

        var wrapTexts = self.keyboardinput.value.split('\n') || [];
        var textWidth = 0;
        wrapTexts.forEach(function (lineText) {
          textWidth = Math.max(textWidth, Math.ceil(ctx.measureText(lineText).width + 10));
        });
        styles.push('font-size:' + fontSize + 'px');
        styles.push('line-height:1');
        styles.push('width:' + textWidth + 'px');
        styles.push('max-width: ' + Math.max(self.width - inputx - 10, 0) + 'px');
        styles.push('max-height: ' + Math.max(self.height - inputy - 10, 0) + 'px');
        styles.push('display:block');
        this.keyboardinput.setAttribute('style', styles.join(';'));
        this.keyboardinput.onblur = null; //是否失去焦点操作

        this.keyboardinput.onblur = function () {
          //失去焦点时候绘制全部数据到canvas上
          var text = self.keyboardinput.value;
          self.store.cancelSelect();
          self.store.collectTextInputData().draw(text);
          self.keyboardinput.value = "";
          var styleStr = styles.join(';');

          if (styleStr.indexOf('block') > -1) {
            styleStr = styleStr.replace('block', 'none');
          } else {
            styles.push('display:none');
            styleStr = styles.join(';');
          } //如果文字输入框已经在显示了，隐藏


          self.keyboardinput.setAttribute('style', styleStr);
          self.keyboardinput.oninput = null;
        };

        this.keyboardinput.oninput = null; //是否正在输入

        this.keyboardinput.oninput = function () {
          //正在输入
          var inputstring = self.keyboardinput.value; // 测量文字所占长度

          ctx.font = "".concat(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].fontStyle2CanvasFontStyle(inputItem.fontStyle)).concat(fontSize, "px ").concat(self.store.getTextFontFamily()); // //输入框动态变长；

          var wrapTexts = inputstring.split('\n') || [];
          var textWidth = 0;
          wrapTexts.forEach(function (lineText) {
            textWidth = Math.max(textWidth, Math.ceil(ctx.measureText(lineText).width + 10));
          });
          this.style.width = textWidth + 'px';
          this.style.height = 'auto';
          this.style.height = this.scrollHeight + 'px';
          self.store.collectTextInputData().inputting(inputstring, textWidth, this.scrollHeight);
        };

        this.keyboardinput.onfocus = null;

        this.keyboardinput.onfocus = function () {
          this.style.height = this.scrollHeight + 'px';
        };

        this.keyboardinput.focus();
      }
    } else if (type.indexOf('graph') > -1) {
      // 画图形
      // 算入操作
      this.store.cancelSelect();
      this.store.collectGraphData().start(startx, starty);
    } else if (type === 'zoom') {
      // 如果是缩放
      if (!_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].isMobile()) {
        this.store.cancelSelect();
        this.store.collectDragData().start(e);
      } else {
        // 捏合前的比例
        this.beforePinchScale = this.getBoardScale();
      }
    }

    if (this.isMoving == true) {
      // 检测移动的时候是否有选择到涂鸦以及移动的时候点击是否在选中的范围
      if (this.store.collectMoverData().beforeStart(startx, starty)) {
        this.isMoving = true;
        this.store.collectMoverData().start(startx, starty);
      }
    }
  } // 鼠标或者手指滑动


  function mouseMove(e) {
    stopDefaultEvent(e);

    if (!this.canDraw) {
      return;
    }

    type = this.store.getType();
    color = this.store.getColor();
    thin = this.store.getThin();

    if (onoff) {
      var eventLocation = this.getEventLocation(e);
      var newx = eventLocation.x;
      var newy = eventLocation.y;
      var currentClientX = eventLocation.clientX;
      var currentClientY = eventLocation.clientY; // 类型是随便画

      if (type == 'line') {
        if (cpx >= 0 && cpy >= 0) {
          var endx = (cpx + newx) / 2;
          var endy = (cpy + newy) / 2;
          ctx.beginPath();
          ctx.moveTo(oldx / 10000 * this.width, oldy / 10000 * this.height);
          ctx.quadraticCurveTo(cpx / 10000 * this.width, cpy / 10000 * this.height, endx / 10000 * this.width, endy / 10000 * this.height);
          ctx.strokeStyle = color;
          ctx.lineWidth = Math.max(thin / 10000 * this.height, this.minLineWidth);
          ctx.lineCap = 'round';
          ctx.stroke();
          oldx = endx;
          oldy = endy;
        }

        cpx = newx;
        cpy = newy;
        this.store.collectLineData().draw(newx, newy);
      } else if (type == "eraser") {
        this.store.collectEraserData(newx, newy);
      } else if (type == 'raser') {
        // 激光笔需要修改状态
        this.store.collectRaserData().draw(newx, newy);
      } else if (type == 'select' && !this.isMoving) {
        // 框选
        this.store.collectSelectData().draw(newx, newy);
      } else if (type == 'pointselect') {//点选
        // 点选不需要操作
      } else if (type.indexOf('graph') > -1) {
        this.store.collectGraphData().draw(newx, newy);
      } else if (type === 'zoom') {
        // 如果是缩放
        if (!_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].isMobile()) {
          // 如果是移动端
          this.store.collectDragData().draw(e, currentClientX, currentClientY, this.dragStartX, this.dragStartY);
          this.dragStartX = currentClientX;
          this.dragStartY = currentClientY;
        } else {
          // 缩放操作
          if (this.pinchScale.length) {
            this.store.collectDragData().scaleDraw(this.beforePinchScale, this.pinchScale);
          } else {
            this.store.collectDragData().draw(e, currentClientX, currentClientY, this.dragStartX, this.dragStartY);
            this.dragStartX = currentClientX;
            this.dragStartY = currentClientY;
          }
        }
      }

      if (this.isMoving) {
        this.store.collectMoverData().draw(newx, newy, oldx, oldy); // 更新数据

        oldx = newx;
        oldy = newy;
      }
    }
  }

  function up(e) {
    stopDefaultEvent(e);

    if (!this.canDraw) {
      return;
    }

    onoff = false;
    type = this.store.getType();
    var newx = this.getEventLocation(e).x;
    var newy = this.getEventLocation(e).y; //重置控制点

    cpx = -10;
    cpy = -10; // 类型是随便画

    if (type == 'line') {
      if (!inCanvas) {
        // 如果鼠标移出到canvas外面松开鼠标，或者移动到canvas外面后又回来canvas上松开鼠标
        return;
      }

      this.store.collectLineData().end(newx, newy);
    } else if (type == 'eraser') {
      this.store.collectEraserData(newx, newy);
    } else if (type == 'raser') {
      this.store.collectRaserData().end(newx, newy);
    } else if (type == 'select' && !this.isMoving) {
      this.store.collectSelectData().end(startx, starty, newx, newy);
    } else if (type == 'pointselect' && !this.isMoving) {
      this.store.collectPointSelectData(newx, newy);
    } else if (type.indexOf('graph') > -1) {
      this.store.collectGraphData().end(newx, newy);
    } else if (type === 'zoom') {
      // 如果是缩放，拖拽
      if (!_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].isMobile()) {
        // PC,WEB
        this.store.collectDragData().end();
      } else {
        // 移动端
        this.store.collectDragData().touchEnd(this.pinchScale);
      }
    }

    if (this.isMoving) {
      this.isMoving = false;
      this.store.collectMoverData().end();
    }

    _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_OPERATE_CANUNDO_STATUS_CHANGED', this.store.canUndo());
  }

  function over(e) {
    stopDefaultEvent(e);

    if (!this.canDraw) {
      return;
    }

    var type = this.store.getType();
    var newx = this.getEventLocation(e).x;
    var newy = this.getEventLocation(e).y;
    inCanvas = false; // 鼠标移出到canvas外面
    // 鼠标离开

    if (onoff == true) {
      // 正在画，要结束当前画画内容
      var thin;

      if (type == 'line') {
        thin = this.store.getThin();
        newx = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getEffectivePoint(newx, thin);
        newy = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getEffectivePoint(newy, thin);
        this.store.collectLineData().over(newx, newy);
      } else if (type == 'raser') {
        this.store.collectRaserData().over();
      } else if (type == 'select' && !this.isMoving) {
        this.store.collectSelectData().end(startx, starty, newx, newy);
      } else if (type.indexOf('graph') > -1) {
        thin = this.store.getThin();
        newx = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getEffectivePoint(newx, thin);
        newy = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getEffectivePoint(newy, thin);
        this.store.collectGraphData().over(newx, newy);
      } else if (type === 'zoom') {
        // 如果是缩放，拖拽
        if (!_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].isMobile()) {
          this.store.collectDragData().over();
        }
      }

      if (this.isMoving) {
        this.isMoving = false;
        this.store.collectMoverData().end();
      }

      onoff = false;
      _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_OPERATE_CANUNDO_STATUS_CHANGED', this.store.canUndo());
    }
  }
}; // 修改颜色


Board.prototype.setColor = function (color) {
  this.store.setColor(color);
}; // 修改画笔粗细


Board.prototype.setThin = function (thin) {
  this.store.setThin(thin);
}; // 修文字输入大小


Board.prototype.setTextSize = function (textSize) {
  this.store.setTextSize(textSize);
}; // 获取文字大小


Board.prototype.getTextSize = function () {
  return this.store.getTextSize();
}; // 设置文字颜色


Board.prototype.setTextColor = function (textColor) {
  this.store.setTextColor(textColor);
}; // 获取文字颜色


Board.prototype.getTextColor = function () {
  return this.store.getTextColor();
}; // 修改画画类型
// 这个时候需要取消被选择的框


Board.prototype.setType = function (type) {
  var types = ['MOUSE', 'LINE', 'ERASER', 'RASER', 'GRAPH-LINE', 'GRAPH-OVAL', 'GRAPH-RECT', 'GRAPH-OVAL-SOLID', 'GRAPH-RECT-SOLID', 'POINTSELECT', 'SELECT', 'INPUTTEXT', 'ZOOM'];
  this.store.setType(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].BOARD_ACTION_TYPE[types[type]]);
}; // undo操作


Board.prototype.undo = function () {
  this.store.undo();
}; // 能否回退


Board.prototype.canUndo = function () {
  return this.store.canUndo();
}; // process操作


Board.prototype.redo = function () {
  this.store.redo();
}; // 能否恢复


Board.prototype.canRedo = function () {
  return this.store.canRedo();
}; // 清屏操作


Board.prototype.clearBoard = function (keepBackground) {
  this.store.clearBoard(keepBackground);
}; // 需要对外发送的清空操作


Board.prototype.clear = function () {
  this.store.clear();
}; //保留背景图的清空


Board.prototype.clearDraws = function () {
  this.store.clearDraws();
};
/**
 * @description 清空白板所有涂鸦
 */


Board.prototype.clearAll = function () {
  this.store.clearAll();
};

Board.prototype.addBackgroundPic = function (boardId, url, needBroad) {
  this.store.addBackgroundPic(boardId, url, needBroad);
};

Board.prototype.setBackgroundPic = function (url) {
  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT;
  this.store.setBackgroundPic(url, position);
}; // 设置H5背景


Board.prototype.setBackgroundH5 = function (url) {
  this.store.setBackgroundH5(url);
};
/**
 * @description 设置当前页的背景图
 * @param {Number} position 图片相对于白板显示位置
 */


Board.prototype.updateCurrentFillMode = function () {
  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].FILL_MODE.DEFAULT;
  this.store.updateCurrentFillMode(position);
};

Board.prototype.deleteBackgroundPic = function (boardId) {
  this.store.deleteBackgroundPic(boardId);
}; //  取消背景图


Board.prototype.cancelBackgroundPic = function () {
  this.store.cancelBackgroundPic();
};
/**
 * 取消全局背景色
 */


Board.prototype.clearGlobalBgColor = function () {
  this.store.clearGlobalBgColor();
}; //  清空被选择的区域


Board.prototype.cancelSelect = function () {
  this.store.cancelSelect();
};
/**
 * 设置是否可以画画
 * @param {*} canDraw
 */


Board.prototype.setCanDraw = function () {
  var canDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  this.canDraw = canDraw;
}; // 增加file


Board.prototype.addFile = function (urls, title, downloadUrl, ratio) {
  return this.store.addFile(urls, title, downloadUrl, ratio);
};
/**
 * 增加H5文件
 */


Board.prototype.addH5PPTFile = function (url) {
  // 如果不存在
  if (!this.store.isExistH5PPTUrl(url)) {
    if (this.iframeDOM.getAttribute('src') !== url) {
      if (url.indexOf('?') > -1) {
        url += '&page=0&step=0';
      } else {
        url += '?page=0&step=0';
      }

      this.iframeDOM.setAttribute('src', url);
      return;
    }
  }

  _Event__WEBPACK_IMPORTED_MODULE_16__["default"].fire(this, 'TEB_WARNING', _model_TEduBoardWarningCode__WEBPACK_IMPORTED_MODULE_22__["default"].TEDU_BOARD_WARNING_H5PPT_ALREADY_EXISTS, url);
}; // 删除文件file


Board.prototype.deleteFile = function (fid) {
  return this.store.deleteFile(fid);
}; // 切换file


Board.prototype.switchFile = function (fid) {
  var _this5 = this;

  if (fid) {
    // 自己切换自己，不处理
    if (fid != this.store.getCurrentFile()) {
      clearTimeout(this.pptH5LoadTask);
      this.iframeDOM.removeAttribute('src');
      this.bgH5.removeAttribute('src');
      this.pptH5LoadTask = setTimeout(function () {
        _this5.store.switchFile(fid);
      }, 50);
    }
  }
};

Board.prototype.getGroup = function () {
  return this.store.getGroup();
};

Board.prototype.getFileInfo = function (fid) {
  return this.store.getFileInfo(fid);
};

Board.prototype.getBoardByGroup = function (gid) {
  return this.store.getBoardByGroup(gid);
};

Board.prototype.clearFileDraws = function (fids) {
  return this.store.clearFileDraws(fids);
}; // 重构layout


Board.prototype.layout = function () {
  // 获取外层容器的宽高
  var width = this.container.clientWidth;
  var height = this.container.clientHeight;

  if (width == 0 || height == 0) {
    return false;
  }

  var scale = 100,
      left = 50,
      top = 50,
      ratio; // 1. 获取当前白板缩放，偏移数据(scale, left, top)

  scale = this.store.getBoardScale();
  var dragData = this.store.getDragData();

  if (dragData) {
    left = dragData.xOffset;
    top = dragData.yOffset;
    scale = dragData.scale;
  } // 2. 从获取ratio/默认比例


  ratio = this.store.getBoardRatio(); // 白板宽高比例

  var _util$calcRatioWidthH = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].calcRatioWidthHeight(ratio, _config_Config__WEBPACK_IMPORTED_MODULE_14__["default"].RATIO),
      ratioWidth = _util$calcRatioWidthH.ratioWidth,
      ratioHeight = _util$calcRatioWidthH.ratioHeight;

  var scaleX = width / ratioWidth;
  var scaleY = height / ratioHeight;
  var minScale = Math.min(scaleX, scaleY);
  var baseWidth, baseHeight; // 一倍的宽高

  baseWidth = minScale * ratioWidth;
  baseHeight = minScale * ratioHeight;
  this.width = Math.floor(baseWidth * scale / 100);
  this.height = Math.floor(baseHeight * scale / 100);
  this.store.setContainerSize(width, height);
  this.store.setBoardSize(this.width, this.height);
  var maxLeft, minLeft, maxTop, minTop; // 定义可移动范围
  // 说明是白板是以水平方向为拖动

  if (this.width / this.height > width / height) {
    if (this.height > height) {
      maxTop = 50 + (this.height - height) / 2 / this.height * 100;
      minTop = 50 - (this.height - height) / 2 / this.height * 100;
    } else {
      maxTop = 50;
      minTop = 50;
    }

    maxLeft = 50 + (this.width - width) / 2 / this.width * 100;
    minLeft = 50 - (this.width - width) / 2 / this.width * 100;
  } else {
    maxTop = 50 + (this.height - height) / 2 / this.height * 100;
    minTop = 50 - (this.height - height) / 2 / this.height * 100;

    if (this.width > width) {
      maxLeft = 50 + (this.width - width) / 2 / this.width * 100;
      minLeft = 50 - (this.width - width) / 2 / this.width * 100;
    } else {
      maxLeft = 50;
      minLeft = 50;
    }
  }

  left = Math.min(maxLeft, Math.max(minLeft, left));
  top = Math.min(maxTop, Math.max(minTop, top));
  var ctx = this.el.getContext('2d');
  var dpr = window.devicePixelRatio || window.webkitDevicePixelRatio || window.mozDevicePixelRatio || 1;
  this.el && this.el.setAttribute('width', this.width * dpr);
  this.el && this.el.setAttribute('height', this.height * dpr);
  var outerStyle = "position:relative;left: 50%;top: 50%;-webkit-transform: translateX(-50%) translateY(-50%);transform: translateX(-50%) translateY(-50%);overflow:hidden;width:".concat(this.width, "px;height:").concat(this.height, "px");
  var innerStyle = "position:absolute;left: ".concat(left, "%;top:").concat(top, "%;-webkit-transform: translateX(-50%) translateY(-50%);transform: translateX(-50%) translateY(-50%);width:").concat(this.width, "px;height:").concat(this.height, "px");
  var canvasStyle = "z-index:10;position:absolute; top:0; left:0;line-height:1;width:".concat(this.width, "px;height:").concat(this.height, "px"); // 设置最外层宽高，偏移

  this.boardWrap && this.boardWrap.setAttribute('style', outerStyle); // 设置第二层宽高，偏移

  this.boardBox && this.boardBox.setAttribute('style', innerStyle); // 设置Canvas显示宽高

  this.el && this.el.setAttribute('style', canvasStyle);
  var progressStype = "z-index:6; display:".concat(this.progress.style.display, "; position:absolute;left: 50%;top: 50%;-webkit-transform: translateX(-50%) translateY(-50%);transform: translateX(-50%) translateY(-50%);overflow:hidden;width:70px;height:70px");
  this.progress && this.progress.setAttribute('style', progressStype);
  this.img && this.img.setAttribute('width', this.width);
  this.img && this.img.setAttribute('height', this.height);
  this.bgDiv && this.bgDiv.setAttribute('width', this.width);
  this.bgDiv && this.bgDiv.setAttribute('height', this.height);
  this.iframeDOM && this.iframeDOM.setAttribute('style', "width:".concat(this.width, "px !important;height:").concat(this.height, "px !important;border:none;"));
  ctx.scale(dpr, dpr); //将所有绘制操作做缩放
  // 上报resize
  // elkLog.report('resize', {
  //   extra_info: JSON.stringify({
  //     width: this.width,
  //     height: this.height
  //   })
  // });

  return true;
};
/**
 *
 * @param {*} ctx
 * @param {*} lines
 */


Board.prototype.drawLine = function (ctx, item) {
  var _this6 = this;

  var lineWidth = Math.max(item.thin / 10000 * this.height, this.minLineWidth);
  ctx.lineWidth = lineWidth;
  ctx.lineCap = 'round';
  ctx.strokeStyle = item.color;
  ctx.fillStyle = item.color;
  var smoothLevel = this.store.getSmoothLevel(); // 如果开启了平滑 && 涂鸦已结束 && 没有进行平滑数据处理（addHistory不处理了，调整到绘制的时候）

  if (smoothLevel > 0 && item.endSeq && !item.fitCurve.length) {
    var pts = [];
    item.lines.forEach(function (pt) {
      pts.push([pt.x, pt.y]);
    });
    item.fitCurve = Object(_util_FitCurve__WEBPACK_IMPORTED_MODULE_18__["default"])(pts, smoothLevel * 10000, null);
  }

  ctx.beginPath();

  if (item.lines.length < 2) {
    // 只有一个点，只能画点
    ctx.arc(item.lines[0].x / 10000 * this.width, item.lines[0].y / 10000 * this.height, ctx.lineWidth / 2, 0, Math.PI * 2, !0);
    ctx.fill();
    ctx.closePath();
    return;
  }

  if (item.lines.length == 2) {
    // 在iOS上有个坑 （moveto和Lineto到同一个点画不出来）
    if (item.lines[0].x == item.lines[1].x && item.lines[0].y == item.lines[1].y) {
      // 判断两个点是不是一样的（是一样的就画点）
      ctx.arc(item.lines[0].x / 10000 * this.width, item.lines[0].y / 10000 * this.height, ctx.lineWidth / 2, 0, Math.PI * 2, !0);
      ctx.fill();
      ctx.closePath();
      return;
    }
  }

  ctx.moveTo(item.lines[0].x / 10000 * this.width, item.lines[0].y / 10000 * this.height);

  if (item.fitCurve.length === 0) {
    for (var i = 1; i < item.lines.length - 2; i++) {
      var p1 = item.lines[i];
      var p2 = item.lines[i + 1];
      var tox = (p1.x + p2.x) / 2 / 10000 * this.width;
      var toy = (p1.y + p2.y) / 2 / 10000 * this.height;
      ctx.quadraticCurveTo(p1.x / 10000 * this.width, p1.y / 10000 * this.height, tox, toy);
    }

    var p = item.lines[item.lines.length - 1];
    ctx.lineTo(p.x / 10000 * this.width, p.y / 10000 * this.height);
  } else {
    item.fitCurve.forEach(function (curve) {
      var cp1x = curve[1][0] / 10000 * _this6.width;
      var cp1y = curve[1][1] / 10000 * _this6.height;
      var cp2x = curve[2][0] / 10000 * _this6.width;
      var cp2y = curve[2][1] / 10000 * _this6.height;
      var x = curve[3][0] / 10000 * _this6.width;
      var y = curve[3][1] / 10000 * _this6.height;
      ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
    });
  }

  ctx.stroke();
};
/**
 * 获取白板是否允许涂鸦
 * 是否允许涂鸦，true 表示白板可以涂鸦，false 表示白板不能涂鸦
 */


Board.prototype.isDrawEnable = function () {
  return this.canDraw;
};

Board.prototype.getGlobalBackgroundColor = function () {
  return this.store.getGlobalBackgroundColor();
};
/**
 * 获取当前的白板的背景色
 */


Board.prototype.getBackgroundColor = function () {
  return this.store.getBackgroundColor();
};

Board.prototype.getToolType = function () {
  var type = this.store.getType();
  var types = ['MOUSE', 'LINE', 'ERASER', 'RASER', 'GRAPH-LINE', 'GRAPH-OVAL', 'GRAPH-RECT', 'GRAPH-OVAL-SOLID', 'GRAPH-RECT-SOLID', 'POINTSELECT', 'SELECT', 'INPUTTEXT', 'ZOOM'];

  var findKey = function findKey(value) {
    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (a, b) {
      return a === b;
    };
    return Object.keys(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].BOARD_ACTION_TYPE).find(function (k) {
      return compare(_config_Constant__WEBPACK_IMPORTED_MODULE_15__["default"].BOARD_ACTION_TYPE[k], value);
    });
  };

  var key = findKey(type);
  return types.indexOf(key);
};

Board.prototype.getBrushColor = function () {
  return this.store.getColor();
};

Board.prototype.getBrushThin = function () {
  return this.store.getThin();
};

Board.prototype.setDataSyncEnable = function (enable) {
  this.store.setDataSyncEnable(enable);
};

Board.prototype.isDataSyncEnable = function () {
  return this.store.isDataSyncEnable();
};
/**
 * 设置输入文字字体
 * @param {Number}
 */


Board.prototype.setTextFontFamily = function (typeFace) {
  this.store.setTextFontFamily(typeFace);
};
/**
 * 返回文字输入字体
 * @returns {String} 返回文字输入字体
 */


Board.prototype.getTextFontFamily = function () {
  return this.store.getTextFontFamily();
};
/**
 * 设置文字样式 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；
 * @param {Number} fontStyle 默认0
 */


Board.prototype.setTextFontStyle = function (fontStyle) {
  this.store.setTextFontStyle(fontStyle);
};
/**
 * 返回文字样式
 * @returns {String} 返回文字样式
 */


Board.prototype.getTextFontStyle = function () {
  return this.store.getTextFontStyle();
};
/**
 * 设置当前白板页宽高比
 * @returns {String} 设置当前白板页宽高比
 */


Board.prototype.setBoardRatio = function (ratio) {
  this.store.setBoardRatio(this.store.getCurrentBoard(), ratio);
  this.draw();
};
/**
 * d2.23 获取当前白板缩放比
 * @return 白板缩放比
 */


Board.prototype.getBoardRatio = function () {
  return this.store.getBoardRatio() || this.option.ratio;
};
/**
 * 设置当前白板缩放比
 * @param {String} textFace 默认 sans-serif,serif,monospace
 */


Board.prototype.setBoardScale = function (scale) {
  this.store.setBoardScale(scale);
  this.draw();
};
/**
 * d2.23 获取当前白板缩放比
 * @return 白板缩放比
 */


Board.prototype.getBoardScale = function () {
  return this.store.getBoardScale();
};
/**
 * d2.27 设置文件显示模式
 * @param enable 是否启用数据同步
 */


Board.prototype.setBoardContentFitMode = function (mode) {
  this.store.setBoardContentFitMode(mode);
};
/**
 * 获取文件平铺模式
 * @returns {*} 返回文件平铺模式
 */


Board.prototype.getBoardContentFitMode = function () {
  return this.store.getBoardContentFitMode();
};

/* harmony default export */ __webpack_exports__["default"] = (Board);

/***/ }),

/***/ "./src/board/Event.js":
/*!****************************!*\
  !*** ./src/board/Event.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.function.name */ "./node_modules/core-js/modules/es6.function.name.js");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__);


function Event() {}

Event.prototype.on = function (name, cb) {
  this._cbs = this._cbs || {};
  (this._cbs[name] || (this._cbs[name] = [])).unshift(cb);
  return this;
};
/**
 *
 * @param  {String}   name
 * @param  {Function} cb
 * @return {Event}
 */


Event.prototype.off = function (name, cb) {
  this._cbs = this._cbs || {};
  if (!name) return this._cbs = {};
  if (!cb) return delete this._cbs[name];
  var cbs = this._cbs[name] || [];
  var i;

  while (cbs && ~(i = cbs.indexOf(cb))) {
    cbs.splice(i, 1);
  }

  return this;
};
/**
 * @param  {String} name
 * @return {Event}
 */


Event.prototype.fire = function () {
  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;
  var name = arguments.length > 1 ? arguments[1] : undefined;
  this._cbs = this._cbs || {};
  var cbs = this._cbs[name];

  if (cbs) {
    //var args = [].slice.call(arguments, 1);
    var l = cbs.length;

    for (var _len = arguments.length, data = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      data[_key - 2] = arguments[_key];
    }

    while (l--) {
      cbs[l].apply(scope, [].concat(data));
    }
  }

  return this;
};

/* harmony default export */ __webpack_exports__["default"] = (new Event());

/***/ }),

/***/ "./src/board/Graph.js":
/*!****************************!*\
  !*** ./src/board/Graph.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
// const util = require('../util/util');
 // 固定图形

function Graph(user, option) {
  this.user = user;
  this.type = 'graph';
  this.graph = option.graph; // line:直线 circle:圆 rect: 矩形

  this.seq = option.seq; // seq 唯一编号

  this.show = option.show; // 是否展示

  this.status = 'begin'; // 图形的状态

  this.select = false; // 是否被选了

  this.time = _util_util__WEBPACK_IMPORTED_MODULE_0__["default"].getTimeStamp();
  this.color = option.color;
  this.thin = option.thin;
  this.solid = option.solid || false; // 是否实心
  // 记录开始点与结束点

  this.startPoint = {
    x: option.beginPoint.x,
    y: option.beginPoint.y,
    seq: option.beginPoint.seq
  };
  this.endPoint = {
    x: option.endPoint.x,
    y: option.endPoint.y,
    seq: option.endPoint.seq
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Graph);

/***/ }),

/***/ "./src/board/GroupTemplate.js":
/*!************************************!*\
  !*** ./src/board/GroupTemplate.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var GroupTemplate =
/*#__PURE__*/
function () {
  function GroupTemplate() {
    _classCallCheck(this, GroupTemplate);
  }

  _createClass(GroupTemplate, [{
    key: "getTemplate",
    value: function getTemplate() {
      return "<div id=\"tx_board_canvas_box\" class=\"tx_board_canvas_box\" style=\"position: absolute;\">\n      <canvas style=\"z-index:10;position:absolute; top:0; left:0;line-height:1;\"></canvas>\n<div class=\"tic_board_bg_pregress lds-css ng-scope\" style=\"display:none; position:absolute;left: 50%;top: 50%;-webkit-transform: translateX(-50%) translateY(-50%);transform: translateX(-50%) translateY(-50%);overflow:hidden;width:70px;height:70px\"><div style=\"width:100%;height:100%\" class=\"lds-ellipsis\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div><style type=\"text/css\">@keyframes lds-ellipsis3 {\n  0%, 25% {\n    left: 32px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  50% {\n    left: 32px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  75% {\n    left: 100px;\n  }\n  100% {\n    left: 168px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes lds-ellipsis3 {\n  0%, 25% {\n    left: 32px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  50% {\n    left: 32px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  75% {\n    left: 100px;\n  }\n  100% {\n    left: 168px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@keyframes lds-ellipsis2 {\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  25%, 100% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n}\n@-webkit-keyframes lds-ellipsis2 {\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  25%, 100% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n}\n@keyframes lds-ellipsis {\n  0% {\n    left: 32px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  25% {\n    left: 32px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    left: 100px;\n  }\n  75% {\n    left: 168px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  100% {\n    left: 168px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n}\n@-webkit-keyframes lds-ellipsis {\n  0% {\n    left: 32px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  25% {\n    left: 32px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    left: 100px;\n  }\n  75% {\n    left: 168px;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n  100% {\n    left: 168px;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n}\n.lds-ellipsis {\n  position: relative;\n}\n.lds-ellipsis > div {\n  position: absolute;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  width: 40px;\n  height: 40px;\n}\n.lds-ellipsis div > div {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #f00;\n  position: absolute;\n  top: 100px;\n  left: 32px;\n  -webkit-animation: lds-ellipsis 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n  animation: lds-ellipsis 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n}\n.lds-ellipsis div:nth-child(1) div {\n  -webkit-animation: lds-ellipsis2 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n  animation: lds-ellipsis2 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n  background: #ce64a6;\n}\n.lds-ellipsis div:nth-child(2) div {\n  -webkit-animation-delay: -0.5s;\n  animation-delay: -0.5s;\n  background: #bda0b2;\n}\n.lds-ellipsis div:nth-child(3) div {\n  -webkit-animation-delay: -0.25s;\n  animation-delay: -0.25s;\n  background: #45aee7;\n}\n.lds-ellipsis div:nth-child(4) div {\n  -webkit-animation-delay: 0s;\n  animation-delay: 0s;\n  background: #0055a5;\n}\n.lds-ellipsis div:nth-child(5) div {\n  -webkit-animation: lds-ellipsis3 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n  animation: lds-ellipsis3 1s cubic-bezier(0, 0.5, 0.5, 1) infinite forwards;\n  background: #ce64a6;\n}\n.lds-ellipsis {\n  width: 70px !important;\n  height: 70px !important;\n  -webkit-transform: translate(-35px, -35px) scale(0.35) translate(35px, 35px);\n  transform: translate(-35px, -35px) scale(0.35) translate(35px, 35px);\n}\n</style></div>\n      <img class=\"tic_board_img_bg\" style=\"display:none; position:absolute; top:0; left:0;z-index:5;\" />\n      <iframe class=\"tic_board_h5_bg\" style=\"display:none; border:none;position:absolute; top:0; left:0;z-index:5;\" scrolling=\"no\"></iframe>\n      <div class=\"tic_board_bg\" style=\"z-index:4;position:absolute; top:0; left:0;\"></div>\n      <textarea maxlength=\"".concat(_config_Config__WEBPACK_IMPORTED_MODULE_0__["default"].TEXT_MAX_LENGTH, "\" style=\"display:none;\" rows=\"1\"></textarea>\n      <iframe class=\"tic_iframe_H5\" style=\"border:none;\" scrolling=\"no\"></iframe>\n    </div>");
    }
  }]);

  return GroupTemplate;
}();

/* harmony default export */ __webpack_exports__["default"] = (GroupTemplate);

/***/ }),

/***/ "./src/board/H5Control.js":
/*!********************************!*\
  !*** ./src/board/H5Control.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  postMessage: function postMessage(iframeDom, data) {
    iframeDom && iframeDom.contentWindow && iframeDom.contentWindow.postMessage(data, '*');
  },
  init: function init(iframeDom, data) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'init',
      data: data
    }, '*');
  },
  // 获取总页数
  count: function count(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'count'
    }, '*');
  },
  // 获取当前页索引
  getCurrentSlideIndex: function getCurrentSlideIndex(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'current_slide_index'
    }, '*');
  },
  // 获取当前步数索引
  getCurrentStepIndex: function getCurrentStepIndex(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'current_step_index'
    }, '*');
  },
  // 获取当前页的动画总步数
  getCurrentStepCount: function getCurrentStepCount(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'current_step_count'
    }, '*');
  },
  // 下一页
  nextPage: function nextPage(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'next_page'
    }, '*');
  },
  // 上一页
  prevPage: function prevPage(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'prev_page'
    }, '*');
  },
  // 下一步
  gotoNextStep: function gotoNextStep(iframeDom, data) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'next_step_new',
      data: data
    }, '*');
  },
  // 上一步
  gotoPreviousStep: function gotoPreviousStep(iframeDom, data) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'prev_step_new',
      data: data
    }, '*');
  },
  // 跳转到到指定页(暂时不用)
  gotoSlide: function gotoSlide(iframeDom, slideIndex, autoStart) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'goto_slide',
      data: {
        slideIndex: slideIndex,
        autoStart: autoStart
      }
    }, '*');
  },
  // 跳转到指定页指定步
  gotoTimestamp: function gotoTimestamp(iframeDom, slideIndex, stepIndex, autoStart, timeOffset) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'goto_timestamp',
      data: {
        slideIndex: slideIndex,
        stepIndex: stepIndex,
        autoStart: autoStart,
        timeOffset: timeOffset
      }
    }, '*');
  },
  // 跳转到指定页指定步
  gotoTimestampNew: function gotoTimestampNew(iframeDom, params) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'goto_timestamp_new',
      data: {
        slideIndex: params.slideIndex,
        stepIndex: params.stepIndex,
        resetStep: params.resetStep,
        isPassive: params.isPassive
      }
    }, '*');
  },
  clearIframeCache: function clearIframeCache(iframeDom) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'clear_cache'
    }, '*');
  },
  // 设置fid
  setFid: function setFid(iframeDom, fid) {
    this.postMessage(iframeDom, {
      module: 'tx_board_postmessage',
      cmd: 'set_fid',
      data: fid
    }, '*');
  }
});

/***/ }),

/***/ "./src/board/InputText.js":
/*!********************************!*\
  !*** ./src/board/InputText.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
// const util = require('../util/util');
 // 文字输入

function InputText(user, option) {
  this.user = user;
  this.type = 'inputtext';
  this.seq = option.belongSeq; // seq 唯一编号

  this.belongSeq = option.belongSeq;
  this.scale = 1; // 激光笔的状态  正在用 1 以及 结束了 0

  this.color = 0;
  this.typeFace = "";
  this.textSize = 0;
  this.fontStyle = 0;
  this.time = _util_util__WEBPACK_IMPORTED_MODULE_0__["default"].getTimeStamp();
  this.text = "";
  this.show = true; // 是否展示

  this.textWidth = 0; // 字体所占空间的宽度

  this.textHeight = 0; // 字体所占空间的高度

  this.location = {
    x: option.x,
    y: option.y
  };
}

/* harmony default export */ __webpack_exports__["default"] = (InputText);

/***/ }),

/***/ "./src/board/Line.js":
/*!***************************!*\
  !*** ./src/board/Line.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");

// const util = require('../util/util');
 // 随便画画

function Line(user, option) {
  // 开始画线之后 颜色、粗细等参数是不会变的
  // 开始画线的action 作为传参
  this.user = user; // line属于的user

  this.type = 'line'; // 类型为 画线

  this.seq = option.belongSeq; // seq 唯一编号,标注这条线的

  this.belongSeq = option.belongSeq; // belongSeq 这条线的所属

  this.show = option.show; // 是否展示

  this.status = 'begin'; // 线的状态  线的状态是没用的

  this.select = false; // 是否被选了

  this.color = option.color;
  this.time = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.thin = option.thin;
  this.startSeq = option.belongSeq;
  this.endSeq = 0; // 每一个点  {x, y, seq}

  this.lines = [{
    x: option.x,
    y: option.y,
    belongSeq: option.belongSeq,
    seq: option.seq
  }]; // 拟合曲线（平滑)

  this.fitCurve = []; // 线所在矩形区域的边界

  this.border = {
    maxX: option.x,
    maxY: option.y,
    minX: option.x,
    minY: option.y
  };
}

Line.prototype.setBorder = function (x, y) {
  if (x + this.thin > this.border.maxX) {
    this.border.maxX = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getEffectivePoint(x + this.thin, this.thin);
  }

  if (x - this.thin < this.border.minX) {
    this.border.minX = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getEffectivePoint(x - this.thin, this.thin);
  }

  if (y + this.thin > this.border.maxY) {
    this.border.maxY = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getEffectivePoint(y + this.thin, this.thin);
  }

  if (y - this.thin < this.border.minY) {
    this.border.minY = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getEffectivePoint(y - this.thin, this.thin);
  }
};

Line.prototype.sort = function () {
  // 给lines排序
  this.lines.sort(function (a, b) {
    return a.seq - b.seq;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (Line);

/***/ }),

/***/ "./src/board/Operation.js":
/*!********************************!*\
  !*** ./src/board/Operation.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// 操作的对象  user应该就是本地对象了
function Operation(user, option) {
  this.user = user; // 画画类型

  this.type = option.type; // 操作的seqs  是个数字或者数组

  this.seq = option.seq;
}

/* harmony default export */ __webpack_exports__["default"] = (Operation);

/***/ }),

/***/ "./src/board/Raser.js":
/*!****************************!*\
  !*** ./src/board/Raser.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// 激光笔
function Raser(user, option) {
  this.user = user;
  this.type = 'raser';
  this.seq = option.seq; // seq 唯一编号

  this.show = true; // 激光笔应该不需要 show  这个属性

  this.status = 1; // 激光笔的状态  正在用 1 以及 结束了 0

  this.color = option.color;
  this.radius = option.radius;
  this.location = {
    x: option.x,
    y: option.y
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Raser);

/***/ }),

/***/ "./src/board/Select.js":
/*!*****************************!*\
  !*** ./src/board/Select.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// 选择框
// 默认是点选 pointselect  点选不需要重绘
// 当某一个滑动距离变大时 认为变成了 框选 select  需要重绘
function Select(user, option) {
  this.user = user;
  this.type = 'select';
  this.seq = Math.floor(Math.random() * 100); // seq 唯一编号

  this.show = true; // 是否展示框选

  this.color = option.color;
  this.startInfo = {
    x: option.startx,
    y: option.starty
  };
  this.location = {
    x: option.x,
    y: option.y
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Select);

/***/ }),

/***/ "./src/board/Store.js":
/*!****************************!*\
  !*** ./src/board/Store.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es7_object_values__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es7.object.values */ "./node_modules/core-js/modules/es7.object.values.js");
/* harmony import */ var core_js_modules_es7_object_values__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_object_values__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es6.string.starts-with */ "./node_modules/core-js/modules/es6.string.starts-with.js");
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _config_Constant__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../config/Constant */ "./src/config/Constant.js");
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _util_Seq__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../util/Seq */ "./src/util/Seq.js");
/* harmony import */ var _Event__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Event */ "./src/board/Event.js");
/* harmony import */ var _Operation__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Operation */ "./src/board/Operation.js");
/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Line */ "./src/board/Line.js");
/* harmony import */ var _InputText__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./InputText */ "./src/board/InputText.js");
/* harmony import */ var _Graph__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Graph */ "./src/board/Graph.js");
/* harmony import */ var _Select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Select */ "./src/board/Select.js");
/* harmony import */ var _Raser__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./Raser */ "./src/board/Raser.js");
/* harmony import */ var _net_Request__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../net/Request */ "./src/net/Request.js");
/* harmony import */ var _net_Report__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../net/Report */ "./src/net/Report.js");
/* harmony import */ var _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../net/ELKLog */ "./src/net/ELKLog.js");
/* harmony import */ var _H5Control__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./H5Control */ "./src/board/H5Control.js");
/* harmony import */ var _model_BoardInfoModel__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../model/BoardInfoModel */ "./src/model/BoardInfoModel.js");
/* harmony import */ var _model_TEduBoardWarningCode__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../model/TEduBoardWarningCode */ "./src/model/TEduBoardWarningCode.js");
/* harmony import */ var _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../model/TEduBoardErrorCode */ "./src/model/TEduBoardErrorCode.js");
/* harmony import */ var _model_TEduBoardContentFitMode__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../model/TEduBoardContentFitMode */ "./src/model/TEduBoardContentFitMode.js");
/* harmony import */ var _util_FitCurve__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../util/FitCurve */ "./src/util/FitCurve.js");
/* harmony import */ var _model_DragModel__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../model/DragModel */ "./src/model/DragModel.js");
/* harmony import */ var _model_DragDataList__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../model/DragDataList */ "./src/model/DragDataList.js");
















function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
























function Store(options) {
  this.options = JSON.parse(JSON.stringify(options));
  this.maxSeq = 0; //最大的seq 用来解决各端同步收到IM消息顺序不对的问题，小于maxSeq的直接丢弃

  this.request = new _net_Request__WEBPACK_IMPORTED_MODULE_26__["default"](options);
  this.report = new _net_Report__WEBPACK_IMPORTED_MODULE_27__["default"](this.request); // 默认权限是0

  this.permissions = 0;

  if (Object.prototype.toString.call(options.syncHistroyEnable) === '[object Undefined]' || Object.prototype.toString.call(options.syncHistroyEnable) === '[object Null]') {
    this.syncHistroyEnable = true;
  } else {
    this.syncHistroyEnable = options.syncHistroyEnable;
  }

  this.identifier = options.tlsData.identifier; // 课堂ID

  this.classId = options.classId;
  this.user = options.tlsData.identifier; // data：所有的对象  按照开始时间 排序

  this.data = {};
  this.progressEnable = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROGRESS_ENABLE; // 操作data

  this.opData = {};
  this.opIndex = {}; // userData 所有的用户的对象， 具体的对象和data里面是同一个

  this.userData = {}; // 背景图

  this.backgroundPic = {}; // 背景颜色

  this.backgroundColor = {}; // PPT动画文件预加载状态

  this.pptFilePreloaded = {}; // 白板比例

  this.boardRatio = {};
  this.dragDataList = new _model_DragDataList__WEBPACK_IMPORTED_MODULE_36__["default"](); // 白板放大，拖动数据

  this.scale = this.options.scale || _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].SCALE;
  this.ratio = this.options.ratio || _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].RATIO; // 白板的分辨率

  this.currentGroup = null;
  this.currentBoard = null;
  this.boardList = [];
  this.groups = []; // 画笔颜色

  this.color = 0; // 画笔粗细

  this.thin = 0; // 文字输入字体

  this.typeFace = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_FONT_FAMILY; // 文字输入文字大小

  this.textSize = 0; // 文字输入文字颜色

  this.textColor = ''; // 文字输入样式  0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；

  this.fontStyle = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_FONT_STYLE.NORMAL; // 涂鸦平滑级别

  this.smoothLevel = 0; // 数据同步开关

  this.dataSyncEnable = false; // 预加载深度

  this.preloadDepth = 0; // 全局背景色

  this.globalBackgroundColor = 0; // 当前的状态   line:随便画线  eraser: 橡皮擦  raser: 激光笔  pointselect: 点选  select: 选择框  move: 拖拽  graph-line:直线
  // graph-circle:圆   graph-rect:矩形

  this.type = null; // 无背景图的时候  是否透明

  this.transparent = false; // 当前操作的seq

  this.seq = 0; // 当前被选择的元素列表

  this.selectedList = []; // 选择之后 拖拽时展示的总区域   点选为当前元素的外区域  框选为所有被选中的图形的总区域

  this.selectArea = {}; // 用于计算seq

  this.gSeq = 0; // 白板ID的Seq

  this.boardIdSeq = 0;
  this.belongLineSeq = 0; //画线条的时候，用来标注移动过程中是属于什么哪条线段的
  // 对外发送的白板实时数据

  this.realTimeData = [];
  this.beforeMoveType = ''; // 记录由move之前的状态 （点选/框选）

  this.containerWidth = 0; // 白板所在容器的宽度（id节点的宽度）

  this.containerHeight = 0; // 白板所在容器的高度（id节点的高度）

  this.boardWidth = 0;
  this.boardHeight = 0;
  this.ctx = null;
  this.boardContentFitMode = 0;
  _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].setSdkAppid(options.tlsData.sdkAppId);
  _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].setRoomId(this.classId);
  _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].setUserId(options.tlsData.identifier);
  this.applyPermissions(function () {});
  this.initInterval();
}
/**
 * 名单的鉴权
 */


Store.prototype.applyPermissions = function (callback) {
  var _this = this;

  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp();
  this.request.applyPermissions().then(function (res) {
    if (res.data.error_code === 0 && res.data.level) {
      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(); // 毫秒级的时间

      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime = res.data.server_time; // 毫秒级的时间

      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localServerTimeDiff = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime - _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime; // 毫秒级的时间

      _this.permissions = res.data.level;

      _this.request.setPermissions(_this.permissions);

      _this.setDefaultBoard();

      _this.initData(_this.options);

      callback();

      if (_this.syncHistroyEnable && _this.classId) {
        _this.syncHistroyData();
      } // 白板SDK鉴权通过


      _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('verify_sdk', {
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startTime,
        extra_info: JSON.stringify({
          permissions: _this.permissions
        })
      }); // 白板SDK鉴权通过触发init

      _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this, 'TEB_INIT');
    } else {
      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(); // 毫秒级的时间

      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime = res.data.server_time; // 毫秒级的时间

      _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localServerTimeDiff = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime - _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime; // 毫秒级的时间

      _this.permissions = 0;

      _this.request.setPermissions(_this.permissions); // 白板SDK鉴权失败


      _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_AUTH, 'please purchase the service first');

      _this.setDefaultBoard();

      _this.initData(_this.options);

      _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('verify_sdk', {
        action_result: res.data.error_code,
        action_info: JSON.stringify(res.data),
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startTime,
        extra_info: JSON.stringify({
          permissions: _this.permissions
        })
      });
    }

    _this.setNeedDraw(true);
  }, function (error) {
    // 如果网络/服务器异常了，则直接取本地时间
    _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(); // 毫秒级的时间

    _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(); // 毫秒级的时间

    _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localServerTimeDiff = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].localTime - _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].serverTime; // 毫秒级的时间差

    _this.permissions = 0;

    _this.request.setPermissions(_this.permissions); // 白板SDK鉴权失败


    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_AUTH, 'please purchase the service first');

    _this.setDefaultBoard();

    _this.initData(_this.options);

    _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('verify_sdk', {
      action_result: -1,
      action_info: JSON.stringify(error),
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify({
        permissions: _this.permissions
      })
    });

    _this.setNeedDraw(true);
  });
};
/**
 * 创建文件白板新的ID
 */


Store.prototype.createBoardIdForFile = function (fid, uid, timestamp, pageCount, platform) {
  var seq = 1;
  var boards = [];

  for (var i = 0; i < pageCount; i++) {
    // 其他白板的boardID为 pc/web/ios/android_uid_当前时间戳（秒）_seq_fid
    var id = "".concat(platform, "_").concat(uid, "_").concat(timestamp, "_").concat(seq++, "_").concat(fid);
    boards.push(id);
  }

  return boards;
};
/**
 * 创建默认白板新的ID
 */


Store.prototype.createBoardId = function () {
  var groupId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentGroup;
  var timestamp = arguments.length > 1 ? arguments[1] : undefined;

  // 默认白板的boardID为 #DEFAULT
  if (this.boardIdSeq == 0) {
    this.boardIdSeq++;
    return _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD; // 默认的白板
  }

  if (groupId === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {// 如果是默认分组
  } else {} // 其他白板的boardID为 pc/web/ios/android_uid_当前时间戳（秒）_seq_fid


  return "".concat(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM, "_").concat(this.identifier, "_").concat(timestamp || _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getSecondTime(), "_").concat(this.boardIdSeq++, "_").concat(groupId);
};
/**
 * 初始化定时任务
 */


Store.prototype.initInterval = function () {
  var _this2 = this;

  this.sendInterval = setInterval(function () {
    if (_this2.realTimeData.length > 0) {
      _this2.sendRequest();
    }
  }, 200);
};

Store.prototype.resetData = function () {
  // data：所有的对象  按照开始时间 排序
  this.data = {}; // 操作data

  this.opData = {};
  this.opIndex = {}; // userData 所有的用户的对象， 具体的对象和data里面是同一个

  this.userData = {}; // 背景图

  this.backgroundPic = {}; // 背景颜色

  this.backgroundColor = {};
  this.currentGroup = null;
  this.currentBoard = null;
  this.boardList = [];
  this.groups = []; // 当前操作的seq

  this.seq = 0; // 当前被选择的元素列表

  this.selectedList = []; // 选择之后 拖拽时展示的总区域   点选为当前元素的外区域  框选为所有被选中的图形的总区域

  this.selectArea = {}; // 用于计算seq

  this.gSeq = 0; // 白板ID的Seq

  this.boardIdSeq = 0;
  this.belongLineSeq = 0; //画线条的时候，用来标注移动过程中是属于什么哪条线段的
  // 对外发送的白板实时数据

  this.realTimeData = [];
  this.beforeMoveType = ''; // 记录由move之前的状态 （点选/框选）

  this.setDefaultBoard();
  this.initData(this.options);
};

Store.prototype.initData = function (options) {
  var _this3 = this;

  this.setProgressEnable(options.progressEnable); // 设置是否显示资源加载进度条

  this.setColor(options.brushColor); // 设置颜色

  this.setThin(options.brushThin); // 设置线条粗细

  this.setTextFontFamily(options.textFamily); // 设置文字字体

  this.setTextSize(options.textSize); // 设置文字大小

  this.setTextColor(options.textColor); // 设置文字颜色

  this.setTextFontStyle(options.textStyle); // 设置文本样式

  this.setSmoothLevel(options.smoothLevel); // 设置涂鸦平滑级别

  this.setDataSyncEnable(options.dataSyncEnable); // 设置是否启用数据同步

  this.setPreloadDepth(options.preloadDepth); // 设置预加载深度

  this.setBoardContentFitMode(options.boardContentFitMode, false); // 设置内容填充方式，不上报

  var types = ['MOUSE', 'LINE', 'ERASER', 'RASER', 'GRAPH-LINE', 'GRAPH-OVAL', 'GRAPH-RECT', 'GRAPH-OVAL-SOLID', 'GRAPH-RECT-SOLID', 'POINTSELECT', 'SELECT', 'INPUTTEXT', 'ZOOM'];

  if (Object.prototype.toString.call(options.toolType) === '[object Undefined]' || Object.prototype.toString.call(options.toolType) === '[object Null]') {
    options.toolType = 1; // 画笔
  }

  this.setType(_config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BOARD_ACTION_TYPE[types[options.toolType]]); // 设置要画的类型（线条|直线|图形）

  this.setGlobalBackgroundColor(options.globalBackgroundColor, true); // 设置全局颜色,不上报

  this.setTransparent(options.transparent); // 设置无背景图时，是否透明

  this.setSelectArea(); // 设置选中的区域

  setTimeout(function () {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this3, 'TEB_OPERATE_CANREDO_STATUS_CHANGED', _this3.canRedo());
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this3, 'TEB_OPERATE_CANUNDO_STATUS_CHANGED', _this3.canUndo());
  }, 500);
};
/**
 * 增加白板，支持单个白板或者一个白板数组
 * @param {String|Array} boardId
 * @param {Array} urls 只会存在于上传文件类型，且接口不对外暴露
 */


Store.prototype.addBoard = function (boardId) {
  var _this4 = this;

  var needReport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var boards = [];

  if (Array.isArray(boardId)) {
    boards = boardId;
  } else {
    if (!boardId) {
      return;
    }

    boards = [boardId];
  }

  var fileBoardDataMap = {};
  boards.forEach(function (board, index) {
    _this4.userData[board] = {};
    _this4.userData[board][_this4.identifier] = [];
    _this4.data[board] = [];
    _this4.opData[board] = [];
    _this4.opIndex[board] = 0;
    _this4.backgroundColor[board] = _this4.globalBackgroundColor;
    _this4.backgroundPic[board] = {
      url: '',
      user: board === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD ? _this4.identifier : _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Uid(board),
      show: true,
      mode: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT,
      type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE
    };

    if (_this4.boardList.indexOf(board) === -1) {
      _this4.boardList.push(board);
    }

    var fid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(board);

    if (!fileBoardDataMap[fid]) {
      fileBoardDataMap[fid] = [];
    }

    fileBoardDataMap[fid].push(board);
  });

  for (var f in fileBoardDataMap) {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ADDBOARD', fileBoardDataMap[f], f);
  }

  this.sortBoard(); // 上报创建白板的数据

  needReport && this.report.reportCreateBoards(this.currentBoard, boards);
  return this.boardList;
};

Store.prototype.findLine = function (boardId, user, action) {
  var userData = this.userData[boardId][user];
  var line;

  for (var i = 0, len = userData.length; i < len; i++) {
    var element = userData[i];

    if (element.type === 'line' && element.seq == action.belongSeq) {
      // 并是同一根线条
      line = element;
      break;
    }
  }

  return line;
};
/**
 * 返回是否需要draw
 */


Store.prototype.setNeedDraw = function () {
  var needDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  console.log('setNeedDraw', needDraw);
  this.needDraw = needDraw;
};
/**
 * 返回是否需要draw
 */


Store.prototype.getNeedDraw = function () {
  return this.needDraw;
};
/**
 * 返回白板列表
 * @returns {Array} 返回白板列表
 */


Store.prototype.getBoardList = function () {
  return this.boardList;
};
/**
 * 返回白板背景图片列表
 * @returns {Array} 返回白板背景图片列表
 */


Store.prototype.getBoardPicList = function () {
  return this.backgroundPic;
};

Store.prototype.setDefaultBoard = function () {
  // 设置默认的白板分组
  this.currentGroup = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP;
  var timestamp = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getSecondTime();
  this.addGroup(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP, this.user, null, 1, 0, timestamp, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG, 0); // 设置默认的白板分组

  this.currentBoard = this.createBoardId();
  this.addBoard(this.currentBoard, false);
  this.setBackgroundColor(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(this.globalBackgroundColor), true); // 设置当前白板颜色, 不上报

  delete this.setDefaultBoard; // 然后删除该方法
};

Store.prototype.removeBoard = function (boardIds) {
  if (!Array.isArray(boardIds)) {
    boardIds = [boardIds];
  }

  var deleteBoards = []; // 要删除的白板

  var deleteFids = []; // 要删除的文件

  var currentChange = false; // 当前白板页是否有删除

  var fileBoardDataMap = {}; // 删除的文件数据

  for (var i = 0, len = boardIds.length; i < len; i++) {
    var item = boardIds[i]; // 默认的白板不能删除

    if (item === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD) {
      console.log('默认白板页不能删除');
      continue;
    }

    var index; // 白板在要删除的列表中,则删除

    if ((index = this.boardList.indexOf(item)) > -1) {
      deleteBoards.push(item);
      var fid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(item);

      if (!fileBoardDataMap[fid]) {
        fileBoardDataMap[fid] = [];
      }

      fileBoardDataMap[fid].push(item);
      delete this.userData[item];
      delete this.data[item];
      delete this.opData[item];
      delete this.opIndex[item];
      delete this.backgroundColor[item];
      delete this.backgroundPic[item]; // 如果要删除的页是当前页

      if (item == this.currentBoard) {
        currentChange = true;
        var boards = this.getBoardByGroup(this.currentGroup);
        var indexInGroup = boards.indexOf(item);

        if (indexInGroup === 0) {
          this.currentBoard = boards[indexInGroup + 1];
        } else {
          this.currentBoard = boards[indexInGroup - 1];
        }

        if (!this.currentBoard) {
          // 白板下面完全删除了, 则删除白板文件，同时当前白板页为默认分组下的页
          var defaultBoards = this.getBoardByGroup(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP);
          this.currentBoard = defaultBoards[this.getFileInfo(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP).currentPageIndex];
        }
      } // 先删除


      this.boardList.splice(index, 1); // 得到当前页和要删除的页，然后分别更新所在页在文件的index,pageCount
      // 1. 更新要删除的页

      var deleteFid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(item); // 获取要删除页所在的文件

      var deleteFidBoards = this.getBoardByGroup(deleteFid);
      var file = this.getFileInfo(deleteFid);

      if (deleteFidBoards.length === 0) {
        // 如果文件所有页都没有，则删除文件
        if (file) {
          this.deleteGroup(deleteFid);
          deleteFids.push(deleteFid);
        }
      } else {
        if (file) {
          file.pageCount = file.pageCount - 1; // 总页数-1

          if (file.pageCount === file.currentPageIndex) {
            // 如果当前页index 与 总页数相当于，则说明是删除了最后一页，当前index前移
            file.currentPageIndex = file.currentPageIndex - 1;
          }

          this.updateFileInfo(file);
        }
      }
    }
  } // 2. 更新当前页


  var currentFid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(this.currentBoard);
  var currentFidBoards = this.getBoardByGroup(currentFid);
  file = this.getFileInfo(currentFid);

  if (file) {
    file.pageCount = currentFidBoards.length; // 总页数

    file.currentPageIndex = currentFidBoards.indexOf(this.currentBoard); // 当前页所在的索引

    this.updateFileInfo(file);
  }

  this.currentGroup = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(this.currentBoard); // 如果有删除了白板，则触发删除白板事件

  for (var f in fileBoardDataMap) {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_DELETEBOARD', fileBoardDataMap[f], f);
  } // if (deleteBoards.length) {
  //   deleteBoards.forEach(item => {
  //     event.fire(this, 'TEB_DELETEBOARD', item, util.boardId2Fid(item));
  //   })
  // }
  // 如果当前页发送改变，则触发switch白板


  if (currentChange) {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_GOTOBOARD', this.currentBoard, _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(this.currentBoard));
  }

  this.setNeedDraw(true);
  return {
    deleteBoards: deleteBoards,
    deleteFids: deleteFids
  };
};
/**
 * 删除白板，支持单个白板或者一个白板数组
 * @param {String|Array} boardId
 * @param {String} fid 文件id
 * @returns {Array} 删除的白板数组
 */


Store.prototype.deleteBoard = function () {
  var boardId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentBoard;
  var fid = arguments.length > 1 ? arguments[1] : undefined;

  var _ref = this.removeBoard(boardId) || [],
      deleteBoards = _ref.deleteBoards,
      deleteFids = _ref.deleteFids;

  if (deleteBoards.length) {
    var bgUrl = this.backgroundPic[this.currentBoard] ? this.backgroundPic[this.currentBoard].url : '';
    bgUrl && this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
      "url": bgUrl,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "mode": this.backgroundPic[this.currentBoard].mode,
      "type": this.backgroundPic[this.currentBoard].type,
      "cleanBoard": 0
    });
    var deleteFiles = [];

    if (fid) {
      if (deleteFids.indexOf(fid) > -1) {
        deleteFiles = deleteFids;
      } else {
        deleteFiles.push(fid);
      }
    } else {
      deleteFiles = deleteFids;
    }

    var boards = this.getBoardByGroup(this.currentGroup);
    var index = boards.indexOf(this.currentBoard);
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.SWITCH_ACTION,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "toBoardId": this.currentBoard,
      "deleteBoards": deleteFiles.length ? [] : deleteBoards,
      // 如果是删除文件，则不传白板id
      "deleteFiles": deleteFiles.length ? deleteFiles : [],
      // 要删除的文件id
      "page": index,
      "step": 0
    });
    this.report.reportDeleteBoard(deleteBoards, this.currentBoard);
    var file = this.getFileInfo(this.currentGroup);
    file.currentPageIndex = index;
    file.currentPageStep = 0;
    file.pageCount = boards.length;
    this.report.reportAddFile(file);
  }

  return deleteBoards;
};
/**
 * 获取白板组
 * @returns {Array} 返回白板组
 */


Store.prototype.getGroup = function () {
  var _this5 = this;

  var groups = Object.assign([], this.groups);
  groups.forEach(function (item) {
    var boardInfoList = [];

    if (item.type === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG) {
      var boardIds = _this5.getBoardByGroup(item.fid) || [];
      boardIds.forEach(function (boardId) {
        var boardInfo = new _model_BoardInfoModel__WEBPACK_IMPORTED_MODULE_30__["default"](boardId, _this5.backgroundPic[boardId], _this5.backgroundColor[boardId]);
        boardInfoList.push(boardInfo);
      });
    }

    item.boardInfoList = boardInfoList;
  });
  return groups;
};
/**
 * 获取指定的文件信息
 */


Store.prototype.getFileInfo = function () {
  var fid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP;
  var file = null;
  var groups = this.getGroup();

  for (var i = 0, len = groups.length; i < len; i++) {
    var group = groups[i];

    if (fid === group.fid) {
      file = group;
      break;
    }
  }

  return file;
};
/**
 * 根据分组ID，返回该组下所有白板
 */


Store.prototype.getBoardByGroup = function () {
  var fid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP;
  var boards = [];
  boards = this.boardList.filter(function (item) {
    // 如果是默认分组，则默认白板也返回·
    if (fid === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP && item === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD) {
      return true;
    }

    return item.indexOf("_".concat(fid)) > -1;
  });
  return boards;
};
/**
 * 增加白板组(不上报，临时解决办法，参数太长了不在addGroup上加了，直接弄了一个新方法出来)
 * @param {String} group
 * @returns {Array} 返回白板组
 */


Store.prototype.addGroupNotReport = function (fid, title, uid, downloadUrl, pageCount, currentPageIndex, timestamp) {
  var platform = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM;
  var type = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG;
  var currentPageStep = arguments.length > 9 ? arguments[9] : undefined;
  var ratio = arguments.length > 10 ? arguments[10] : undefined;
  var scale = arguments.length > 11 ? arguments[11] : undefined;
  var isExist = false; // 是否已经存在

  for (var i = 0, len = this.groups.length; i < len; i++) {
    var group = this.groups[i];

    if (group.fid == fid) {
      isExist = true;
      break;
    }
  }

  if (isExist) {
    // 如果已经存在了, 且不是默认分组（默认分组在同步历史消息中会来更新页码，所以需要）
    return this.groups;
  }

  if (type == _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG) {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ADDFILE', fid);
  } else {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ADDH5PPTFILE', fid);
  }

  var fileObj = {
    fid: fid,
    title: title || fid,
    downloadURL: downloadUrl,
    pageCount: pageCount,
    currentPageIndex: currentPageIndex,
    currentPageStep: currentPageStep,
    uid: uid,
    timestamp: timestamp,
    platform: platform,
    ratio: ratio,
    type: type,
    scale: scale
  };
  return this.groups.push(fileObj);
};
/**
 * 增加白板组
 * @param {String} group
 * @returns {Array} 返回白板组
 */


Store.prototype.addGroup = function (fid, title, uid, downloadUrl, pageCount, currentPageIndex, timestamp) {
  var platform = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM;
  var type = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG;
  var currentPageStep = arguments.length > 9 ? arguments[9] : undefined;
  var ratio = arguments.length > 10 ? arguments[10] : undefined;
  var scale = arguments.length > 11 ? arguments[11] : undefined;
  var isExist = false; // 是否已经存在

  for (var i = 0, len = this.groups.length; i < len; i++) {
    var group = this.groups[i];

    if (group.fid == fid) {
      isExist = true;
      break;
    }
  }

  if (isExist) {
    // 如果已经存在了, 且不是默认分组（默认分组在同步历史消息中会来更新页码，所以需要）
    return this.groups;
  }

  if (type == _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG) {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ADDFILE', fid);
  } else {
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ADDH5PPTFILE', fid);
  }

  var fileObj = {
    fid: fid,
    title: title || fid,
    downloadURL: downloadUrl,
    pageCount: pageCount,
    currentPageIndex: currentPageIndex,
    currentPageStep: currentPageStep,
    uid: uid,
    timestamp: timestamp,
    platform: platform,
    ratio: ratio,
    type: type,
    scale: scale // // 默认分组不上报

  };

  if (fid && fid !== _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
    this.report.reportAddFile(fileObj);
  }

  return this.groups.push(fileObj);
};
/**
 * 删除分组，同时删除分组下的白板
 * 但不能删除默认的白板组
 * @param {String} groupId 分组ID
 * @returns {Boolean} true 删除白板组成功，false 删除白板组失败
 */


Store.prototype.deleteGroup = function (groupId) {
  var needReport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (groupId === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
    // 如果是默认的分组，则不允许删除
    console.error('不允许删除默认的白板分组');
    return [];
  }

  var index = -1; //

  for (var i = 0, len = this.groups.length; i < len; i++) {
    var group = this.groups[i];

    if (group.fid == groupId) {
      index = i;
      break;
    }
  }

  if (index > -1) {
    this.groups.splice(index, 1);
    _H5Control__WEBPACK_IMPORTED_MODULE_29__["default"].clearIframeCache(this.iframeDom); // 情况iframe的缓存信息
  }

  needReport && this.report.reportDeleteFile(groupId);
  return this.getBoardByGroup(groupId);
};
/**
 * 设置线条|图形的颜色
 * @param {Number} color 数字颜色
 */


Store.prototype.setColor = function (color) {
  if (!color) {
    // 包括undefined和null
    color = _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].COLOR.RED;
  }

  this.cancelSelect();

  if (typeof color === 'number') {
    this.color = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(color);
  } else if (typeof color === 'string' && color.indexOf('#') == 0 && (color.length === 4 || color.length === 7)) {
    this.color = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(color);
  } else if (typeof color === 'string' && color.startsWith('rgba(')) {
    // 如果是rgba
    this.color = color;
  }
};
/**
 * 返回当前的颜色
 * @returns {String} 返回当前的颜色 rgba值
 */


Store.prototype.getColor = function () {
  return this.color;
};
/**
 * 设置线条的粗细
 * @param {Number} thin 默认100
 */


Store.prototype.setThin = function (thin) {
  if (!thin) {
    thin = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].THIN;
  }

  this.cancelSelect();
  this.thin = thin;
};
/**
 * 返回当前线条的粗细
 * @returns {String} 返回当前线条的粗细
 */


Store.prototype.getThin = function () {
  return this.thin;
};
/**
 * 设置涂鸦平滑级别
 * @param smoothLevel 平滑级别，取值0～1之间的浮点数，0表示不启用平滑，默认0.1
 */


Store.prototype.setSmoothLevel = function (smoothLevel) {
  if (Object.prototype.toString.call(smoothLevel) === '[object Undefined]' || Object.prototype.toString.call(smoothLevel) === '[object Null]') {
    smoothLevel = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].SMOOTH_LEVEL;
  }

  smoothLevel = Math.max(0, Math.min(1, smoothLevel));
  this.smoothLevel = smoothLevel;
};
/**
 * 返回当前涂鸦平滑级别
 * @returns {Number} 返回当前涂鸦平滑级别
 */


Store.prototype.getSmoothLevel = function () {
  return this.smoothLevel;
};
/**
 * 设置文字大小
 * @param {Number} size 默认12px
 */


Store.prototype.setTextSize = function (size) {
  if (!size) {
    size = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_SIZE;
  }

  this.cancelSelect();
  this.textSize = size;
};
/**
 * 返回文字大小
 * @returns {String} 返回文字大小
 */


Store.prototype.getTextSize = function () {
  return this.textSize;
};
/**
 * 设置文本颜色
 * @param {Number} textColor 文本颜色
 */


Store.prototype.setTextColor = function (textColor) {
  if (!textColor) {
    textColor = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_COLOR;
  }

  this.cancelSelect();

  if (typeof textColor === 'number') {
    this.textColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(textColor);
  } else if (typeof textColor === 'string' && textColor.indexOf('#') == 0 && (textColor.length === 4 || textColor.length === 7)) {
    this.textColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(textColor);
  } else if (typeof textColor === 'string' && textColor.startsWith('rgba(')) {
    // 如果是rgba
    this.textColor = textColor;
  }
};
/**
 * 返回当前的文字颜色
 * @returns {String} 返回当前的文字颜色 rgba值
 */


Store.prototype.getTextColor = function () {
  return this.textColor;
};
/**
 * 设置输入文字字体
 * @param {Number} size 默认12px
 */


Store.prototype.setTextFontFamily = function (typeFace) {
  if (!typeFace) {
    typeFace = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_FONT_FAMILY;
  }

  this.cancelSelect();
  this.typeFace = typeFace;
};
/**
 * 返回文字输入字体
 * @returns {String} 返回文字输入字体
 */


Store.prototype.getTextFontFamily = function () {
  return this.typeFace;
};
/**
 * 设置文字样式 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；
 * @param {Number} size 默认12px
 */


Store.prototype.setTextFontStyle = function (fontStyle) {
  if (!fontStyle) {
    fontStyle = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].TEXT_FONT_STYLE.NORMAL;
  }

  this.cancelSelect();
  this.fontStyle = fontStyle;
};
/**
 * 返回文字输入字体
 * @returns {String} 返回文字输入字体
 */


Store.prototype.getTextFontStyle = function () {
  return this.fontStyle;
};
/**
 * 设置数据同步开关
 * @param enable 是否启用数据同步
 */


Store.prototype.setDataSyncEnable = function () {
  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].DATA_SYNC_ENABLE;
  this.request.setReportEnable(enable);
  this.dataSyncEnable = enable;
};
/**
 * 检查是否启用了数据同步
 * @returns {boolean} 是否启用了数据同步
 */


Store.prototype.isDataSyncEnable = function () {
  return this.dataSyncEnable;
};
/**
 * 设置是否显示资源加载进度条
 * @param enable 是否显示资源加载进度条
 */


Store.prototype.setProgressEnable = function () {
  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROGRESS_ENABLE;
  this.progressEnable = enable;
};
/**
 * 检查是否显示资源加载进度条
 * @returns {boolean} 是否显示资源加载进度条
 */


Store.prototype.isProgressEnable = function () {
  return this.progressEnable;
};
/**
 * 设置预加载深度
 * @param depth 预加载深度，默认为5（预加载前后五页白板）
 */


Store.prototype.setPreloadDepth = function () {
  var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PRELOAD_DEPTH;
  this.preloadDepth = depth;
};
/**
 * 设置要画的线条或者图形（涂鸦类型）
 * 如果设置的类型不在白板支持范围内，则设置为线条
 * @param {String} type
 */


Store.prototype.setType = function (type) {
  var values = Object.values(_config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BOARD_ACTION_TYPE);
  this.cancelSelect();

  if (values.indexOf(type) > -1) {
    this.type = type;
  } else {
    this.type = _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BOARD_ACTION_TYPE.LINE;
  }
};
/**
 * 获取当前涂鸦的类型
 * @returns {String} 涂鸦类型
 */


Store.prototype.getType = function () {
  return this.type;
};
/**
 * 设置无背景图时，是否透明
 * @param {Boolean} transparent 默认 false
 */


Store.prototype.setTransparent = function () {
  var transparent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  this.transparent = transparent;
};
/**
 * 获取无背景图时，是否透明
 * @returns {String} 是否透明
 */


Store.prototype.getTransparent = function () {
  return this.transparent;
};
/**
 * 设置背景颜色
 * @param {Number} color 数字颜色，默认白色
 * @param {*} noSend 不发送和不上报，用户主动改变的才需要上报和发送， 对外的接口只能是上报的，只有内部的才不上报
 */


Store.prototype.setBackgroundColor = function () {
  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].COLOR.WHITE;
  var noSend = arguments.length > 1 ? arguments[1] : undefined;
  var boardId = this.currentBoard;

  if (_typeof(color) === "object") {
    boardId = color['boardId'];
    color = color['color'];
  }

  var numberColor = 0;

  if (typeof color === 'number') {
    this.backgroundColor[boardId] = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(color);
    numberColor = color;
  } else if (typeof color === 'string' && color.indexOf('#') == 0 && (color.length === 4 || color.length === 7)) {
    this.backgroundColor[boardId] = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(color);
    numberColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(color));
  } else if (typeof color === 'string' && color.startsWith('rgba(')) {
    // 如果是rgba
    this.backgroundColor[boardId] = color;
    numberColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(color);
  }

  this.setNeedDraw(true);

  if (!noSend) {
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_COLOR_ACTION,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "color": numberColor,
      "isGlobal": 0
    });
    this.report.reportSetBoardBgColor(boardId, numberColor);
  }
};
/**
 * 获取当前的白板的背景色
 */


Store.prototype.getBackgroundColor = function () {
  return this.backgroundColor[this.getCurrentBoard()];
};
/**
 * 设置选择的区域
 * @param {Number} x x坐标
 * @param {Number} y y坐标
 * @param {Number} width 选取范围的宽度
 * @param {Number} height 选取范围的高度
 */


Store.prototype.setSelectArea = function () {
  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  this.selectArea = {
    x: x,
    y: y,
    width: width,
    height: height
  };
};
/**
 * 获取选取范围
 */


Store.prototype.getSelectArea = function () {
  return this.selectArea;
};
/**
 * 获取当前白板
 */


Store.prototype.getCurrentBoard = function () {
  return this.currentBoard;
};
/**
 * 获取当前白板所处的分组/文件
 */


Store.prototype.getCurrentFile = function () {
  return this.currentGroup;
};
/**
 * 获取白板原始数据
 */


Store.prototype.getData = function () {
  return this.data;
};
/**
 * 获取当前白板的所有数据
 */


Store.prototype.getCurrentBoardData = function () {
  return {
    data: this.data[this.currentBoard],
    userData: this.userData[this.currentBoard],
    opData: this.opData[this.currentBoard],
    opIndex: this.opIndex[this.currentBoard],
    backgroundPic: this.backgroundPic[this.currentBoard],
    backgroundColor: this.backgroundColor[this.currentBoard],
    ratio: this.boardRatio[this.currentBoard],
    scale: this.getBoardScale()
  };
};
/**
 * 获取当前白板的背景图片信息
 * @returns {Object} 背景图片信息
 */


Store.prototype.getCurrentBoardPic = function () {
  return this.backgroundPic[this.currentBoard];
};
/**
 * 获取当前白板的背景颜色信息
 * @returns {String} 返回当前白板的背景颜色
 */


Store.prototype.getCurrentBoardColor = function () {
  return this.backgroundColor[this.currentBoard];
};
/**
 * 获取当前选中的line和graph
 * @returns {Array} 返回当前选中的line和graph
 */


Store.prototype.getSelectList = function () {
  return this.selectedList;
};
/**
 * 清空白板
 * @param {boolean} keepBackground 是否清空背景图片和背景颜色
 */


Store.prototype.clearBoard = function (keepBackground) {
  if (!this.currentBoard) {
    return;
  } // 清空当前白板的数据


  this.data[this.currentBoard] = [];
  this.opData[this.currentBoard] = [];
  this.opIndex[this.currentBoard] = 0;
  this.userData[this.currentBoard] = {};
  this.userData[this.currentBoard][this.identifier] = [];

  if (!keepBackground) {
    this.backgroundPic[this.currentBoard] = {
      show: false,
      mode: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT,
      url: '',
      type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE,
      user: ''
    };
    this.backgroundColor[this.currentBoard] = this.globalBackgroundColor;
  }

  this.cancelSelect();
  this.setNeedDraw(true);
};
/**
 * 清空文件涂鸦数据
 */


Store.prototype.clearFileDrawData = function (fids) {
  var _this6 = this;

  fids.forEach(function (fid) {
    var boards = _this6.getBoardByGroup(fid) || [];
    boards.forEach(function (board) {
      // 变量初始化
      _this6.data[board] = [];
      _this6.opData[board] = [];
      _this6.opIndex[board] = 0;
      _this6.userData[board] = {};
      _this6.userData[board][_this6.identifier] = [];
    });
  });
  this.cancelSelect();
  this.setNeedDraw(true);
}; // 需要对外发送的清空操作


Store.prototype.clear = function () {
  this.clearBoard();
  this.realTimeData.push({
    action: 101,
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
  });
  this.report.reportClear(this.currentBoard);
}; //保留背景图的清空


Store.prototype.clearDraws = function () {
  this.clearBoard(true);
  this.realTimeData.push({
    action: 102,
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
  });
  this.report.reportClearDraws(this.currentBoard);
};
/**
 * 清空文件涂鸦
 * @param {Array} fids 文件ID
 */


Store.prototype.clearFileDraws = function (fids) {
  var _this7 = this;

  if (!fids) {
    return;
  }

  if (!Array.isArray(fids)) {
    fids = [fids];
  }

  this.clearFileDrawData(fids);
  var boards = [];
  fids.forEach(function (fid) {
    boards = boards.concat(_this7.getBoardByGroup(fid));
  });
  this.realTimeData.push({
    action: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.FILE_CLEAR_ACTION,
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    fids: fids
  });
  this.report.reportClearDraws(boards);
};
/**
 * @description 清空白板所有涂鸦
 */


Store.prototype.clearAll = function () {
  this.report.reportCleanAll();
  this.realTimeData.push({
    action: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.RESET_DATA_ACTION,
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
  });
  this.sendRequest();
  this.resetData();
};
/**
 *
 * @param {String/Array} boardIds
 * @param {String/Array} urls
 * @param {Boolean} needReport 是否需要上报
 */


Store.prototype.addBackgroundPic = function (_ref2) {
  var _this8 = this;

  var boardIds = _ref2.boardIds,
      urls = _ref2.urls,
      _ref2$type = _ref2.type,
      type = _ref2$type === void 0 ? _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE : _ref2$type,
      _ref2$needReport = _ref2.needReport,
      needReport = _ref2$needReport === void 0 ? true : _ref2$needReport,
      _ref2$position = _ref2.position,
      position = _ref2$position === void 0 ? _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT : _ref2$position;
  var boards = [];
  var bgUrls = [];

  if (Array.isArray(boardIds)) {
    if (!Array.isArray(urls) || boardIds.length != urls.length) {
      // 如果boardIds是数组，urls必须为数组， 且长度必须相等
      return false;
    } else {
      boards = boardIds;
      bgUrls = urls;
    }
  } else {
    // 如果是字符串
    if (Array.isArray(urls)) {
      // 如果boardIds字符串，urls必须为字符串
      return false;
    } else {
      boards = [boardIds];
      bgUrls = [urls];
    }
  }

  var reportMsg = [];
  this.cancelSelect();
  boards.forEach(function (boardId, index) {
    if (boardId === _this8.currentBoard) {
      // 如果修改的是当前的白板
      needReport && _this8.realTimeData.push({
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
        "url": encodeURI(bgUrls[index]),
        "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
        "mode": position,
        "type": type,
        "cleanBoard": 0
      });
    }

    if (!_this8.data[boardId]) {
      _this8.addBoard(boardId);
    }

    _this8.backgroundPic[boardId].url = bgUrls[index];
    _this8.backgroundPic[boardId].show = true;
    _this8.backgroundPic[boardId].mode = position;
    _this8.backgroundPic[boardId].type = type;
    reportMsg.push({
      type: 'image',
      seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      content: {
        fid: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(boardId),
        boardId: boardId,
        url: bgUrls[index],
        updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        type: type,
        mode: position
      }
    });
  });
  needReport && this.report.reportImages(reportMsg);
  this.setNeedDraw(true);
};

Store.prototype.setBackgroundPic = function (url) {
  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT;

  if (!url) {
    return;
  }

  this.cancelSelect();
  this.addBackgroundPic({
    boardIds: this.currentBoard,
    urls: url,
    type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE,
    needReport: false,
    position: position
  });
  this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
    "url": url,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "mode": position,
    "type": _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE,
    "cleanBoard": 0
  });
  this.report.reportImage(this.currentBoard, url, position);
};

Store.prototype.setBackgroundH5 = function (url) {
  this.cancelSelect();
  this.addBackgroundPic({
    boardIds: this.currentBoard,
    urls: url,
    type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.H5,
    needReport: false
  });
  this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
    "url": url,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "mode": _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT,
    type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.H5,
    "cleanBoard": 0
  });
  this.report.reportImage(this.currentBoard, url, _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].FILL_MODE.DEFAULT, _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.H5);
};
/**
 * @description 设置当前页的背景图
 * @param {Number} position 图片相对于白板显示位置
 */


Store.prototype.updateCurrentFillMode = function (position) {
  var imageInfo = this.backgroundPic[this.currentBoard];

  if (imageInfo && imageInfo.url) {
    this.setBackgroundPic(imageInfo.url, position);
  }
};

Store.prototype.deleteBackgroundPic = function (boardId) {
  this.cancelSelect();
  this.backgroundPic[boardId].show = false;
  this.setNeedDraw(true);
}; //  取消背景图


Store.prototype.cancelBackgroundPic = function () {
  this.cancelSelect();
  this.deleteBackgroundPic(this.currentBoard);
  this.img.style.display = 'none';
  this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.DELETE_BG_IMG_ACTION,
    "seq": this.getSeq()
  }); // 清空

  this.report.reportImage(this.currentBoard, '', 0);
}; //  取消全局背景色


Store.prototype.clearGlobalBgColor = function () {
  this.setGlobalBackgroundColor(this.options.globalBackgroundColor);
}; // 切换动画步骤
// Store.prototype.switchStep = function (step) {
//   var file = this.getFileInfo(this.getCurrentFile()); // 当前文件信息
//   if (file.type == CONFIG.FILE_TYPE.H5) {
//     if (file.currentPageStep < step) { // 如果是向后翻页
//       H5Control.gotoTimestamp(this.iframeDom, file.currentPageIndex, step, true); // 要动画
//     } else { // 向前翻页
//       H5Control.gotoTimestamp(this.iframeDom, file.currentPageIndex, step, false); // 不要动画
//     }
//   } else {
//     return;
//   }
//   file.currentPageStep = step;
//   var bgUrl = this.backgroundPic[this.currentBoard] ? this.backgroundPic[this.currentBoard].url : '';
//   if (bgUrl) {
//     this.realTimeData.push({
//       "action": CONFIG.PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
//       "url": bgUrl,
//       "time": util.getTimeStamp(),
//       "seq": SeqUtil.getSeq(),
//       "mode": this.backgroundPic[this.currentBoard].mode,
//       "type": this.backgroundPic[this.currentBoard].type,
//       "cleanBoard": 0
//     });
//   }
//   this.realTimeData.push({
//     "action": CONFIG.PROTOCOL_ACTION.SWITCH_ACTION,
//     "time": util.getTimeStamp(),
//     "seq": SeqUtil.getSeq(),
//     "toBoardId": this.getCurrentBoard(),
//     "deleteBoards": [],
//     "deleteFiles": [],
//     "page": file.currentPageIndex,
//     "step": step
//   });
//   this.sendRequest();
//   this.report.reportAddFile(file);
//   this.setNeedDraw(true);
// }

/**
 * 要跳转的页数索引（也包含切换动画步骤）
 */


Store.prototype.switchPage = function () {
  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var boardId = null;
  var boards = [];
  boards = this.getBoardByGroup(this.getCurrentFile());
  index = Math.min(index, boards.length - 1);
  boardId = boards[index];
  return this.switchBoard(boardId);
};

Store.prototype.switchH5Board = function (_ref3) {
  var fid = _ref3.fid,
      slideIndex = _ref3.slideIndex,
      stepIndex = _ref3.stepIndex;
  // 取消选区
  this.cancelSelect();
  var boards = this.getBoardByGroup(fid);
  var file = this.getFileInfo(fid);
  var boardId = boards[slideIndex]; // 当前白板

  this.currentBoard = boardId; // 当前分组

  this.currentGroup = fid;
  file.currentPageIndex = slideIndex;
  file.currentPageStep = stepIndex;
  file.pageCount = boards.length;
  var bgUrl = this.backgroundPic[this.currentBoard] ? this.backgroundPic[this.currentBoard].url : '';
  bgUrl && this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
    "url": bgUrl,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "mode": this.backgroundPic[this.currentBoard].mode,
    "type": this.backgroundPic[this.currentBoard].type,
    "cleanBoard": 0
  });
  this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.SWITCH_ACTION,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "toBoardId": boardId,
    "deleteBoards": [],
    "deleteFiles": [],
    "page": file.currentPageIndex,
    "step": stepIndex
  });
  this.sendRequest();
  this.report.reportSwitchBoard(boardId);
  this.report.reportAddFile(file);
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_GOTOBOARD', boardId, fid);
  this.setNeedDraw(true);
  return boardId;
};

Store.prototype.switchBoard = function (boardId) {
  // 取消选区
  this.cancelSelect(); // 如果boardId存在，且不在列表中，则返回切换失败

  if (boardId && !this.data[boardId]) {
    console.error('没有这一页白板');
    return false;
  }

  if (!boardId) {
    // 如果没有传boardId，则是新增
    boardId = this.createBoardId();
    this.addBoard(boardId);
  } // 当前白板


  this.currentBoard = boardId; // 当前分组

  this.currentGroup = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(boardId);
  var boards = this.getBoardByGroup(this.currentGroup);
  var file = this.getFileInfo(this.currentGroup);
  var index = boards.indexOf(boardId);
  var step = file.currentPageStep;
  file.currentPageIndex = index;
  file.currentPageStep = step;
  file.pageCount = boards.length;
  var bgUrl = this.backgroundPic[this.currentBoard] ? this.backgroundPic[this.currentBoard].url : '';
  bgUrl && this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_IMG_ACTION,
    "url": bgUrl,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "mode": this.backgroundPic[this.currentBoard].mode,
    "type": this.backgroundPic[this.currentBoard].type,
    "cleanBoard": 0
  });
  this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.SWITCH_ACTION,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "toBoardId": boardId,
    "deleteBoards": [],
    "deleteFiles": [],
    "page": file.currentPageIndex,
    "step": step
  });
  this.sendRequest();
  this.report.reportSwitchBoard(boardId);
  this.report.reportAddFile(file);
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_GOTOBOARD', this.currentBoard, _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(this.currentBoard));
  this.setNeedDraw(true);
  return boardId;
};
/**
 * 设置全局背景颜色
 * @param {*} color color 数字颜色，默认白色
 * @param {*} noSend 不发送和不上报，用户主动改变的才需要上报和发送， 对外的接口只能是上报的，只有内部的才不上报
 */


Store.prototype.setGlobalBackgroundColor = function (color, noSend) {
  var _this9 = this;

  if (!color) {
    color = _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].COLOR.WHITE;
  }

  var numberColor = 0;

  if (typeof color === 'number') {
    this.globalBackgroundColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(color);
    numberColor = color;
  } else if (typeof color === 'string' && color.indexOf('#') == 0 && (color.length === 4 || color.length === 7)) {
    this.globalBackgroundColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(color);
    numberColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].hexToRgba(color));
  } else if (typeof color === 'string' && color.startsWith('rgba(')) {
    // 如果是rgba
    this.globalBackgroundColor = color;
    numberColor = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(color);
  } // 遍历修改


  this.boardList.forEach(function (boardId) {
    _this9.backgroundColor[boardId] = _this9.globalBackgroundColor;
  });
  this.setNeedDraw(true);

  if (!noSend) {
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.UPDATE_BG_COLOR_ACTION,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "color": numberColor,
      "isGlobal": 1
    });
    this.report.reportGlobalBgColor(numberColor);
  }
};

Store.prototype.getGlobalBackgroundColor = function () {
  return this.globalBackgroundColor;
};

Store.prototype.preloadBoard = function () {
  // 针对PPT动画的预加载
  var boardList = [];

  for (var i = 0; i < this.groups.length; ++i) {
    var fileInfo = this.groups[i];

    if (fileInfo.type !== _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5) {
      // 组合白板列表
      var fileBoardList = this.getBoardByGroup(fileInfo.fid);
      boardList = boardList.concat(fileBoardList);
    } else {
      var preloaded = this.pptFilePreloaded[fileInfo.fid];

      if (!preloaded) {
        if (fileInfo.fid === this.currentGroup) {
          // 当前PPT动画已加载过，做标记并忽略
          this.pptFilePreloaded[fileInfo.fid] = true;
          continue;
        }

        (function (url, delay) {
          setTimeout(function () {
            var ifrm = document.createElement("iframe");
            ifrm.setAttribute('style', 'position:fixed;visibility:hidden;width:0px;height:0px;border:none;');
            document.body.appendChild(ifrm);

            ifrm.onload = function () {
              ifrm.remove(); // console.log('++++++++++++++++++++++++ ppt load end', this.src);
            };

            ifrm.setAttribute("src", url); // console.log('++++++++++++++++++++++++ ppt load start', url);
          }, delay);
        })(fileInfo.downloadURL, 1000);

        this.pptFilePreloaded[fileInfo.fid] = true;
      }
    }
  } // 针对白板的预加载


  var boardIndex = boardList.indexOf(this.currentBoard);

  for (var _i = -this.preloadDepth; _i < this.preloadDepth; ++_i) {
    var preloadIndex = boardIndex + _i;

    if (preloadIndex < 0 || preloadIndex >= boardList.length) {
      continue;
    }

    var boardId = boardList[preloadIndex];
    var preloadPic = this.backgroundPic[boardId]; // 拿到背景信息

    if (preloadPic && !preloadPic.preloaded && preloadPic.url !== undefined && preloadPic.url !== '') {
      if (_i === 0) {
        // 当前页面已加载过，做标记并忽略
        preloadPic.preloaded = true;
        continue;
      }

      if (preloadPic.type === _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE) {
        // 图片背景
        (function (url, delay) {
          setTimeout(function () {
            var img = new Image();

            img.onload = function () {// console.log('++++++++++++++++++++++++ img load end', this.src);
            };

            img.onabort = function () {// console.log('++++++++++++++++++++++++ img load above', this.src);
            };

            img.onerror = function () {// console.log('++++++++++++++++++++++++ img load error', this.src);
            };

            img.src = url; // console.log('++++++++++++++++++++++++ img load start', url);
          }, delay);
        })(preloadPic.url, (Math.abs(_i) - 1) * 200);
      } else if (preloadPic.type === _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.H5) {
        // H5背景
        (function (url, delay) {
          setTimeout(function () {
            var ifrm = document.createElement("iframe");
            ifrm.setAttribute('style', 'position:fixed;visibility:hidden;width:0px;height:0px;border:none;');
            document.body.appendChild(ifrm);

            ifrm.onload = function () {
              ifrm.remove(); // console.log('++++++++++++++++++++++++ h5 load end', this.src);
            };

            ifrm.setAttribute("src", url); // console.log('++++++++++++++++++++++++ h5 load start', url);
          }, delay);
        })(preloadPic.url, (Math.abs(_i) - 1) * 200);
      }

      preloadPic.preloaded = true;
    }
  }
}; // -------------------------------------  采集白板数据  --------------------------------------------------------------------

/**
 * 重置操作步骤
 * 如 opData 记录了 [第一步，第二步，第三步，第四步，第五步]，
 * 而此时opIndex则回退到了 第三步，此时再进行新的涂鸦操作，则舍弃第四步，第五步的操作
 */


Store.prototype.resetOperation = function () {
  this.opData[this.currentBoard] = this.opData[this.currentBoard].slice(0, this.opIndex[this.currentBoard]);
};
/**
 * 采集划线的数据
 */


Store.prototype.collectLineData = function () {
  var _this10 = this;

  return {
    /**
     * 鼠标按下，画线开始
     * @param {*} startX
     * @param {*} startY
     */
    start: function start(startX, startY) {
      var seq = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq();
      _this10.belongLineSeq = seq;
      var line = new _Line__WEBPACK_IMPORTED_MODULE_21__["default"](_this10.identifier, {
        color: _this10.color,
        thin: _this10.thin,
        x: startX,
        y: startY,
        show: true,
        seq: seq,
        belongSeq: seq
      });

      _this10.userData[_this10.currentBoard][_this10.identifier].push(line);

      _this10.data[_this10.currentBoard].push(line);

      _this10.opData[_this10.currentBoard].push(new _Operation__WEBPACK_IMPORTED_MODULE_20__["default"](_this10.identifier, {
        seq: line.seq,
        type: _this10.type
      }));

      _this10.opIndex[_this10.currentBoard]++;
      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.LINE_START_ACTION,
        // begin画线
        "color": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(line.color),
        "scale": 100,
        "thin": line.thin,
        "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        "seq": line.seq,
        "belongSeq": line.belongSeq,
        "x": startX,
        "y": startY
      };

      _this10.realTimeData.push(actionData);
    },
    draw: function draw(currentX, currentY) {
      var length = _this10.userData[_this10.currentBoard][_this10.identifier].length;
      var line = _this10.userData[_this10.currentBoard][_this10.identifier][length - 1];
      line.setBorder(currentX, currentY);
      var seq = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq();
      line.lines.push({
        x: currentX,
        y: currentY,
        seq: seq
      });
      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.LINE_MOVE_ACTION,
        "seq": seq,
        "belongSeq": _this10.belongLineSeq,
        "x": currentX,
        "y": currentY
      };

      _this10.realTimeData.push(actionData);
    },
    end: function end(endX, endY) {
      var length = _this10.userData[_this10.currentBoard][_this10.identifier].length;
      var line = _this10.userData[_this10.currentBoard][_this10.identifier][length - 1];
      line.setBorder(endX, endY);
      var seq = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq();
      line.lines.push({
        x: endX,
        y: endY,
        seq: seq
      }); // 已画完线条，平滑曲线

      if (_this10.smoothLevel > 0) {
        var pts = [];
        line.lines.forEach(function (pt) {
          pts.push([pt.x, pt.y]);
        });
        line.fitCurve = Object(_util_FitCurve__WEBPACK_IMPORTED_MODULE_34__["default"])(pts, _this10.smoothLevel * 10000, null);
      }

      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.LINE_END_ACTION,
        "belongSeq": _this10.belongLineSeq,
        "seq": seq,
        "x": endX,
        "y": endY
      };

      _this10.realTimeData.push(actionData);

      _this10.setNeedDraw(true); // 画完线 得report


      var pointList = [];
      line.lines.forEach(function (item) {
        pointList.push({
          seq: item.seq,
          x: item.x,
          y: item.y
        });
      });
      var linejson = {
        boardId: _this10.currentBoard,
        uid: _this10.identifier,
        colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_this10.color),
        scale: 100,
        width: _this10.thin,
        time: line.time,
        updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        seq: line.seq,
        hidden: 0,
        points: pointList
      }; // console.log("linejson" + linejson);
      // 上报线条数据

      _this10.report.reportAddLine({
        boardId: _this10.currentBoard,
        uid: line.user,
        colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_this10.color),
        scale: 100,
        width: _this10.thin,
        time: line.time,
        updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        seq: line.seq,
        hidden: 0,
        points: pointList
      });
    },
    over: function over(endX, endY) {
      this.end(endX, endY);
    }
  };
};
/**
 * 采集文字输入的数据
 */


Store.prototype.collectTextInputData = function () {
  var _this11 = this;

  return {
    /**
     * 鼠标按下，文字输入开始
     * @param {*} startX
     * @param {*} startY
     */
    start: function start(startX, startY) {
      var seq = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq();
      var inputText;

      try {
        // 检测重复编辑
        var allData = _this11.data[_this11.currentBoard];
        var maxSeqIndex = {
          seq: 0,
          index: -1
        }; // 记录最大的seq和顺序 （重叠部分按最大Seq优先被选中）

        allData.forEach(function (item, index) {
          if (item.type === 'inputtext' && item.show && item.user === _this11.identifier) {
            //
            var errorXNum = 5 / _this11.boardWidth * 10000; //误差值

            var errorYNum = 5 / _this11.boardHeight * 10000; //误差值

            var startPointX = item.location.x - errorXNum;
            var startPointY = item.location.y - errorYNum;
            var endPointX = item.location.x + item.textWidth / _this11.boardWidth * 10000 + errorXNum;
            var endPointY = item.location.y + item.textHeight / _this11.boardHeight * 10000 + errorYNum;

            if (startX >= startPointX && startX <= endPointX && startY >= startPointY && startY <= endPointY) {
              if (item.belongSeq > maxSeqIndex.seq) {
                maxSeqIndex = {
                  seq: item.belongSeq,
                  index: index
                };
              }
            }
          }
        });

        if (maxSeqIndex.index > -1) {
          var item = _this11.data[_this11.currentBoard].splice(maxSeqIndex.index, 1)[0];

          item.show = false;

          _this11.setNeedDraw(true);

          inputText = item;
          var userData = _this11.userData[_this11.currentBoard][_this11.identifier] || [];
          userData.forEach(function (userItemData, index) {
            if (userItemData.belongSeq === inputText.belongSeq) {
              _this11.userData[_this11.currentBoard][_this11.identifier].splice(index, 1);
            }
          });
        }
      } catch (error) {}

      if (!inputText) {
        inputText = new _InputText__WEBPACK_IMPORTED_MODULE_22__["default"](_this11.identifier, {
          x: startX,
          y: startY,
          belongSeq: seq
        });
        inputText.color = _this11.getTextColor();
        inputText.textSize = _this11.getTextSize(); // modify Math.floor(this.getTextSize() / this.boardHeight * 10000);

        inputText.typeFace = _this11.getTextFontFamily();
        inputText.fontStyle = _this11.getTextFontStyle(); // 文字样式 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；
      }

      _this11.userData[_this11.currentBoard][_this11.identifier].push(inputText);

      _this11.data[_this11.currentBoard].push(inputText);

      var hasOperation = false; // 如果已经存在了operation，则不在二次加入

      for (var j = 0, size = _this11.opData[_this11.currentBoard].length; j < size; j++) {
        var operation = _this11.opData[_this11.currentBoard][j];

        if (operation.seq === inputText.belongSeq) {
          hasOperation = true;
          break;
        }
      }

      if (!hasOperation) {
        _this11.opData[_this11.currentBoard].push(new _Operation__WEBPACK_IMPORTED_MODULE_20__["default"](_this11.identifier, {
          seq: inputText.belongSeq,
          type: _this11.type
        }));

        _this11.opIndex[_this11.currentBoard]++;
      }

      return inputText;
    },
    inputting: function inputting(content, textWidth, textHeight) {
      var length = _this11.userData[_this11.currentBoard][_this11.identifier].length;
      var textItem = _this11.userData[_this11.currentBoard][_this11.identifier][length - 1];
      var seq = _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq();
      textItem.text = content;
      textItem.seq = seq;
      textItem.textWidth = textWidth;
      textItem.textHeight = textHeight;
      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.INPUT_TEXT_ACTION,
        "seq": seq,
        "belongSeq": textItem.belongSeq,
        "color": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(textItem.color),
        // uint32 RGBA 文字颜色颜色数据
        "scale": 100,
        // uint32 白板内容和白板大小的比例*100，默认100(渲染时宽度需要*当前scale/字段scale)
        "typeFace": textItem.typeFace,
        "textSize": Math.floor(textItem.textSize),
        // uint32 字体大小除以画板高度*10000
        "fontStyle": textItem.fontStyle,
        // 文字样式 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；
        "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        "x": textItem.location.x,
        // uint32 起点x相对白板宽度比例*10000
        "y": textItem.location.y,
        // uint32 起点y相对白板高度比例*10000
        "text": content // 文字内容

      };

      _this11.realTimeData.push(actionData);
    },
    draw: function draw(context) {
      var length = _this11.userData[_this11.currentBoard][_this11.identifier].length;
      var textItem = _this11.userData[_this11.currentBoard][_this11.identifier][length - 1];

      if (!context && !context.trim()) {
        // 如果输入空
        var operationIndex = -1; //

        for (var i = 0, len = _this11.opData[_this11.currentBoard].length; i < len; i++) {
          var operation = _this11.opData[_this11.currentBoard][i];

          if (operation.seq === textItem.belongSeq) {
            operationIndex = i;
            break;
          }
        }

        if (operationIndex > -1) {
          _this11.opData[_this11.currentBoard].splice(operationIndex, 1);

          _this11.opIndex[_this11.currentBoard]--;
        }

        _this11.userData[_this11.currentBoard][_this11.identifier].splice(length - 1, 1);

        _this11.data[_this11.currentBoard].splice(_this11.data[_this11.currentBoard].length - 1, 1);

        return;
      }

      textItem.text = context;
      textItem.show = true; // this.ctx.font = `${util.fontStyle2CanvasFontStyle(textItem.fontStyle)}${Math.ceil(textItem / 10000 * this.boardWidth)}px ${this.getTextFontFamily()}`;
      // var textWidth = Math.ceil(this.ctx.measureText(context).width);
      // textItem.textWidth = textWidth;
      // 上报线条数据

      _this11.report.reportAddText({
        belongSeq: textItem.belongSeq,
        // 该文字序列的seq，用来唯一标识一个文字序列
        time: textItem.time,
        // 添加图形时的时间
        boardId: _this11.currentBoard,
        // 白板id
        uid: textItem.user,
        // 画线条的用户id
        x: Math.floor(textItem.location.x),
        // uint32 起点x相对白板宽度比例*10000
        y: Math.floor(textItem.location.y),
        // uint32 起点y相对白板高度比例*10000
        colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(textItem.color),
        // 文字颜色color值
        scale: 100,
        // scale值
        updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        // 后台的线条数据可以覆盖，通过updateTime来判断是否更新（IM后台时间戳/秒）
        hidden: 0,
        // 文字是否为隐藏的（橡皮擦、撤回操作可导致）
        typeface: textItem.typeFace,
        // 暂时不填，字体类型，sans-serif，serif和monospace
        textSize: Math.floor(textItem.textSize),
        // uint32 字体大小除以画板高度*10000
        fontStyle: textItem.fontStyle,
        // 文字样式，默认填0，  0：常规；1：粗体；2.斜体；3.粗斜体；
        text: context //文本内容

      });

      _this11.setNeedDraw(true);
    }
  };
};
/**
 * 采集橡皮擦数据
 * @param {Number} clickX
 * @param {Number} clickY
 */


Store.prototype.collectEraserData = function (clickX, clickY) {
  // 橡皮擦
  // 需要遍历全部的data 碰撞检测
  var data = this.eraserImpactCheck(clickX, clickY, this.thin / 2);

  if (data.length > 0) {
    // 放入操作
    this.opData[this.currentBoard].push(new _Operation__WEBPACK_IMPORTED_MODULE_20__["default"](this.identifier, {
      seq: data,
      type: this.type
    }));
    this.opIndex[this.currentBoard]++;
    var actionData = {
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
      // 擦除
      "display": 0,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "x": 0,
      "y": 0,
      lines: data
    };

    if (data.length) {
      this.realTimeData.push(actionData);
      this.report.reportDisplayLine({
        boardId: this.currentBoard,
        updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        display: 0,
        lines: data
      });
    }

    this.setNeedDraw(true);
  }
};
/**
 * 采集激光笔数据
 */


Store.prototype.collectRaserData = function () {
  var _this12 = this;

  return {
    /**
     * 鼠标按下，激光笔开始
     * @param {*} startX
     * @param {*} startY
     */
    start: function start(startX, startY) {
      var raser = new _Raser__WEBPACK_IMPORTED_MODULE_25__["default"](_this12.identifier, {
        color: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(_config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].COLOR.RED),
        radius: _this12.thin / 2,
        x: startX,
        y: startY,
        seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
      });
      _this12.seq = raser.seq;

      _this12.userData[_this12.currentBoard][_this12.identifier].push(raser);

      _this12.data[_this12.currentBoard].push(raser);

      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.RASER_SHOW_ACTION,
        // 激光笔
        //"color": util.dealColor(Constant.COLOR.RED),
        "r": raser.radius,
        "seq": raser.seq,
        "x": startX,
        "y": startY
      };

      _this12.realTimeData.push(actionData);

      _this12.setNeedDraw(true);
    },
    draw: function draw(currentX, currentY) {
      var length = _this12.userData[_this12.currentBoard][_this12.identifier].length;
      var raser = _this12.userData[_this12.currentBoard][_this12.identifier][length - 1];
      raser.location = {
        x: currentX,
        y: currentY
      };

      _this12.setNeedDraw(true);

      _this12.realTimeData.push({
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.RASER_SHOW_ACTION,
        "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
        "x": currentX,
        "y": currentY,
        //"color": util.formatColor(Constant.COLOR.RED),
        "r": raser.radius
      });
    },
    end: function end(endX, endY) {
      // 激光笔需要修改状态
      var length = _this12.userData[_this12.currentBoard][_this12.identifier].length;
      var raser = _this12.userData[_this12.currentBoard][_this12.identifier][length - 1];
      raser.point = {
        x: endX,
        y: endY
      };
      raser.status = 0;
      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.RASER_HIDE_ACTION,
        // 激光笔
        "seq": raser.seq
      };

      _this12.realTimeData.push(actionData);

      _this12.setNeedDraw(true);
    },
    over: function over() {
      var length = _this12.userData[_this12.currentBoard][_this12.identifier].length;
      var paint = _this12.userData[_this12.currentBoard][_this12.identifier][length - 1];
      paint.status = 0;

      _this12.setNeedDraw(true);
    }
  };
};
/**
 * 采集框选数据
 */


Store.prototype.collectSelectData = function () {
  var _this13 = this;

  return {
    /**
     * 鼠标按下，选择开始
     * @param {*} startX
     * @param {*} startY
     */
    start: function start(startX, startY) {
      _this13.beforeMoveType = 'select';
      var select = new _Select__WEBPACK_IMPORTED_MODULE_24__["default"](_this13.identifier, {
        startx: startX,
        starty: startY,
        x: startX,
        y: startY
      });
      _this13.seq = select.seq;

      _this13.userData[_this13.currentBoard][_this13.identifier].push(select);

      _this13.data[_this13.currentBoard].push(select);
    },
    draw: function draw(currentX, currentY) {
      var length = _this13.userData[_this13.currentBoard][_this13.identifier].length;
      var select = _this13.userData[_this13.currentBoard][_this13.identifier][length - 1];
      select.location = {
        x: currentX,
        y: currentY
      };

      _this13.setNeedDraw(true);
    },
    end: function end(startX, startY, endX, endY) {
      // 框选
      // 判断选中的区域
      // 由于不清楚 选框中 x y 大小 需要判断下
      var areaLargeX = startX > endX ? startX : endX;
      var areaLargeY = startY > endY ? startY : endY;
      var areasmallX = startX + endX - areaLargeX;
      var areasmallY = startY + endY - areaLargeY;

      for (var i = _this13.data[_this13.currentBoard].length - 1; i >= 0; i--) {
        var item = _this13.data[_this13.currentBoard][i];

        if (item.type == 'line' && item.show) {
          if (areaLargeX >= item.border.maxX && areaLargeY >= item.border.maxY && areasmallX <= item.border.minX && areasmallY <= item.border.minY) {
            item.select = true;

            _this13.selectedList.push(item);
          }
        } else if (item.type == 'graph' && item.show) {
          if (areaLargeX >= item.endPoint.x && areaLargeY >= item.endPoint.y && areasmallX <= item.startPoint.x && areasmallY <= item.startPoint.y) {
            item.select = true;

            _this13.selectedList.push(item);
          }
        } else if (item.type == 'inputtext' && item.show && item.text) {
          var startPointX = item.location.x;
          var startPointY = item.location.y;
          var endPointX = item.location.x + item.textWidth / _this13.boardWidth * 10000;
          var endPointY = item.location.y + item.textHeight / _this13.boardHeight * 10000;

          if (areaLargeX >= endPointX && areaLargeY >= endPointY && areasmallX <= startPointX && areasmallY <= startPointY) {
            item.select = true;

            _this13.selectedList.push(item);
          }
        }
      }

      _this13.selectArea = {
        x: areasmallX,
        y: areasmallY,
        width: areaLargeX - areasmallX,
        height: areaLargeY - areasmallY
      }; // 隐藏总的框选

      var select = _this13.userData[_this13.currentBoard][_this13.identifier][_this13.userData[_this13.currentBoard][_this13.identifier].length - 1];
      select.show = false;

      _this13.setNeedDraw(true); // if (this.selectedList.length) {
      //   this.setType('move');
      // }

    }
  };
};
/**
 * 采集点选数据
 */


Store.prototype.collectPointSelectData = function (endX, endY) {
  this.beforeMoveType = 'pointselect'; // 点选
  // 点选
  // 判断选中了谁  倒着判断

  var status = false; // 是否选中了一块

  for (var i = this.data[this.currentBoard].length - 1; i >= 0; i--) {
    var item = this.data[this.currentBoard][i];

    if (item.type == 'line' && item.show) {
      if (endX < item.border.maxX && endX > item.border.minX && endY < item.border.maxY && endY > item.border.minY) {
        status = true;
        item.select = true;
        this.selectedList = [item];
        this.selectArea = {
          x: item.border.minX,
          y: item.border.minY,
          width: item.border.maxX - item.border.minX,
          height: item.border.maxY - item.border.minY
        };
        break;
      }
    } else if (item.type == 'graph' && item.show) {
      // 区分一下大小的X Y
      var graphLargeX = item.endPoint.x;
      var graphLargeY = item.endPoint.y;
      var graphSmallX = item.startPoint.x;
      var graphSmallY = item.startPoint.y;

      if (graphLargeX < graphSmallX) {
        // 交换位置
        graphLargeX = graphLargeX + graphSmallX;
        graphSmallX = graphLargeX - graphSmallX;
        graphLargeX = graphLargeX - graphSmallX;
      }

      if (graphLargeY < graphSmallY) {
        // 交换位置
        graphLargeY = graphLargeY + graphSmallY;
        graphSmallY = graphLargeY - graphSmallY;
        graphLargeY = graphLargeY - graphSmallY;
      }

      graphLargeY += this.thin;
      graphLargeX += this.thin;
      graphSmallX -= this.thin;
      graphSmallY -= this.thin;

      if (endX >= graphSmallX && endX <= graphLargeX && endY >= graphSmallY && endY <= graphLargeY) {
        status = true;
        item.select = true;
        this.selectedList = [item];
        this.selectArea = {
          x: graphSmallX,
          y: graphSmallY,
          width: graphLargeX - graphSmallX,
          height: graphLargeY - graphSmallY
        };
        break;
      }
    } else if (item.type === 'inputtext' && item.show && item.text) {
      // 文字输入
      var errorXNum = 5 / this.boardWidth * 10000; //误差值

      var errorYNum = 5 / this.boardHeight * 10000; //误差值

      var startPointX = item.location.x - errorXNum;
      var startPointY = item.location.y - errorYNum;
      var endPointX = item.location.x + item.textWidth / this.boardWidth * 10000 + errorXNum;
      var endPointY = item.location.y + item.textHeight / this.boardHeight * 10000 + errorYNum;

      if (endX >= startPointX && endX <= endPointX && endY >= startPointY && endY <= endPointY) {
        status = true;
        item.select = true;
        this.selectedList = [item];
        this.selectArea = {
          x: startPointX,
          y: startPointY,
          width: endPointX - startPointX,
          height: endPointY - startPointY
        };
        break;
      }
    }
  }

  if (status) {
    this.setNeedDraw(true); // this.setType('move');
  }
};
/**
 * 采集点选或者框选后移动的数据
 */


Store.prototype.collectMoverData = function () {
  var _this14 = this;

  return {
    // 开始移动的检测
    beforeStart: function beforeStart(startX, startY) {
      // 移动
      // 移动得判断当前点击的位置 是否在选择区域内
      // 算入操作
      if (_this14.selectedList.length == 0) {
        return false;
      }

      var status = false;

      for (var i = 0; i < _this14.selectedList.length; i++) {
        var item = _this14.selectedList[i];

        if (item.type == 'line') {
          var halfThinWidth = _this14.thin * 1.5;
          var halfThinHeight = _this14.thin * 1.5;

          if (item.border.minX - halfThinWidth <= startX && item.border.maxX + halfThinWidth >= startX && item.border.minY - halfThinHeight <= startY && item.border.maxY + halfThinHeight >= startY) {
            status = true;
            break;
          }
        } else if (item.type == 'graph') {
          var sX = item.startPoint.x;
          var eX = item.endPoint.x;
          var sY = item.startPoint.y;
          var eY = item.endPoint.y;

          if (eX < sX) {
            // 交换位置
            eX = eX + sX;
            sX = eX - sX;
            eX = eX - sX;
          }

          if (eY < sY) {
            // 交换位置
            eY = eY + sY;
            sY = eY - sY;
            eY = eY - sY;
          }

          eY += _this14.thin;
          eX += _this14.thin;
          sY -= _this14.thin;
          sX -= _this14.thin;

          if (sX <= startX && eX >= startX && sY <= startY && eY >= startY) {
            status = true;
            break;
          }
        } else if (item.type === 'inputtext') {
          // 如果是文字输入
          var errorXNum = 5 / _this14.boardWidth * 10000; //误差值

          var errorYNum = 5 / _this14.boardHeight * 10000; //误差值

          var startPointX = item.location.x - errorXNum;
          var startPointY = item.location.y - errorYNum;
          var endPointX = item.location.x + item.textWidth / _this14.boardWidth * 10000 + errorXNum;
          var endPointY = item.location.y + item.textHeight / _this14.boardHeight * 10000 + errorYNum;

          if (startX >= startPointX && startX <= endPointX && startY >= startPointY && startY <= endPointY) {
            status = true;
            break;
          }
        }
      }

      if (!status) {
        // 失败，还原会原来的type
        // this.setType(this.beforeMoveType);
        _this14.cancelSelect();

        return false;
      }

      return true;
    },
    start: function start(startX, startY) {
      // 这里得先记录下起始坐标
      var origin = [];

      _this14.selectedList.forEach(function (item) {
        if (item.type == 'line') {
          origin.push({
            uid: item.user,
            seq: item.seq,
            x: item.lines[0].x,
            y: item.lines[0].y
          });
        } else if (item.type == 'graph') {
          origin.push({
            uid: item.user,
            seq: item.startPoint.seq,
            x: item.startPoint.x,
            y: item.startPoint.y
          });
        } else if (item.type == 'inputtext') {
          origin.push({
            uid: item.user,
            seq: item.belongSeq,
            x: item.location.x,
            y: item.location.y
          });
        }
      });

      _this14.opData[_this14.currentBoard].push(new _Operation__WEBPACK_IMPORTED_MODULE_20__["default"](_this14.identifier, {
        seq: {
          origin: origin,
          final: []
        },
        type: 'move'
      }));
    },

    /**
     * 框选后移动
     * @param {*} currentX
     * @param {*} currentY
     * @param {*} oldX
     * @param {*} oldY
     */
    draw: function draw(currentX, currentY, oldX, oldY) {
      if (_this14.selectedList.length > 0) {
        for (var i = 0; i < _this14.selectedList.length; i++) {
          var item = _this14.selectedList[i];
          var movex = currentX - oldX;
          var movey = currentY - oldY;

          if (item.type == 'line') {
            item.border.maxX += movex;
            item.border.minX += movex;
            item.border.maxY += movey;
            item.border.minY += movey;
            item.lines.forEach(function (line) {
              line.x += movex;
              line.y += movey;
            });

            if (item.fitCurve.length !== 0) {
              item.fitCurve.forEach(function (curve) {
                curve[1][0] += movex;
                curve[1][1] += movey;
                curve[2][0] += movex;
                curve[2][1] += movey;
                curve[3][0] += movex;
                curve[3][1] += movey;
              });
            }
          } else if (item.type == 'graph') {
            item.startPoint.x += movex;
            item.startPoint.y += movey;
            item.endPoint.x += movex;
            item.endPoint.y += movey;
          } else if (item.type === 'inputtext') {
            item.location.x += movex;
            item.location.y += movey;
          }
        }

        _this14.selectArea.x += movex;
        _this14.selectArea.y += movey;

        _this14.setNeedDraw(true);
      }
    },
    end: function end() {
      _this14.setNeedDraw(true);

      var moves = [];

      if (_this14.selectedList.length == 0) {
        return;
      }

      _this14.selectedList.forEach(function (item) {
        if (item.type == 'line') {
          moves.push({
            seq: item.seq,
            x: item.lines[0].x,
            y: item.lines[0].y,
            uid: item.user
          });
        } else if (item.type == 'graph') {
          moves.push({
            seq: item.startPoint.seq,
            x: item.startPoint.x,
            y: item.startPoint.y,
            uid: item.user
          });
        } else if (item.type === 'inputtext') {
          moves.push({
            seq: item.belongSeq,
            x: item.location.x,
            y: item.location.y,
            uid: item.user
          });
        }
      });

      var actionData = {
        "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.MOVE_LINE_GRAPH_ACTION,
        "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
        "moves": moves,
        "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp()
      };

      _this14.realTimeData.push(actionData); // 修改操作


      var final = [];

      _this14.selectedList.forEach(function (item) {
        if (item.type == 'line') {
          final.push({
            uid: item.user,
            seq: item.seq,
            x: item.lines[0].x,
            y: item.lines[0].y
          });
        } else if (item.type == 'graph') {
          final.push({
            uid: item.user,
            seq: item.startPoint.seq,
            x: item.startPoint.x,
            y: item.startPoint.y
          });
        } else if (item.type === 'inputtext') {
          final.push({
            uid: item.user,
            seq: item.belongSeq,
            x: item.location.x,
            y: item.location.y
          });
        }
      });

      var op = _this14.opData[_this14.currentBoard][_this14.opData[_this14.currentBoard].length - 1];
      op.seq.final = final;
      _this14.opIndex[_this14.currentBoard]++; // 上报数据

      var reportData = [];
      moves.forEach(function (move) {
        var user = move.uid;

        for (var i = 0; i < _this14.userData[_this14.currentBoard][user].length; i++) {
          var item = _this14.userData[_this14.currentBoard][user][i];

          if (item.type == 'line' && move.seq == item.seq) {
            // 添加点的信息
            var pointList = [];
            item.lines.forEach(function (line) {
              pointList.push({
                seq: line.seq,
                x: line.x,
                y: line.y
              });
            });
            reportData.push({
              type: 'addLine',
              seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
              content: {
                boardId: _this14.currentBoard,
                uid: item.user,
                colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
                scale: 100,
                width: item.thin,
                time: item.time,
                updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
                seq: item.seq,
                hidden: 0,
                points: pointList
              }
            });
          } else if (item.type == 'graph' && move.seq == item.startPoint.seq) {
            var reportMap = {
              'line': 'addPatternLine',
              'oval': 'addPatternCircle',
              'circle': 'addPatternCircle',
              'rect': 'addPatternRectangle'
            };
            var reportMsg = {
              type: reportMap[item.graph],
              seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
              content: {
                boardId: _this14.currentBoard,
                uid: item.user,
                colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
                scale: 100,
                width: item.thin,
                time: item.time,
                updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
                hidden: 0,
                beginPoint: {
                  x: item.startPoint.x,
                  y: item.startPoint.y,
                  seq: item.startPoint.seq
                },
                endPoint: {
                  x: item.endPoint.x,
                  y: item.endPoint.y,
                  seq: item.endPoint.seq
                }
              }
            };

            if (item.graph == 'oval' || item.graph == 'circle') {
              reportMsg.content.fillRect = item.solid ? 1 : 0;
            } else if (item.graph == 'rect') {
              reportMsg.content.fillRect = item.solid ? 1 : 0;
              reportMsg.content.cornerRadius = 0;
            }

            reportData.push(reportMsg);
          } else if (item.type === 'inputtext' && move.seq == item.belongSeq) {
            reportData.push({
              type: 'addText',
              seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
              content: {
                belongSeq: item.belongSeq,
                // 该文字序列的seq，用来唯一标识一个文字序列
                time: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
                // 添加图形时的时间
                boardId: _this14.currentBoard,
                // 白板id
                uid: item.user,
                // 画线条的用户id
                x: item.location.x,
                // uint32 起点x相对白板宽度比例*10000
                y: item.location.y,
                // uint32 起点y相对白板高度比例*10000
                colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
                // 文字颜色color值
                scale: item.scale,
                // scale值
                updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
                // 后台的线条数据可以覆盖，通过updateTime来判断是否更新（IM后台时间戳/秒）
                hidden: 0,
                // 文字是否为隐藏的（橡皮擦、撤回操作可导致）
                typeface: item.typeFace,
                // 暂时不填，字体类型，sans-serif，serif和monospace
                textSize: item.textSize,
                // uint32 字体大小除以画板高度*10000
                fontStyle: item.fontStyle,
                // 文字样式，默认填0，  0：常规；1：粗体；2.斜体；3.粗斜体；
                text: item.text //文本内容

              }
            });
          }
        }
      });

      _this14.report.reportGraphData(reportData);
    }
  };
};
/**
 * 采集图形的数据（直线，矩形，圆）
 */


Store.prototype.collectGraphData = function () {
  var _this15 = this;

  return {
    start: function start(startX, startY) {
      var type = _this15.type.split('-')[1];

      var graph = new _Graph__WEBPACK_IMPORTED_MODULE_23__["default"](_this15.identifier, {
        graph: type,
        color: _this15.color,
        thin: _this15.thin,
        seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
        beginPoint: {
          x: startX,
          y: startY,
          seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
        },
        endPoint: {
          x: startX,
          y: startY,
          seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
        },
        show: true,
        solid: _this15.type.indexOf('solid') > -1 // 是否实心

      });
      _this15.seq = graph.seq;

      _this15.userData[_this15.currentBoard][_this15.identifier].push(graph);

      _this15.data[_this15.currentBoard].push(graph);

      _this15.opData[_this15.currentBoard].push(new _Operation__WEBPACK_IMPORTED_MODULE_20__["default"](_this15.identifier, {
        seq: graph.startPoint.seq,
        type: 'graph'
      }));

      _this15.opIndex[_this15.currentBoard]++;
    },
    draw: function draw(currentX, currentY) {
      var length = _this15.userData[_this15.currentBoard][_this15.identifier].length;
      var graph = _this15.userData[_this15.currentBoard][_this15.identifier][length - 1];
      graph.endPoint.x = currentX;
      graph.endPoint.y = currentY;

      if (graph.graph == 'circle') {
        _this15.circleFix(graph);
      }

      _this15.setNeedDraw(true);
    },
    end: function end(endX, endY) {
      var length = _this15.userData[_this15.currentBoard][_this15.identifier].length;
      var graph = _this15.userData[_this15.currentBoard][_this15.identifier][length - 1];
      graph.endPoint.x = endX;
      graph.endPoint.y = endY;
      if (graph.graph == 'circle') _this15.circleFix(graph);

      if (graph.graph != 'line') {
        _this15.graphFix(graph);
      }

      _this15.setNeedDraw(true);

      var realTimeData = {
        seq: graph.seq,
        time: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
        color: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_this15.color),
        scale: 100,
        thin: _this15.thin,
        beginPoint: {
          x: graph.startPoint.x,
          y: graph.startPoint.y,
          seq: graph.startPoint.seq
        },
        endPoint: {
          x: graph.endPoint.x,
          y: graph.endPoint.y,
          seq: graph.endPoint.seq
        }
      };
      var sendMap = {
        'line': 10,
        'oval': 11,
        'circle': 11,
        'rect': 12
      };
      realTimeData.action = sendMap[graph.graph];
      var reportMap = {
        'line': 'addPatternLine',
        'oval': 'addPatternCircle',
        'circle': 'addPatternCircle',
        'rect': 'addPatternRectangle'
      };
      var reportMsg = {
        type: reportMap[graph.graph],
        seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
        content: {
          boardId: _this15.currentBoard,
          uid: graph.user,
          colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(_this15.color),
          scale: 100,
          width: _this15.thin,
          time: graph.time,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          hidden: 0,
          beginPoint: {
            x: graph.startPoint.x,
            y: graph.startPoint.y,
            seq: graph.startPoint.seq
          },
          endPoint: {
            x: graph.endPoint.x,
            y: graph.endPoint.y,
            seq: graph.endPoint.seq
          }
        }
      };
      var solid = _this15.type.indexOf('solid') > -1 ? 1 : 0;

      if (realTimeData.action > 10) {
        realTimeData.fillRect = solid;
        reportMsg.content.fillRect = solid;
      }

      if (realTimeData.action == 12) {
        realTimeData.cornerRadius = 0;
        reportMsg.content.cornerRadius = 0;
      }

      _this15.realTimeData.push(realTimeData); // 上报数据


      _this15.report.reportGraphData([reportMsg]);
    },
    over: function over(endX, endY) {
      this.end(endX, endY);
    }
  };
};
/**
 * 采集拖拽移动
 */


Store.prototype.collectDragData = function () {
  var _this16 = this;

  return {
    start: function start(e) {
      var boardBox = e.currentTarget.getElementsByClassName('tx_board_canvas_box')[0];
      var transformValue = getComputedStyle(boardBox).getPropertyValue('transform') || ''; // var matrixs = transformValue.split(',');

      var left = boardBox.style.left;
      var top = boardBox.style.top; // this.opData[this.currentBoard].push(new Operation(this.identifier, {
      //   seq: {
      //     origin: {
      //       left,
      //       top
      //     },
      //     final: []
      //   },
      //   type: 'drag'
      // }));
    },
    draw: function draw(e, currentX, currentY, oldX, oldY) {
      var boardBox = e.currentTarget.getElementsByClassName('tx_board_canvas_box')[0];
      var moveX = currentX - oldX; // 移动的X距离

      var moveY = currentY - oldY; // 移动的Y距离

      var scaleX = moveX / _this16.boardWidth * 100;
      var scaleY = moveY / _this16.boardHeight * 100;
      var maxLeft, minLeft, maxTop, minTop; // 定义可移动范围
      // 说明是白板是以水平方向为拖动

      if (_this16.boardWidth / _this16.boardHeight > _this16.containerWidth / _this16.containerHeight) {
        if (_this16.boardHeight > _this16.containerHeight) {
          maxTop = 50 + (_this16.boardHeight - _this16.containerHeight) / 2 / _this16.boardHeight * 100;
          minTop = 50 - (_this16.boardHeight - _this16.containerHeight) / 2 / _this16.boardHeight * 100;
        } else {
          maxTop = 50;
          minTop = 50;
        }

        maxLeft = 50 + (_this16.boardWidth - _this16.containerWidth) / 2 / _this16.boardWidth * 100;
        minLeft = 50 - (_this16.boardWidth - _this16.containerWidth) / 2 / _this16.boardWidth * 100;
      } else {
        maxTop = 50 + (_this16.boardHeight - _this16.containerHeight) / 2 / _this16.boardHeight * 100;
        minTop = 50 - (_this16.boardHeight - _this16.containerHeight) / 2 / _this16.boardHeight * 100;

        if (_this16.boardWidth > _this16.containerWidth) {
          maxLeft = 50 + (_this16.boardWidth - _this16.containerWidth) / 2 / _this16.boardWidth * 100;
          minLeft = 50 - (_this16.boardWidth - _this16.containerWidth) / 2 / _this16.boardWidth * 100;
        } else {
          maxLeft = 50;
          minLeft = 50;
        }
      }

      var left = boardBox.style.left.replace('%', '') * 1 + scaleX;
      left = Math.min(maxLeft, Math.max(minLeft, left));
      boardBox.style.left = left + '%';
      var top = boardBox.style.top.replace('%', '') * 1 + scaleY;
      top = Math.min(maxTop, Math.max(minTop, top));
      boardBox.style.top = top + '%'; // 以上设置left / top 会导致webkittransform失效

      var style = boardBox.getAttribute('style');

      if (style.indexOf('-webkit-transform') === -1) {
        style += '-webkit-transform: translateX(-50%) translateY(-50%);';
      }

      boardBox.setAttribute('style', style);

      if (_this16.dragDataList.getDragData(_this16.currentBoard)) {
        _this16.dragDataList.updateDragData(_this16.currentBoard, {
          xOffset: left,
          yOffset: top
        });
      } else {
        _this16.dragDataList.addDragData(_this16.currentBoard, new _model_DragModel__WEBPACK_IMPORTED_MODULE_35__["default"]({
          scale: _this16.getBoardScale(),
          // 缩放比
          xOffset: left,
          yOffset: top
        }));
      }

      _this16.realTimeData.push(_this16.dragDataList.getDragData(_this16.currentBoard).getRealTimeData());
    },

    /**
     * 缩放操作绘制
     * beforePinchScale 捏合前的比例
     * pinchScale 捏合产生的缩放比集合
     */
    scaleDraw: function scaleDraw(beforePinchScale, pinchScale) {
      if (pinchScale.length) {
        // 说明是捏合
        var dragData = _this16.dragDataList.getDragData(_this16.currentBoard);

        var scale;

        if (dragData) {
          scale = parseInt(beforePinchScale * pinchScale[pinchScale.length - 1]);
          scale = Math.max(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].MIN_SCALE, Math.min(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].MAX_SCALE, scale));
          dragData.scale = scale;
        }

        _this16.setNeedDraw(true);
      }
    },
    end: function end() {
      // 结束后就上报
      _this16.report.reportDrag(Object.assign(_this16.dragDataList.getDragData(_this16.currentBoard).getReportData(), {
        boardId: _this16.currentBoard
      }));
    },
    // 如果是移动端
    touchEnd: function touchEnd(pinchScale) {
      if (pinchScale.length) {
        // 说明是捏合
        var dragData = _this16.dragDataList.getDragData(_this16.currentBoard);

        _this16.setBoardScale(dragData.scale);
      } else {
        _this16.report.reportDrag(Object.assign(_this16.dragDataList.getDragData(_this16.currentBoard).getReportData(), {
          boardId: _this16.currentBoard
        }));
      }
    },
    over: function over() {
      // 结束后就上报
      _this16.report.reportDrag(Object.assign(_this16.dragDataList.getDragData(_this16.currentBoard).getReportData(), {
        boardId: _this16.currentBoard
      }));
    }
  };
};
/**
 * 取消选择
 */


Store.prototype.cancelSelect = function () {
  var selectLength = this.selectedList.length;

  for (var i = 0; i < selectLength; i++) {
    var item = this.selectedList[i];
    item.select = false;
  }

  this.selectedList = [];
  this.selectArea = {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  };

  if (selectLength) {
    // 如果有选框才重绘
    this.setNeedDraw(true);
  }
};
/**
 * 橡皮擦碰撞检测
 * @param {*} x
 * @param {*} y
 * @param {*} radius
 */


Store.prototype.eraserImpactCheck = function (x, y, radius) {
  var _this17 = this;

  // 遍历data
  var realTimeData = [];
  this.data[this.currentBoard].forEach(function (item) {
    var halfThin = item.thin / 2;

    if (item.type == 'line' && item.show) {
      // 随便的画线
      // 先检测是否在矩形区域内
      var maxX = item.border.maxX + halfThin;
      var maxY = item.border.maxY + halfThin;
      var minX = item.border.minX - halfThin;
      var minY = item.border.minY - halfThin;
      var distance = 0;

      if (x + radius < minX || x - radius > maxX || y + radius < minY || y - radius > maxY) {
        // 在涂鸦矩形区域外，肯定不会碰撞，退出
        return;
      }

      var isRelative = false;

      if (item.lines.length === 1) {
        var p = item.lines[0];

        var _distance = _this17.getDistance(x, y, p.x, p.y, p.x, p.y);

        if (_distance <= (radius + halfThin) * (radius + halfThin)) {
          isRelative = true;
        }
      } else {
        //逐段计算碰撞
        for (var i = 1; i < item.lines.length; i++) {
          var p0 = item.lines[i - 1];
          var p1 = item.lines[i];

          var _distance2 = _this17.getDistance(x, y, p0.x, p0.y, p1.x, p1.y);

          if (_distance2 <= (radius + halfThin) * (radius + halfThin)) {
            isRelative = true;
            break;
          }
        }
      }

      if (isRelative) {
        item.show = false;
        realTimeData.push({
          uid: item.user,
          seq: item.seq
        });
      }
    } else if (item.type == 'graph' && item.show) {
      if (item.graph == 'line') {
        // 擦除直线
        distance = _this17.getDistance(x, y, item.startPoint.x, item.startPoint.y, item.endPoint.x, item.endPoint.y);

        if (distance <= (radius + halfThin) * (radius + halfThin)) {
          item.show = false;
          realTimeData.push({
            uid: item.user,
            seq: item.startPoint.seq
          });
        }
      } else if (item.graph == 'rect') {
        // 擦掉矩形
        if (item.solid) {
          // 实心  只需判断是否在内部
          if (x > item.startPoint.x && y > item.startPoint.y && x < item.endPoint.x && y < item.endPoint.y) {
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        } else {
          // 点击的位置在四条边附近  简化为 点到四条线段的距离
          var distance1 = _this17.getDistance(x, y, item.startPoint.x, item.startPoint.y, item.startPoint.x, item.endPoint.y);

          var distance2 = _this17.getDistance(x, y, item.startPoint.x, item.startPoint.y, item.endPoint.x, item.startPoint.y);

          var distance3 = _this17.getDistance(x, y, item.endPoint.x, item.endPoint.y, item.startPoint.x, item.endPoint.y);

          var distance4 = _this17.getDistance(x, y, item.endPoint.x, item.endPoint.y, item.endPoint.x, item.startPoint.y);

          if (Math.min(distance1, distance2, distance3, distance4) <= (radius + halfThin) * (radius + halfThin)) {
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        }
      } else if (item.graph == 'circle') {
        var centerX = (item.startPoint.x + item.endPoint.x) / 2;
        var centerY = (item.startPoint.y + item.endPoint.y) / 2;
        var circleRadius = Math.sqrt(Math.pow(item.startPoint.x - item.endPoint.x, 2) + Math.pow(item.startPoint.y - item.endPoint.y, 2)) / 2;
        distance = Math.sqrt(Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2));

        if (item.solid) {
          // 实心  只需判断是否在内部
          if (distance < circleRadius + radius) {
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        } else {
          // 空心 判断距离圆心的距离
          if (Math.abs(circleRadius - distance) <= radius + halfThin) {
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        }
      } else if (item.graph == 'oval') {
        var errValue = 0.2; // 误差值

        var _centerX = (item.startPoint.x + item.endPoint.x) / 2;

        var _centerY = (item.startPoint.y + item.endPoint.y) / 2;

        var a = Math.abs(item.startPoint.x - item.endPoint.x) / 2;
        var b = Math.abs(item.startPoint.y - item.endPoint.y) / 2;

        if (a === b && a === 0) {
          return;
        } // 正常的逻辑应该是以下面的算法为标准， 这里猜测绘制椭圆的时候是将焦点固定在了x轴上了  所以直接默认用了焦点在x轴上的算法


        var value1 = Math.pow(x - _centerX, 2) / Math.pow(a, 2) + Math.pow(y - _centerY, 2) / Math.pow(b, 2);
        var value2 = Math.pow(x - _centerX + halfThin, 2) / Math.pow(a, 2) + Math.pow(y - _centerY + halfThin, 2) / Math.pow(b, 2);
        var value3 = Math.pow(x - _centerX + halfThin, 2) / Math.pow(a, 2) + Math.pow(y - _centerY - halfThin, 2) / Math.pow(b, 2);
        var value4 = Math.pow(x - _centerX - halfThin, 2) / Math.pow(a, 2) + Math.pow(y - _centerY + halfThin, 2) / Math.pow(b, 2);
        var value5 = Math.pow(x - _centerX - halfThin, 2) / Math.pow(a, 2) + Math.pow(y - _centerY - halfThin, 2) / Math.pow(b, 2);

        if (item.solid) {
          // 如果是实心
          if (value1 <= 1 + errValue || value2 <= 1 + errValue || value3 <= 1 + errValue || value4 <= 1 + errValue || value5 <= 1 + errValue) {
            // 说明是在范围内
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        } else {
          // 如果是空心
          if (value1 <= 1 + errValue && value1 >= 1 - errValue || value2 <= 1 + errValue && value2 >= 1 - errValue || value3 <= 1 + errValue && value3 >= 1 - errValue || value4 <= 1 + errValue && value4 >= 1 - errValue || value5 <= 1 + errValue && value5 >= 1 - errValue) {
            item.show = false;
            realTimeData.push({
              uid: item.user,
              seq: item.startPoint.seq
            });
          }
        } // if (a > b || true) { // 焦点在x轴上
        //   var value1 = Math.pow(x - centerX, 2) / Math.pow(a, 2) + Math.pow(y - centerY, 2) / Math.pow(b, 2);
        //   var value2 = Math.pow(x - centerX + halfThin, 2) / Math.pow(a, 2) + Math.pow(y - centerY + halfThin, 2) / Math.pow(b, 2);
        //   var value3 = Math.pow(x - centerX + halfThin, 2) / Math.pow(a, 2) + Math.pow(y - centerY - halfThin, 2) / Math.pow(b, 2);
        //   var value4 = Math.pow(x - centerX - halfThin, 2) / Math.pow(a, 2) + Math.pow(y - centerY + halfThin, 2) / Math.pow(b, 2);
        //   var value5 = Math.pow(x - centerX - halfThin, 2) / Math.pow(a, 2) + Math.pow(y - centerY - halfThin, 2) / Math.pow(b, 2);
        //   console.log('===========', value1, value2, value3, value4, value5);
        //   if (item.solid) { // 如果是实心
        //     if (value1 <= 1 + errValue || value2 <= 1 + errValue || value3 <= 1 + errValue || value4 <= 1 + errValue || value5 <= 1 + errValue) { // 说明是在范围内
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       });
        //     }
        //   } else { // 如果是空心
        //     if ((value1 <= 1 + errValue && value1 >= 1 - errValue) || (value2 <= 1 + errValue && value2 >= 1 - errValue) || (value3 <= 1 + errValue && value3 >= 1 - errValue) ||
        //       (value4 <= 1 + errValue && value4 >= 1 - errValue) || (value5 <= 1 + errValue && value5 >= 1 - errValue)) {
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       });
        //     }
        //   }
        // } else { // 焦点在y轴上
        //   var value = Math.pow(y - centerY, 2) / Math.pow(a, 2) + Math.pow(x - centerX, 2) / Math.pow(b, 2);
        //   console.log('===========', value);
        //   if (item.solid) { // 如果是实心
        //     if (value <= 1 + errValue) { // 说明是在范围内
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       });
        //     }
        //   } else { // 如果是空心
        //     if (value <= 1 + errValue && value >= 1 - errValue) {
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       });
        //     }
        //   }
        // }
        // fly的旧算法
        // var centerX = (item.startPoint.x + item.endPoint.x) / 2;
        // var centerY = (item.startPoint.y + item.endPoint.y) / 2;
        // var a = Math.abs(item.startPoint.x - item.endPoint.x) / 2;
        // var b = Math.abs(item.startPoint.y - item.endPoint.y) / 2;
        // // 计算圆心距离
        // var distance = Math.sqrt(Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2));
        // if (distance == 0) { // 刚好重合的话
        //   if (item.solid) { // 实心  直接擦除
        //     item.show = false;
        //     realTimeData.push({
        //       uid: item.user,
        //       seq: item.startPoint.seq
        //     });
        //   } else if (a <= (radius + halfThin) || b <= (radius + halfThin)) { // 空心 比较长短轴与 橡皮擦范围的大小
        //     item.show = false;
        //     realTimeData.push({
        //       uid: item.user,
        //       seq: item.startPoint.seq
        //     });
        //   }
        // } else {
        //   // 计算tan
        //   var tan = (y - centerY) / (x - centerX);
        //   var difX = Math.sqrt(1 / (1 / (a * a) + Math.pow(tan / b, 2)));
        //   var difY = Math.sqrt(1 / (Math.pow(tan / a, 2) + 1 / (b * b)));
        //   var nodeX = x > centerX ?
        //     (centerX + difX) :
        //     (centerX - difX);
        //   var nodeY = y > centerY ?
        //     (centerY + difY) :
        //     (centerY - difY);
        //   if (item.solid) {
        //     // 实心 检测横坐标之差
        //     var centerDifX = Math.abs(x - centerX);
        //     if (difX + radius > centerDifX) {
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       })
        //     }
        //   } else {
        //     // 空心 交点是否在橡皮擦圆内
        //     distance = Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2);
        //     if (distance <= (radius + halfThin) * (radius + halfThin)) {
        //       item.show = false;
        //       realTimeData.push({
        //         uid: item.user,
        //         seq: item.startPoint.seq
        //       })
        //     }
        //   }
        // }

      }
    } else if (item.type == 'inputtext' && item.show) {
      var errorXNum = 0; //误差值

      var errorYNum = 0; //误差值

      var startPointX = item.location.x - errorXNum;
      var startPointY = item.location.y - errorYNum;
      var endPointX = item.location.x + item.textWidth / _this17.boardWidth * 10000 + errorXNum;
      var endPointY = item.location.y + item.textHeight / _this17.boardHeight * 10000 + errorYNum;

      if (x > startPointX && y > startPointY && x < endPointX && y < endPointY) {
        item.show = false;
        realTimeData.push({
          uid: item.user,
          seq: item.belongSeq
        });
      }
    }
  });
  return realTimeData;
}; // 点到线段的距离


Store.prototype.getDistance = function (x, y, x1, y1, x2, y2) {
  var A = x - x1;
  var B = y - y1;
  var C = x2 - x1;
  var D = y2 - y1;
  var dot = A * C + B * D;
  var len_sq = C * C + D * D;
  var param = -1;
  if (len_sq != 0) //in case of 0 length line
    param = dot / len_sq;
  var xx, yy;

  if (param < 0) {
    xx = x1;
    yy = y1;
  } else if (param > 1) {
    xx = x2;
    yy = y2;
  } else {
    xx = x1 + param * C;
    yy = y1 + param * D;
  }

  var dx = x - xx;
  var dy = y - yy;
  return dx * dx + dy * dy;
}; // 圆的话  需要修正endPoint


Store.prototype.circleFix = function (circle) {
  // 计算占比
  var width = Math.abs(circle.startPoint.x - circle.endPoint.x) * this.boardWidth / 10000;
  var height = Math.abs(circle.startPoint.y - circle.endPoint.y) * this.boardHeight / 10000;

  if (width > height) {
    // 比较宽的矩形  需要终点修改 x 值
    circle.endPoint.x = circle.startPoint.x < circle.endPoint.x ? circle.startPoint.x + height * 10000 / this.boardWidth : circle.startPoint.x - height * 10000 / this.boardWidth;
    circle.endPoint.x = parseInt(circle.endPoint.x);
  } else {
    // 比较高的矩形 需要终点修改 y 值
    circle.endPoint.y = circle.startPoint.y < circle.endPoint.y ? circle.startPoint.y + width * 10000 / this.boardHeight : circle.startPoint.y - width * 10000 / this.boardHeight;
    circle.endPoint.y = parseInt(circle.endPoint.y);
  }
}; // 将graph的顶点统一改为左上角开始和右下角结束


Store.prototype.graphFix = function (graph) {
  var startx = graph.startPoint.x;
  var starty = graph.startPoint.y;
  var endx = graph.endPoint.x;
  var endy = graph.endPoint.y;
  graph.startPoint = {
    x: startx > endx ? endx : startx,
    y: starty > endy ? endy : starty,
    seq: graph.startPoint.seq
  };
  graph.endPoint = {
    x: startx > endx ? startx : endx,
    y: starty > endy ? starty : endy,
    seq: graph.endPoint.seq
  };
}; // 发送修改数据


Store.prototype.sendRequest = function () {
  // 检查是否禁用了数据同步, 把数据清空
  if (!this.dataSyncEnable) {
    this.realTimeData = [];
    return;
  } // 如果不在白名单


  if (!this.permissions) {
    return;
  }

  var tempData = JSON.parse(JSON.stringify(this.realTimeData)); // 发请求

  var realTimeData = {
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    timestamp: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    value: {
      boardId: this.currentBoard,
      operator: this.identifier,
      actions: tempData
    }
  }; // 发送内容归0

  this.realTimeData = [];
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_SYNCDATA', realTimeData);
};

Store.prototype.addHistory = function (data) {
  var _this18 = this;

  var self = this; // 排序

  this.sortBoard();
  data.forEach(function (action) {
    var boardId;
    var user;
    action.content = JSON.parse(action.content);

    if (action.type === 'setGlobalBG') {// 如果是设置全局背景，则跳过
    } else if (action.type === 'createBoards') {
      // 如果有创建createBoard
      action.content && action.content.createBoards.forEach(function (item) {
        boardId = item; // 这里协议少了uid
        // user = item.uid;

        if (boardId && !self.userData[boardId]) {
          self.addBoard(boardId, false);
        }
      });
    } else if (action.type === 'addFile') {
      var fid = action.content.fid;
      var title = action.content.title;
      var downloadURL = action.content.downloadURL;
      var pageCount = action.content.pageCount;
      var currentPageIndex = action.content.currentPageIndex;
      var currentPageStep = action.content.currentPageStep || 0;
      var timestamp = action.content.timestamp;
      var uid = action.content.uid;
      var platform = action.content.platform;
      var type = action.content.type;
      var ratio = action.content.ratio;
      var scale = action.content.scale;
      var isExist = false; // 是否已经存在

      for (var i = 0, len = self.groups.length; i < len; i++) {
        var group = self.groups[i];

        if (group.fid == fid) {
          group.title = title;
          group.downloadURL = downloadURL;
          group.pageCount = pageCount;
          group.currentPageIndex = currentPageIndex;
          group.currentPageStep = currentPageStep;
          group.timestamp = timestamp;
          group.uid = uid;
          group.type = type;
          group.ratio = ratio;
          group.scale = scale;
          isExist = true;
          break;
        }
      }

      if (!isExist) {
        // 如果不存在
        self.addGroupNotReport(fid, title, uid, downloadURL, pageCount, currentPageIndex, timestamp, platform, type, currentPageStep, ratio, scale);
      } else if (isExist && fid === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
        // 如果此时存在了，且是默认分组，则为更新信息
        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this18, 'TEB_ADDFILE', fid);
      } // 如果是旧协议


      if (!timestamp && !uid) {
        return;
      }

      if (fid != _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
        var createBoards = [];
        var boards = self.createBoardIdForFile(fid, uid, timestamp, pageCount, platform);
        var previewUrls = [];
        var basePreview = downloadURL ? _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].fileDownLoadUrlToPreviewUrl(downloadURL) : ''; // 2019年02月26日 addFile协议需要自行拼接boardid和背景

        for (var _i2 = 0; _i2 < pageCount; _i2++) {
          boardId = boards[_i2];

          if (basePreview) {
            previewUrls.push(basePreview + (_i2 + 1));
          }

          if (boardId && !self.userData[boardId]) {
            // self.addBoard(boardId, false);
            createBoards.push(boardId);
          }
        }

        self.addBoard(createBoards);

        if (type == _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG && downloadURL) {
          self.addBackgroundPic({
            boardIds: boards,
            urls: previewUrls,
            type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE,
            needReport: false
          });
        }
      } // 排序文件


      self.sortGroup();
    } else {
      boardId = action.content.boardId;
      user = action.content.uid;

      if (boardId && !self.userData[boardId]) {
        self.addBoard(boardId, false);
      }

      if (boardId && !self.userData[boardId][user]) {
        self.userData[boardId][user] = [];
      }
    }

    action.content.colorRGBA && (action.content.color = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(action.content.colorRGBA));
    action.content.width && (action.content.thin = action.content.width);

    if (action.type == 'addLine') {
      var line;

      for (var _i3 = 0; _i3 < action.content.points.length; _i3++) {
        var x = action.content.points[_i3].x;
        var y = action.content.points[_i3].y;
        var belongSeq = action.content.points[0].seq;

        if (_i3 == 0) {
          line = new _Line__WEBPACK_IMPORTED_MODULE_21__["default"](user, {
            color: action.content.color,
            thin: action.content.thin,
            x: x,
            y: y,
            seq: action.content.points[_i3].seq,
            belongSeq: belongSeq,
            show: action.content.hidden ? false : true
          });
        } else {
          line.lines.push({
            x: x,
            y: y,
            belongSeq: belongSeq,
            seq: action.content.points[_i3].seq
          });

          if (_i3 == action.content.points.length - 1) {
            line.sort();
            line.endSeq = action.content.points[_i3].seq;
          }
        }

        line.setBorder(x, y);
      }

      if (line) {
        self.userData[boardId][user].push(line);
        self.data[boardId].push(line);
      }
    } else if (action.type == 'addText') {
      // 历史数据
      var text = new _InputText__WEBPACK_IMPORTED_MODULE_22__["default"](user, {
        belongSeq: action.content.belongSeq,
        x: action.content.x,
        y: action.content.y
      });
      text.seq = action.content.belongSeq; // seq 唯一编号

      text.scale = action.content.scale; // 激光笔的状态  正在用 1 以及 结束了 0

      text.color = action.content.color;
      text.typeFace = action.content.typeface;
      text.textSize = action.content.textSize;
      text.fontStyle = action.content.fontStyle;
      text.time = action.content.time;
      text.text = action.content.text;
      text.show = !action.content.hidden;
      self.userData[boardId][user].push(text);
      self.data[boardId].push(text);
    } else if (action.type == 'displayLine') {
      var lines = action.content.lines;
      lines.forEach(function (line) {
        for (var i = 0; i < self.userData[self.currentBoard][user].length; i++) {
          var item = self.userData[self.currentBoard][user][i];

          if (item.type == 'line' && item.startSeq == line.seq) {
            item.show = action.content.display ? true : false;
          } else if (item.type == 'graph' && item.startPoint.seq == line.seq) {
            item.show = action.content.display ? true : false;
          } else if (item.type == 'inputtext' && item.belongSeq == line.seq) {
            //白板后台历史消息是否撤销
            item.show = action.content.display ? true : false;
          }
        }
      });
    } else if (action.type == 'addPatternLine' || action.type == 'addPatternCircle' || action.type == 'addPatternRectangle') {
      var list = {
        'addPatternLine': 'line',
        'addPatternCircle': 'oval',
        'addPatternRectangle': 'rect'
      };
      action.content.graph = list[action.type];
      action.content.seq = action.content.beginPoint.seq;
      action.content.show = action.content.hidden ? false : true;
      action.content.solid = action.content.fillRect ? true : false;
      var graph = new _Graph__WEBPACK_IMPORTED_MODULE_23__["default"](user, action.content);
      self.userData[boardId][user].push(graph);
      self.data[boardId].push(graph);
    } else if (action.type == 'image') {
      if (action.content.url) {
        self.addBackgroundPic({
          boardIds: action.content.boardId,
          urls: action.content.url,
          type: action.content.type,
          needReport: false,
          position: action.content.mode
        });
      } else {
        self.deleteBackgroundPic(action.content.boardId);
      }
    } else if (action.type == 'clean') {
      self.clearBoard(false);
    } else if (action.type == 'cleanDraws') {
      self.clearBoard(true);
    } else if (action.type == 'switchBoard') {
      if (!boardId) {
        return;
      } // 如果seq是大于本地maxSeq，则处理，否则不处理


      if ((action.seq * 1 || 0) > self.maxSeq) {
        self.maxSeq = action.seq;

        if (!self.data[boardId]) {
          self.addBoard(boardId, false);
        }

        self.currentBoard = boardId; // 如果白板 = COMMON_DEFAULT_BOARD: '#DEFAULT',

        if (boardId === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD) {
          self.currentGroup = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP;
        } else {
          self.currentGroup = boardId.match(/\d+_#\w+$/)[0].split('_')[1];
        }

        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this18, 'TEB_GOTOBOARD', boardId, _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(boardId));
      } else {
        _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('throw_seq', {
          extra_info: JSON.stringify({
            seq: action.seq,
            maxSeq: self.maxSeq,
            boardId: boardId,
            method: 'addHistory'
          })
        });
      }
    } else if (action.type == 'setBoardBG') {
      self.setBackgroundColor({
        boardId: boardId,
        color: action.content.colorRGBA
      }, true);
    } else if (action.type == 'setGlobalBG') {
      self.setGlobalBackgroundColor(action.content.colorRGBA, true);
    } else if (action.type == 'drag') {
      // 如果是拖拽
      // 放大，拖拽的数据
      _this18.dragDataList.addDragData(boardId, new _model_DragModel__WEBPACK_IMPORTED_MODULE_35__["default"]({
        scale: action.content.scale,
        // 缩放比
        xOffset: action.content.xOffset,
        yOffset: action.content.yOffset
      }));
    } else if (action.type == 'setRatio') {
      var ratioMap = action.content || {};

      for (var bid in ratioMap) {
        _this18.boardRatio[bid] = ratioMap[bid];
      }
    }
  });
  self.setNeedDraw(true);
}; // revert操作


Store.prototype.undo = function () {
  var _this19 = this;

  this.cancelSelect();
  var operation = this.opData[this.currentBoard][this.opIndex[this.currentBoard] - 1];

  if (!operation) {
    return;
  }

  if (operation.type == 'line') {
    // 说明是画了一个线  这里要隐藏
    for (var i = 0; i < this.userData[this.currentBoard][operation.user].length; i++) {
      var item = this.userData[this.currentBoard][operation.user][i];

      if (operation.seq == item.seq) {
        item.show = false; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          // 擦除
          "display": 0,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        }); // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 0,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'eraser') {
    // 说明擦了东西 显示出来就好了
    operation.seq.forEach(function (seq) {
      var user = seq.uid;

      for (var i = 0; i < _this19.userData[_this19.currentBoard][user].length; i++) {
        var item = _this19.userData[_this19.currentBoard][user][i];

        if (item.type == 'line' && seq.seq == item.seq) {
          item.show = true;
        } else if (item.type == 'graph' && seq.seq == item.startPoint.seq) {
          item.show = true;
        } else if (item.type == 'inputtext' && seq.seq == item.belongSeq) {
          item.show = true;
        }
      }
    });
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
      // 擦除
      "display": 1,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "lines": operation.seq
    }); // 上报

    this.report.reportDisplayLine({
      boardId: this.currentBoard,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      display: 1,
      lines: operation.seq
    });
  } else if (operation.type == 'graph') {
    for (var _i4 = 0; _i4 < this.userData[this.currentBoard][operation.user].length; _i4++) {
      var _item = this.userData[this.currentBoard][operation.user][_i4];

      if (_item.type == 'graph' && operation.seq == _item.startPoint.seq) {
        _item.show = false; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          // 擦除
          "display": 0,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        }); // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 0,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'inputtext') {
    for (var _i5 = 0; _i5 < this.userData[this.currentBoard][operation.user].length; _i5++) {
      var _item2 = this.userData[this.currentBoard][operation.user][_i5];

      if (_item2.type == 'inputtext' && operation.seq == _item2.belongSeq) {
        _item2.show = false; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          // 擦除
          "display": 0,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        console.log("operation.user " + operation.user); // String test = ""
        // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 0,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'move') {
    // 得回到origin的位置
    var moves = [];
    operation.seq.origin.forEach(function (seq) {
      var user = seq.uid;

      for (var i = 0; i < _this19.userData[_this19.currentBoard][user].length; i++) {
        var item = _this19.userData[_this19.currentBoard][user][i];
        var movex = 0,
            movey = 0;

        if (item.type == 'line' && seq.seq == item.seq) {
          movex = seq.x - item.lines[0].x;
          movey = seq.y - item.lines[0].y;
          item.border.maxX += movex;
          item.border.minX += movex;
          item.border.maxY += movey;
          item.border.minY += movey;
          item.lines.forEach(function (line) {
            line.x += movex;
            line.y += movey;
          });

          if (item.fitCurve.length !== 0) {
            item.fitCurve.forEach(function (curve) {
              curve[1][0] += movex;
              curve[1][1] += movey;
              curve[2][0] += movex;
              curve[2][1] += movey;
              curve[3][0] += movex;
              curve[3][1] += movey;
            });
          }

          moves.push({
            uid: user,
            seq: seq.seq,
            x: seq.x,
            y: seq.y
          });
        } else if (item.type == 'graph' && seq.seq == item.startPoint.seq) {
          movex = seq.x - item.startPoint.x;
          movey = seq.y - item.startPoint.y;
          item.startPoint.x += movex;
          item.startPoint.y += movey;
          item.endPoint.x += movex;
          item.endPoint.y += movey;
          moves.push({
            uid: user,
            seq: seq.seq,
            x: seq.x,
            y: seq.y
          });
        } else if (item.type == 'inputtext' && seq.seq == item.belongSeq) {
          item.location.x = seq.x;
          item.location.y = seq.y;
          moves.push({
            uid: user,
            seq: item.belongSeq,
            x: seq.x,
            y: seq.y
          });
        }
      }
    });
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.MOVE_LINE_GRAPH_ACTION,
      // 擦除
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "moves": moves
    }); // report

    var reportData = [];
    operation.seq.origin.forEach(function (seq) {
      var user = seq.uid;

      for (var i = 0; i < _this19.userData[_this19.currentBoard][user].length; i++) {
        var item = _this19.userData[_this19.currentBoard][user][i];

        if (item.type == 'line' && seq.seq == item.seq) {
          // 添加点的信息
          var pointList = [];
          item.lines.forEach(function (line) {
            pointList.push({
              seq: line.seq,
              x: line.x,
              y: line.y
            });
          });
          reportData.push({
            type: 'addLine',
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              boardId: _this19.currentBoard,
              uid: item.user,
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              scale: 100,
              width: item.thin,
              time: item.time,
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              seq: item.seq,
              hidden: 0,
              points: pointList
            }
          });
        } else if (item.type == 'graph' && seq.seq == item.startPoint.seq) {
          var reportMap = {
            'line': 'addPatternLine',
            'oval': 'addPatternCircle',
            'circle': 'addPatternCircle',
            'rect': 'addPatternRectangle'
          };
          var reportMsg = {
            type: reportMap[item.graph],
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              boardId: _this19.currentBoard,
              uid: item.user,
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              scale: 100,
              width: item.thin,
              time: item.time,
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              hidden: 0,
              fillRect: item.solid ? 1 : 0,
              beginPoint: {
                x: item.startPoint.x,
                y: item.startPoint.y,
                seq: item.startPoint.seq
              },
              endPoint: {
                x: item.endPoint.x,
                y: item.endPoint.y,
                seq: item.endPoint.seq
              }
            }
          };

          if (item.graph == 'rect') {
            reportMsg.content.cornerRadius = 0;
          }

          reportData.push(reportMsg);
        } else if (item.type === 'inputtext' && seq.seq == item.belongSeq) {
          reportData.push({
            type: 'addText',
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              belongSeq: item.belongSeq,
              // 该文字序列的seq，用来唯一标识一个文字序列
              time: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              // 添加图形时的时间
              boardId: _this19.currentBoard,
              // 白板id
              uid: item.user,
              // 画线条的用户id
              x: item.location.x,
              // uint32 起点x相对白板宽度比例*10000
              y: item.location.y,
              // uint32 起点y相对白板高度比例*10000
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              // 文字颜色color值
              scale: item.scale,
              // scale值
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              // 后台的线条数据可以覆盖，通过updateTime来判断是否更新（IM后台时间戳/秒）
              hidden: 0,
              // 文字是否为隐藏的（橡皮擦、撤回操作可导致）
              typeface: item.typeFace,
              // 暂时不填，字体类型，sans-serif，serif和monospace
              textSize: item.textSize,
              // uint32 
              fontStyle: item.fontStyle,
              // 文字样式，默认填0，  0：常规；1：粗体；2.斜体；3.粗斜体；
              text: item.text //文本内容

            }
          });
        }
      }
    });
    this.report.reportGraphData(reportData);
  }

  this.opIndex[this.currentBoard]--;
  this.setNeedDraw(true);
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_OPERATE_CANREDO_STATUS_CHANGED', this.canRedo());
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_OPERATE_CANUNDO_STATUS_CHANGED', this.canUndo());
}; // 能否回退


Store.prototype.canUndo = function () {
  if (this.opIndex[this.currentBoard] == 0) {
    return false;
  }

  return true;
}; // process操作


Store.prototype.redo = function () {
  var _this20 = this;

  this.cancelSelect();
  var operation = this.opData[this.currentBoard][this.opIndex[this.currentBoard]];

  if (!operation) {
    return;
  }

  if (operation.type == 'line') {
    // 说明是画了一个线  这里要展示
    for (var i = 0; i < this.userData[this.currentBoard][operation.user].length; i++) {
      var item = this.userData[this.currentBoard][operation.user][i];

      if (operation.seq == item.seq) {
        item.show = true; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          // 擦除
          "display": 1,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        }); // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 1,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'inputtext') {
    // TODO
    for (var _i6 = 0; _i6 < this.userData[this.currentBoard][operation.user].length; _i6++) {
      var _item3 = this.userData[this.currentBoard][operation.user][_i6];

      if (_item3.type == 'inputtext' && operation.seq == _item3.belongSeq) {
        _item3.show = true; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          // 擦除
          "display": 1,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        console.log("operation.user " + operation.user); // String test = ""
        // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 1,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'eraser') {
    // 说明擦了东西 显示要擦掉
    operation.seq.forEach(function (seq) {
      var user = seq.uid;

      for (var _i7 = 0; _i7 < _this20.userData[_this20.currentBoard][user].length; _i7++) {
        var _item4 = _this20.userData[_this20.currentBoard][user][_i7];

        if (_item4.type == 'line' && seq.seq == _item4.seq) {
          _item4.show = false;
        } else if (_item4.type == 'graph' && seq.seq == _item4.startPoint.seq) {
          _item4.show = false;
        } else if (_item4.type === 'inputtext' && seq.seq == _item4.belongSeq) {
          _item4.show = false;
        }
      }
    });
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
      // 擦除
      "display": 0,
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "lines": operation.seq
    }); // 上报

    this.report.reportDisplayLine({
      boardId: this.currentBoard,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      display: 0,
      lines: operation.seq
    });
  } else if (operation.type == 'graph') {
    // 展示
    for (var _i8 = 0; _i8 < this.userData[this.currentBoard][operation.user].length; _i8++) {
      var _item5 = this.userData[this.currentBoard][operation.user][_i8];

      if (_item5.type == 'graph' && operation.seq == _item5.startPoint.seq) {
        _item5.show = true; // 这里需要realTimeData

        this.realTimeData.push({
          "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ERASER_ACTION,
          "display": 1,
          "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
          "lines": [{
            uid: operation.user,
            seq: operation.seq
          }]
        }); // 上报

        this.report.reportDisplayLine({
          boardId: this.currentBoard,
          updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
          display: 1,
          lines: [{
            uid: operation.user,
            seq: operation.seq
          }]
        });
        break;
      }
    }
  } else if (operation.type == 'move') {
    // 得回到final的位置
    var moves = [];
    operation.seq.final.forEach(function (seq) {
      var user = seq.uid;

      for (var i = 0; i < _this20.userData[_this20.currentBoard][user].length; i++) {
        var item = _this20.userData[_this20.currentBoard][user][i];
        var movex = 0,
            movey = 0;

        if (item.type == 'line' && seq.seq == item.seq) {
          movex = seq.x - item.lines[0].x;
          movey = seq.y - item.lines[0].y;
          item.border.maxX += movex;
          item.border.minX += movex;
          item.border.maxY += movey;
          item.border.minY += movey;
          item.lines.forEach(function (line) {
            line.x += movex;
            line.y += movey;
          });

          if (item.fitCurve.length !== 0) {
            item.fitCurve.forEach(function (curve) {
              curve[1][0] += movex;
              curve[1][1] += movey;
              curve[2][0] += movex;
              curve[2][1] += movey;
              curve[3][0] += movex;
              curve[3][1] += movey;
            });
          }

          moves.push({
            uid: user,
            seq: seq.seq,
            x: seq.x,
            y: seq.y
          });
        } else if (item.type == 'graph' && seq.seq == item.startPoint.seq) {
          movex = seq.x - item.startPoint.x;
          movey = seq.y - item.startPoint.y;
          item.startPoint.x += movex;
          item.startPoint.y += movey;
          item.endPoint.x += movex;
          item.endPoint.y += movey;
          moves.push({
            uid: user,
            seq: seq.seq,
            x: seq.x,
            y: seq.y
          });
        } else if (item.type == 'inputtext' && seq.seq == item.belongSeq) {
          item.location.x = seq.x;
          item.location.y = seq.y;
          moves.push({
            uid: user,
            seq: item.belongSeq,
            x: seq.x,
            y: seq.y
          });
        }
      }
    });
    this.realTimeData.push({
      "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.MOVE_LINE_GRAPH_ACTION,
      // 擦除
      "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
      "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
      "moves": moves
    });
    var reportData = [];
    operation.seq.final.forEach(function (seq) {
      var user = seq.uid;

      for (var i = 0; i < _this20.userData[_this20.currentBoard][user].length; i++) {
        var item = _this20.userData[_this20.currentBoard][user][i];

        if (item.type == 'line' && seq.seq == item.seq) {
          // 添加点的信息
          var pointList = [];
          item.lines.forEach(function (line) {
            pointList.push({
              seq: line.seq,
              x: line.x,
              y: line.y
            });
          });
          reportData.push({
            type: 'addLine',
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              boardId: _this20.currentBoard,
              uid: item.user,
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              scale: 100,
              width: item.thin,
              time: item.time,
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              seq: item.seq,
              hidden: 0,
              points: pointList
            }
          });
        } else if (item.type == 'graph' && seq.seq == item.startPoint.seq) {
          var reportMap = {
            'line': 'addPatternLine',
            'oval': 'addPatternCircle',
            'circle': 'addPatternCircle',
            'rect': 'addPatternRectangle'
          };
          var reportMsg = {
            type: reportMap[item.graph],
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              boardId: _this20.currentBoard,
              uid: item.user,
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              scale: 100,
              width: item.thin,
              time: item.time,
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              hidden: 0,
              beginPoint: {
                x: item.startPoint.x,
                y: item.startPoint.y,
                seq: item.startPoint.seq
              },
              endPoint: {
                x: item.endPoint.x,
                y: item.endPoint.y,
                seq: item.endPoint.seq
              }
            }
          };

          if (item.graph == 'oval' || item.graph == 'circle') {
            reportMsg.content.fillRect = 0;
          } else if (item.graph == 'rect') {
            reportMsg.content.fillRect = 0;
            reportMsg.content.cornerRadius = 0;
          }

          reportData.push(reportMsg);
        } else if (item.type === 'inputtext' && seq.seq == item.belongSeq) {
          reportData.push({
            type: 'addText',
            seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
            content: {
              belongSeq: item.belongSeq,
              // 该文字序列的seq，用来唯一标识一个文字序列
              time: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              // 添加图形时的时间
              boardId: _this20.currentBoard,
              // 白板id
              uid: item.user,
              // 画线条的用户id
              x: item.location.x,
              // uint32 起点x相对白板宽度比例*10000
              y: item.location.y,
              // uint32 起点y相对白板高度比例*10000
              colorRGBA: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(item.color),
              // 文字颜色color值
              scale: item.scale,
              // scale值
              updateTime: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
              // 后台的线条数据可以覆盖，通过updateTime来判断是否更新（IM后台时间戳/秒）
              hidden: 0,
              // 文字是否为隐藏的（橡皮擦、撤回操作可导致）
              typeface: item.typeFace,
              // 暂时不填，字体类型，sans-serif，serif和monospace
              textSize: item.textSize,
              // uint32 
              fontStyle: item.fontStyle,
              // 文字样式，默认填0，  0：常规；1：粗体；2.斜体；3.粗斜体；
              text: item.text //文本内容

            }
          });
        }
      }
    });
    this.report.reportGraphData(reportData);
  }

  this.opIndex[this.currentBoard]++;
  this.setNeedDraw(true);
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_OPERATE_CANREDO_STATUS_CHANGED', this.canRedo());
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_OPERATE_CANUNDO_STATUS_CHANGED', this.canUndo());
}; // 能否回退


Store.prototype.canRedo = function () {
  if (this.opIndex[this.currentBoard] == this.opData[this.currentBoard].length) {
    return false;
  }

  return true;
}; // 获取白板数据


Store.prototype.syncHistroyData = function () {
  var _this21 = this;

  var self = this;
  self.clearBoard();
  var globalList = [];
  var boardData = [];
  var fileData = [];
  var isFinish = false; // 数据是否全部拉完整了

  var fetchTimer = 0; // 拉取次数

  var getBoardData = function getBoardData(isFirstRequest, callback, fail) {
    var startTime = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp();
    new Promise(function (resolve, reject) {
      _this21.request.getBoardData(isFirstRequest, function (res) {
        if (!res.error_code) {
          _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('getBoardData', {
            time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startTime,
            extra_info: JSON.stringify(res)
          });
          resolve(res);
        } else {
          // 失败
          _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('getBoardData', {
            action_result: res.error_code,
            action_info: res.error_msg,
            time_consume: _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp() - startTime,
            extra_info: JSON.stringify(res)
          });
          reject("error_code:".concat(res.error_code, " error_msg:").concat(res.error_msg));
          _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_HISTORYDATA, 'sync data error');
        }
      }, function (error) {
        reject("error_code:".concat(error, " error_msg:HTTP\u8BF7\u6C42\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5"));
        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_HISTORYDATA, 'sync data error');
      });
    }).then(function (res) {
      var list = res.board_data_list || [];
      list.forEach(function (item) {
        if (item.type === 'setGlobalBG') {
          globalList.push(item);
        } else if (item.type === 'addFile') {
          fileData.push(item);
        } else {
          boardData.push(item);
        }
      });
      fetchTimer++;

      if (!res.is_finish && fetchTimer < 100) {
        getBoardData(false, callback, fail);
      } else {
        callback();
      }
    }).catch(function (error) {
      try {
        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this21, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_HISTORYDATA, error.toString());
      } catch (error) {
        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this21, 'TEB_ERROR', _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_32__["default"].TEDU_BOARD_ERROR_HISTORYDATA, 'sync data error');
      }
    });
  };

  return new Promise(function (resolve, reject) {
    getBoardData(true, function () {
      var _this22 = this;

      self.addHistory(globalList);
      self.addHistory(fileData);
      self.addHistory(boardData); // 修正数据

      self.fixBoardData(); // 排序一次

      self.sortBoard(); // 设置最大的seq

      self.syncBoardSeq(); // 同步一次分组
      // self.syncGroup();

      setTimeout(function () {
        _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this22, 'TEB_HISTROYDATA_SYNCCOMPLETED');
      }, 200);
    });
  });
};
/**
 * 修正数据（保护逻辑）
 */


Store.prototype.fixBoardData = function () {
  var _this23 = this;

  try {
    // -------------------  修正文件被删除了，还有涂鸦的情况   ----------------------
    var gids = [];
    this.getGroup().forEach(function (item) {
      gids.push(item.fid);
    });
    var errorIndexs = [];
    this.boardList.forEach(function (board, index) {
      // 如果白板ID不在gids里面，则说明该文件被删了，需要把该白板删掉
      var fid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(board);

      if (fid != _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP && gids.indexOf(fid) === -1) {
        errorIndexs.push(index);
        delete _this23.userData[board];
        delete _this23.data[board];
        delete _this23.opData[board];
        delete _this23.opIndex[board];
        delete _this23.backgroundPic[board];
        delete _this23.backgroundColor[board];
      }
    });
    errorIndexs.sort(function (item1, item2) {
      return item2 - item1;
    });
    errorIndexs.forEach(function (errorIndex) {
      _this23.boardList.splice(errorIndex, 1);
    }); // -------------------  修正文件被删除了，还有涂鸦的情况   ----------------------
  } catch (error) {}
};
/**
 * 对白板进行排序
 */


Store.prototype.sortBoard = function () {
  this.boardList = this.boardList.sort(function (item1, item2) {
    var timestamp1 = item1 === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD ? 0 : item1.match(/\d+_\d+_#\w+$/)[0].split('_')[0];
    var timestamp2 = item2 === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD ? 0 : item2.match(/\d+_\d+_#\w+$/)[0].split('_')[0]; // 先比较timestamp，再比较seq

    if (timestamp1 != timestamp2) {
      return timestamp1 - timestamp2;
    } else {
      var seq1 = item1 === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD ? 0 : item1.match(/\d+_#\w+$/)[0].split('_')[0];
      var seq2 = item2 === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD ? 0 : item2.match(/\d+_#\w+$/)[0].split('_')[0];
      return seq1 - seq2;
    }
  });
};
/**
 * 拉回历史数据后，设置最大的白板索引seq
 */


Store.prototype.syncBoardSeq = function () {
  if (this.boardList.length == 1 && this.boardList[0] === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_DEFAULT_BOARD) {
    this.boardIdSeq = 1;
  } else {
    if (this.boardList[this.boardList.length - 1]) {
      this.boardIdSeq = this.boardList[this.boardList.length - 1].match(/\d+_#\w+$/)[0].split('_')[0] * 1 + 1;
    }
  }
};

Store.prototype.sortGroup = function () {
  this.groups = this.groups.sort(function (item1, item2) {
    if (item1.fid === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
      return -1;
    } else if (item2.fid === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
      return 1;
    } else {
      return item1.fid.replace(/\D*/, '') * 1 - item2.fid.replace(/\D*/, '') * 1;
    }
  });
};
/**
 * 接收数据
 * @param {*} data
 */


Store.prototype.addData = function (data) {
  var _this24 = this;

  // 白名单鉴权
  if (!this.permissions) {
    return;
  }

  if (Object.prototype.toString.call(data) === '[object String]') {
    try {
      data = JSON.parse(data);
    } catch (error) {
      _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_WARNING', _model_TEduBoardWarningCode__WEBPACK_IMPORTED_MODULE_31__["default"].TEDU_BOARD_WARNING_SYNC_DATA_PARSE_FAILED, error.message + ', ' + data);
    }
  } // 上报接收到的数据


  _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('addData', {
    extra_info: JSON.stringify(data)
  });
  var user = data.value.operator;
  var actions = data.value.actions;
  var boardId = data.value.boardId;

  if (!this.userData[boardId]) {
    this.addBoard(boardId, false);
  }

  if (!this.userData[boardId][user]) {
    this.userData[boardId][user] = [];
  }

  var length = this.userData[boardId][user].length;
  actions.forEach(function (action) {
    action.color && (action.color = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].dealColor(action.color));
    var line;

    if (action.action == 1) {
      line = _this24.findLine(boardId, user, action); // 找到这条线了，这种情况是action = 2 || 3 先收到的情况

      if (line) {
        line.color = action.color;
        line.thin = action.thin;
        line.show = true;
        line.lines.push({
          x: action.x,
          y: action.y,
          belongSeq: action.belongSeq,
          seq: action.seq
        });
        line.sort();
        line.setBorder(action.x, action.y);
      } else {
        // 找不到这条线, 就新增
        // 开始画线
        line = new _Line__WEBPACK_IMPORTED_MODULE_21__["default"](user, action);
        line.show = true;

        _this24.userData[boardId][user].push(line);

        _this24.data[boardId].push(line);
      }

      if (line.endSeq !== 0) {
        // 已收到线条结束部分，平滑曲线
        if (_this24.smoothLevel > 0) {
          var pts = [];
          line.lines.forEach(function (pt) {
            pts.push([pt.x, pt.y]);
          });
          line.fitCurve = Object(_util_FitCurve__WEBPACK_IMPORTED_MODULE_34__["default"])(pts, _this24.smoothLevel * 10000, null);
        }
      }
    } else if (action.action == 2 || action.action == 3) {
      line = _this24.findLine(boardId, user, action);

      if (line) {
        // 找到了这条线，说明消息action=1先到
        line.lines.push({
          x: action.x,
          y: action.y,
          belongSeq: action.belongSeq,
          seq: action.seq
        });
        line.sort();
        line.setBorder(action.x, action.y);
      } else {
        // 没找着，则说明action=1还没有到
        // 开始画线
        line = new _Line__WEBPACK_IMPORTED_MODULE_21__["default"](user, action);

        _this24.userData[boardId][user].push(line);

        _this24.data[boardId].push(line);
      }

      if (action.action == 3) {
        line.endSeq = action.seq;

        (function (item, boardId) {
          setTimeout(function () {
            // 如果这俩丢了，则认为action=1丢了
            if (!item.color || !item.thin) {
              _this24.request.getLineData({
                "boardId": boardId,
                "owner": item.user,
                "seq": item.belongSeq
              }, function (res) {
                if (!res.error_code) {
                  // 如果成功了
                  _this24.addHistory([{
                    content: res.content,
                    type: res.type
                  }]); // 排序一次


                  _this24.sortBoard(); // 设置最大的seq


                  _this24.syncBoardSeq();
                }
              });
            }
          }, 500);
        })(line, boardId);
      }

      if (line.endSeq !== 0) {
        // 已收到线条结束部分，平滑曲线
        if (_this24.smoothLevel > 0) {
          var _pts = [];
          line.lines.forEach(function (pt) {
            _pts.push([pt.x, pt.y]);
          });
          line.fitCurve = Object(_util_FitCurve__WEBPACK_IMPORTED_MODULE_34__["default"])(_pts, _this24.smoothLevel * 10000, null);
        }
      }
    } else if (action.action == 6) {
      // 激光笔先放一放
      // 先将原来的激光笔隐藏
      _this24.userData[boardId][user].forEach(function (item) {
        if (item.type == "raser") {
          item.status = 0;
        }
      });

      var raser = new _Raser__WEBPACK_IMPORTED_MODULE_25__["default"](_this24.identifier, {
        color: action.color,
        radius: action.r,
        x: action.x,
        y: action.y,
        seq: _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq()
      });

      _this24.userData[boardId][user].push(raser);

      _this24.data[boardId].push(raser);
    } else if (action.action == 7) {
      // 激光笔先放一放
      // 激光笔隐藏
      _this24.userData[boardId][user].forEach(function (item) {
        if (item.type == "raser") {
          item.status = 0;
        }
      });
    } else if (action.action == 8) {
      // 要修改线的状态
      if (!action.lines) return;
      action.lines.forEach(function (line) {
        for (var i = 0; i < _this24.userData[boardId][line.uid].length; i++) {
          var item = _this24.userData[boardId][line.uid][i];

          if (item.type == 'line' && item.startSeq == line.seq) {
            item.show = action.display ? true : false;
          } else if (item.type == 'graph' && item.startPoint.seq == line.seq) {
            item.show = action.display ? true : false;
          } else if (item.type == 'inputtext' && item.belongSeq == line.seq) {
            //接受IM消息是否撤销
            item.show = action.display ? true : false;
          }
        }
      });
    } else if (action.action == 9) {
      if (!action.moves) return;
      action.moves.forEach(function (move) {
        for (var i = 0; i < _this24.userData[boardId][move.uid].length; i++) {
          var item = _this24.userData[boardId][move.uid][i];
          var movex = 0,
              movey = 0;

          if (item.type == 'line' && item.startSeq == move.seq) {
            // 移动这条线
            movex = move.x - item.lines[0].x;
            movey = move.y - item.lines[0].y;
            item.border.maxX += movex;
            item.border.minX += movex;
            item.border.maxY += movey;
            item.border.minY += movey;
            item.lines.forEach(function (line) {
              line.x += movex;
              line.y += movey;
            });

            if (item.fitCurve.length !== 0) {
              item.fitCurve.forEach(function (curve) {
                curve[1][0] += movex;
                curve[1][1] += movey;
                curve[2][0] += movex;
                curve[2][1] += movey;
                curve[3][0] += movex;
                curve[3][1] += movey;
              });
            }
          } else if (item.type == 'graph' && item.startPoint.seq == move.seq) {
            // 移动graph
            movex = move.x - item.startPoint.x;
            movey = move.y - item.startPoint.y;
            item.startPoint.x += movex;
            item.startPoint.y += movey;
            item.endPoint.x += movex;
            item.endPoint.y += movey; // 移动的是文字涂鸦
          } else if (item.type == 'inputtext' && item.belongSeq == move.seq) {
            item.location.x = move.x;
            item.location.y = move.y;
          }
        }
      });
    } else if (action.action == 10 || action.action == 11 || action.action == 12) {
      // 这里不区分圆形和椭圆
      var list = {
        10: 'line',
        11: 'oval',
        12: 'rect'
      };
      action.graph = list[action.action];
      action.solid = action.fillRect ? true : false;
      action.show = true;
      var graph = new _Graph__WEBPACK_IMPORTED_MODULE_23__["default"](user, action);

      _this24.userData[boardId][user].push(graph);

      _this24.data[boardId].push(graph);

      length++;
    } else if (action.action == 13) {
      // 接收到文字输入
      if ((action.seq * 1 || 0) > _this24.maxSeq) {
        _this24.maxSeq = action.seq;
        var inputText = null;

        for (var i = 0; i < _this24.userData[boardId][user].length; i++) {
          var textObj = _this24.userData[boardId][user][i];

          if (textObj.belongSeq === action.belongSeq) {
            // 如果是同一个belongSeq
            if (action.seq > textObj.seq) {
              textObj.seq = action.seq;
            }

            inputText = textObj;
            break;
          }
        }

        if (!inputText) {
          inputText = new _InputText__WEBPACK_IMPORTED_MODULE_22__["default"](user, {
            x: action.x,
            y: action.y,
            belongSeq: action.belongSeq
          }); // inputText.seq = action.seq;

          inputText.color = action.color;
          inputText.scale = action.scale;
          inputText.typeFace = action.typeFace;
          inputText.textSize = action.textSize;
          inputText.fontStyle = action.fontStyle;
          inputText.time = action.time;
          inputText.text = action.text;

          _this24.userData[boardId][user].push(inputText);

          _this24.data[boardId].push(inputText);
        } else {
          inputText.text = action.text;
        }
      } else {
        _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('throw_seq', {
          extra_info: JSON.stringify({
            seq: action.seq,
            maxSeq: _this24.maxSeq,
            boardId: boardId,
            method: 'addData'
          })
        });
      }
    } else if (action.action == 101) {
      // 清空
      _this24.clearBoard(false);
    } else if (action.action == 102) {
      // 清空
      _this24.clearBoard(true);
    } else if (action.action == 103) {
      try {
        _this24.clearFileDrawData(action.fids);
      } catch (error) {}
    } else if (action.action == 104) {
      // // 重置白板数据
      _this24.resetData();
    } else if (action.action == _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.SET_BOARD_RATIO_ACTION) {
      // 设置分辨率
      _this24.setBoardRatio(boardId, action.ratio, false);
    } else if (action.action == 201) {
      // 更换背景图
      _this24.addBackgroundPic({
        boardIds: boardId,
        urls: action.url,
        type: action.type,
        needReport: false,
        position: action.mode
      });
    } else if (action.action == 202) {
      // 撤销背景图
      _this24.deleteBackgroundPic(boardId);
    } else if (action.action == 203) {
      action.color && (action.color = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].formatColor(action.color));

      if (action.isGlobal) {
        _this24.setGlobalBackgroundColor(action.color, true);
      } else {
        _this24.setBackgroundColor(action.color, true);
      }
    } else if (action.action == _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.BOARD_MOVE_SCALE_ACTION) {
      // 收到白板移动
      if ((action.seq * 1 || 0) > _this24.maxSeq) {
        _this24.maxSeq = action.seq;

        var dragData = _this24.dragDataList.getDragData(boardId);

        if (!dragData) {
          dragData = new _model_DragModel__WEBPACK_IMPORTED_MODULE_35__["default"]({
            scale: action.scale,
            xOffset: action.xOffset,
            yOffset: action.yOffset
          });

          _this24.dragDataList.addDragData(boardId, dragData);
        } else {
          _this24.dragDataList.updateDragData(boardId, {
            scale: action.scale,
            xOffset: action.xOffset,
            yOffset: action.yOffset
          });
        }
      } else {// 乱序，丢弃
      }
    } else if (action.action == 401) {
      _this24.resolveSwitchBoardAction(action);
    } else if (action.action == 501) {
      // 添加文件
      _this24.resolveAddFileAction(action.file);
    }
  });
  this.setNeedDraw(true);
};
/**
 * 解析401协议
 */


Store.prototype.resolveSwitchBoardAction = function (action) {
  var _this25 = this;

  var toBoardId = action.toBoardId;
  var fids = [];
  var deleteBoards = [];

  if ((action.seq * 1 || 0) > this.maxSeq) {
    this.maxSeq = action.seq;
    fids = action.deleteFiles || [];
    deleteBoards = action.deleteBoards || []; // 要删除的文件ids

    fids.forEach(function (fid) {
      _this25.deleteGroup(fid, false); // 不上报


      deleteBoards = deleteBoards.concat(_this25.getBoardByGroup(fid));
    });
    deleteBoards.forEach(function (deleteBoardId) {
      _this25.removeBoard(deleteBoardId);
    });

    if (!this.data[toBoardId]) {
      this.addBoard(toBoardId, false);
    }

    this.currentBoard = toBoardId;
    var toFid = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(toBoardId);
    this.currentGroup = toFid;
    var slideIndex = Math.max(action.page, 0);
    var stepIndex = Math.max(action.step, 0);
    var info = this.getFileInfo(toFid);

    if (!info) {
      this.request.getFileInfo({
        fid: toFid
      }, function (res) {
        if (res && res.error_code == 0) {
          info = JSON.parse(res.content);

          _this25.resolveAddFileAction(info);

          _this25.setNeedDraw(true);

          setTimeout(function () {
            if (info.type === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5) {
              _H5Control__WEBPACK_IMPORTED_MODULE_29__["default"].gotoTimestampNew(_this25.iframeDom, {
                slideIndex: slideIndex,
                stepIndex: stepIndex,
                isPassive: true // 被动翻页（接收）

              });
            }

            _this25.updateFileInfo({
              fid: toFid,
              pageCount: _this25.getBoardByGroup(toFid).length,
              currentPageIndex: slideIndex || 0,
              currentPageStep: stepIndex || 0
            });

            _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(_this25, 'TEB_GOTOBOARD', toBoardId, _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(toBoardId));
          }, 200);
        } else {// TODO 获取文件信息失败
        }
      }, function (error) {// TODO 获取文件信息失败
      });
    } else {
      if (info.type === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5) {
        _H5Control__WEBPACK_IMPORTED_MODULE_29__["default"].gotoTimestampNew(this.iframeDom, {
          slideIndex: slideIndex,
          stepIndex: stepIndex,
          isPassive: true // 被动翻页（接收）

        });
      }

      this.updateFileInfo({
        fid: toFid,
        pageCount: this.getBoardByGroup(toFid).length,
        currentPageIndex: slideIndex || 0,
        currentPageStep: stepIndex || 0
      });
      _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_GOTOBOARD', toBoardId, _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].boardId2Fid(toBoardId));
    }
  } else {
    // seq小于maxSeq的说明是消息乱序收到的，直接丢弃，如果有要删除的白板和文件还是要正常删除
    console.log('=== 401 乱序 seq:', action.seq);
    fids = action.deleteFiles || [];
    deleteBoards = action.deleteBoards || []; // 要删除的文件ids

    fids.forEach(function (fid) {
      _this25.deleteGroup(fid, false); // 不上报


      deleteBoards = deleteBoards.concat(_this25.getBoardByGroup(fid));
    });
    deleteBoards.forEach(function (deleteBoardId) {
      _this25.removeBoard(deleteBoardId);
    });
    _net_ELKLog__WEBPACK_IMPORTED_MODULE_28__["default"].report('throw_seq', {
      extra_info: JSON.stringify({
        seq: action.seq,
        maxSeq: this.maxSeq,
        boardId: toBoardId,
        method: 'addData'
      })
    });
  }
};
/**
 * 解析501
 */


Store.prototype.resolveAddFileAction = function (file) {
  var bid = null;
  var ids = []; // 如果是H5

  if (file.type === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5) {
    ids = []; // 生成白板ID

    for (var i = 0; i < file.pageCount; i++) {
      bid = "".concat(file.platform, "_").concat(file.uid, "_").concat(file.timestamp, "_").concat(i + 1, "_").concat(file.fid);
      ids.push(bid);
    }

    this.addBoard(ids, false);
    this.addGroupNotReport(file.fid, file.title, file.uid, file.downloadURL, file.pageCount, 0, file.timestamp, file.platform, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5, 0, file.ratio, file.scale);
  } else {
    var previewBaseUrl = file.downloadURL.replace(/cos\..*\.myqcloud/ig, 'preview.myqcloud');
    ids = [];
    var urls = []; // 生成白板ID

    for (var j = 0; j < file.pageCount; j++) {
      bid = "".concat(file.platform, "_").concat(file.uid, "_").concat(file.timestamp, "_").concat(j + 1, "_").concat(file.fid);
      ids.push(bid);
      urls.push(previewBaseUrl + '?cmd=doc_preview&of=pic&page=' + (j + 1));
    }

    this.addBoard(ids, false);
    this.addBackgroundPic({
      boardIds: ids,
      urls: urls,
      type: _config_Constant__WEBPACK_IMPORTED_MODULE_16__["default"].BACKGROUND_TYPE.IMAGE,
      needReport: false
    });
    this.addGroupNotReport(file.fid, file.title, file.uid, file.downloadURL, file.pageCount, 0, file.timestamp, file.platform, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMAGE, 0, file.ratio, file.scale);
  }
};
/**
 * @method addFile
 * @param {Array} urls 图片的url
 * @param {String} title  文件名
 * @param {String} downloadUrl  文件的对应下载地址
 * @returns {String} 文件id，空表示没有成功
 */


Store.prototype.addFile = function (urls, title, downloadUrl, ratio) {
  if (!Array.isArray(urls)) {
    return;
  }

  var fid = "#".concat(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp());
  var boards = [];
  var timestamp = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getSecondTime();
  boards = this.createBoardIdForFile(fid, this.user, timestamp, urls.length, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM) || []; // 白板宽高比例

  var ratioWidthHeight, ratioWidth, ratioHeight; // 以文件的比例为

  if (this.boardContentFitMode === 2 || this.boardContentFitMode === 1) {
    ratioWidthHeight = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].calcRatioWidthHeight(ratio, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].RATIO);
  } else {
    // 以默认的宽高
    ratioWidthHeight = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].calcRatioWidthHeight(this.ratio, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].RATIO);
  }

  ratioWidth = ratioWidthHeight.ratioWidth;
  ratioHeight = ratioWidthHeight.ratioHeight; // 实际的宽高比

  ratio = ratioWidth + ':' + ratioHeight; // 以当前的fitmode为基准，算出当前的宽高比

  var scale;

  if (this.boardContentFitMode === 2) {
    // // 自动调整白板宽高比与文件一致，文件铺满白板，白板等比例缩放居中显示，白板宽高>=容器宽高
    var scaleX = this.containerWidth / ratioWidth;
    var scaleY = this.containerHeight / ratioHeight;
    var minScale = Math.min(scaleX, scaleY);
    var maxScale = Math.max(scaleX, scaleY);
    scale = maxScale / minScale * 100;
  } else if (this.boardContentFitMode === 1) {
    scale = 100;
  } else {
    scale = 100;
  }

  this.addGroup(fid, title, this.user, downloadUrl, urls.length, 0, timestamp, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG, 0, ratio, scale);
  this.addBoard(boards);
  this.addBackgroundPic({
    boardIds: boards,
    urls: urls
  });
  var actionData = {
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ADD_FILE_ACTION,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "file": {
      fid: fid,
      title: title,
      downloadURL: downloadUrl,
      pageCount: urls.length,
      uid: this.identifier,
      timestamp: timestamp,
      platform: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM,
      type: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.IMG,
      ratio: ratio,
      scale: scale
    }
  };
  this.realTimeData.push(actionData);

  if (boards.length) {
    this.switchFile(fid);
  }

  return fid;
};
/**
 * @method addFile
 * @param {Array} url 图片的url
 * @param {String} title  文件名
 * @param {String} downloadUrl  文件的对应下载地址
 * @returns {String} 文件id，空表示没有成功
 */


Store.prototype.addH5PPTFile = function (url, title, count, width, height) {
  var isExistUrl = false;
  var groups = this.getGroup() || [];

  for (var i = 0, len = groups.length; i < len; i++) {
    if (groups[i].downloadURL == url) {
      isExistUrl = true;
      break;
    }
  }

  if (isExistUrl) {
    return;
  }

  var fid = "#".concat(_util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp());
  var boards = [];
  var timestamp = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getSecondTime();
  boards = this.createBoardIdForFile(fid, this.user, timestamp, count, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM) || [];
  var ratio = null;

  if (width && height) {
    // 求最大公约数
    var number = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].maxCommonDivisor(width, height);
    ratio = width / number + ':' + height / number;
  } else {
    ratio = this.ratio;
  } // 白板宽高比例


  var ratioWidthHeight, ratioWidth, ratioHeight; // 以文件的比例为

  if (this.boardContentFitMode === 2 || this.boardContentFitMode === 1) {
    ratioWidthHeight = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].calcRatioWidthHeight(ratio, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].RATIO);
  } else {
    // 以默认的宽高
    ratioWidthHeight = _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].calcRatioWidthHeight(this.ratio, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].RATIO);
  }

  ratioWidth = ratioWidthHeight.ratioWidth;
  ratioHeight = ratioWidthHeight.ratioHeight; // 实际的宽高比

  ratio = ratioWidth + ':' + ratioHeight; // 以当前的fitmode为基准，算出当前的宽高比

  var scale;

  if (this.boardContentFitMode === 2) {
    // // 自动调整白板宽高比与文件一致，文件铺满白板，白板等比例缩放居中显示，白板宽高>=容器宽高
    var scaleX = this.containerWidth / ratioWidth;
    var scaleY = this.containerHeight / ratioHeight;
    var minScale = Math.min(scaleX, scaleY);
    var maxScale = Math.max(scaleX, scaleY);
    scale = maxScale / minScale * 100;
  } else if (this.boardContentFitMode === 1) {
    scale = 100;
  } else {
    scale = 100;
  }

  this.addGroup(fid, title, this.user, url, count, 0, timestamp, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM, _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5, 0, ratio, scale);
  this.addBoard(boards); // 发送增加文件

  var actionData = {
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.ADD_FILE_ACTION,
    "time": _util_util__WEBPACK_IMPORTED_MODULE_17__["default"].getTimeStamp(),
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "file": {
      fid: fid,
      title: title,
      downloadURL: url,
      pageCount: count,
      uid: this.identifier,
      timestamp: timestamp,
      platform: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PLATFORM,
      type: _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].FILE_TYPE.H5,
      ratio: ratio,
      scale: scale
    }
  };
  this.realTimeData.push(actionData);

  if (boards.length) {
    this.switchFile(fid);
  }

  return fid;
};
/**
 * 删除文件
 * @param {String} fid/groupid
 * @returns {Boolean} 删除文件是否成功
 */


Store.prototype.deleteFile = function () {
  var fid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getCurrentFile();

  if (fid === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
    return false;
  } // 删除文件分组, 并返回文件下的白板


  var boards = this.deleteGroup(fid);
  _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_DELETEFILE', fid);
  this.switchFile(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP);

  if (boards && boards.length) {
    this.deleteBoard(boards, fid);
    return true;
  } else {
    return false;
  }
}; // 切换file


Store.prototype.switchFile = function (fid) {
  var isExist = false; // 是否已经存在

  for (var i = 0, len = this.groups.length; i < len; i++) {
    var group = this.groups[i];

    if (group.fid == fid) {
      isExist = true;
      break;
    }
  }

  if (isExist) {
    // 如果已经存在了
    this.currentGroup = fid;
    var file = this.getFileInfo(fid); // TODO 默认组翻页->切换到其他文件，然后刷新，重新进入，再切换会默认组，

    var pageIndex = Math.max(0, file.currentPageIndex);
    var boardId = this.getBoardByGroup(fid)[pageIndex];
    _Event__WEBPACK_IMPORTED_MODULE_19__["default"].fire(this, 'TEB_SWITCHFILE', fid);
    this.switchBoard(boardId);
    return fid;
  } else {
    console.log('不存在该白板组');
    return false;
  }
};

Store.prototype.setBoardSize = function (width, height) {
  this.boardWidth = width;
  this.boardHeight = height;
}; // 白板容器尺寸（参数id所在节点的宽高）


Store.prototype.setContainerSize = function (width, height) {
  this.containerWidth = width;
  this.containerHeight = height;
};

Store.prototype.setCanvasContext = function (ctx) {
  this.ctx = ctx;
};

Store.prototype.setIframeDom = function (iframeDom) {
  this.iframeDom = iframeDom;
};
/**
 * 设置分辨率
 */


Store.prototype.setBoardRatio = function (boardId, ratio) {
  var needReport = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  this.boardRatio[boardId] = ratio;
  var ratioData = {};
  ratioData[boardId] = ratio;
  needReport && this.realTimeData.push({
    "action": _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].PROTOCOL_ACTION.SET_BOARD_RATIO_ACTION,
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_18__["default"].getSeq(),
    "ratio": ratio
  });
  needReport && this.report.reportsetBoardRatio(ratioData);
};
/**
 * 获取白板的宽高比
 */


Store.prototype.getBoardRatio = function () {
  if (this.getCurrentFile() === _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].COMMON_GROUP) {
    return this.boardRatio[this.currentBoard] || this.ratio;
  } else {
    var boardRatio = this.boardRatio[this.currentBoard];

    if (boardRatio) {
      return boardRatio;
    } else {
      var fileInfo = this.getFileInfo(this.getCurrentFile());

      if (fileInfo && fileInfo.ratio) {
        return fileInfo.ratio;
      } else {
        return this.ratio;
      }
    }
  }
};
/**
 * @params {Object} options
 */


Store.prototype.addDragData = function (boardId, options) {
  var dragData = new _model_DragModel__WEBPACK_IMPORTED_MODULE_35__["default"](options);
  this.dragDataList.addDragData(boardId, dragData);
};

Store.prototype.getDragData = function () {
  return this.dragDataList.getDragData(this.currentBoard);
};

Store.prototype.setBoardScale = function (scale) {
  if (!scale) {
    scale = _config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].SCALE;
  }

  scale = Math.max(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].MIN_SCALE, Math.min(_config_Config__WEBPACK_IMPORTED_MODULE_15__["default"].MAX_SCALE, scale));
  var dragData = this.dragDataList.getDragData(this.currentBoard);

  if (dragData) {
    // 拖拽数据
    this.dragDataList.updateDragData(this.currentBoard, {
      scale: scale // 缩放比

    });
  } else {
    dragData = new _model_DragModel__WEBPACK_IMPORTED_MODULE_35__["default"]({
      scale: scale,
      // 缩放比
      xOffset: 50,
      yOffset: 50
    });
    this.dragDataList.addDragData(this.currentBoard, dragData);
  }

  this.realTimeData.push(dragData.getRealTimeData()); // 结束后就上报

  this.report.reportDrag(Object.assign(dragData.getReportData(), {
    boardId: this.currentBoard
  }));
  this.setNeedDraw(true);
};

Store.prototype.getBoardScale = function () {
  var scale;
  var dragData = this.dragDataList.getDragData(this.currentBoard);

  if (dragData) {
    scale = dragData.scale;
  } else {
    var fileInfo = this.getFileInfo(this.getCurrentFile());

    if (fileInfo) {
      scale = fileInfo.scale;
    }

    if (!scale) {
      scale = this.scale;
    }
  }

  return scale;
};

Store.prototype.setBoardContentFitMode = function (mode) {
  this.boardContentFitMode = mode || _model_TEduBoardContentFitMode__WEBPACK_IMPORTED_MODULE_33__["default"].TEDU_BOARD_FILE_FIT_MODE_NONE;
};

Store.prototype.getBoardContentFitMode = function () {
  return this.boardContentFitMode || _model_TEduBoardContentFitMode__WEBPACK_IMPORTED_MODULE_33__["default"].TEDU_BOARD_FILE_FIT_MODE_NONE;
};
/**
 * 更新文件信息
 */


Store.prototype.updateFileInfo = function (file) {
  var fid = file.fid;
  var isExist = false; // 文件不存在

  for (var i = 0, len = this.groups.length; i < len; i++) {
    var group = this.groups[i];

    if (group.fid == fid) {
      group.title = group.title || file.title;
      group.pageCount = file.pageCount;
      group.currentPageIndex = typeof file.currentPageIndex === 'undefined' ? group.currentPageIndex : file.currentPageIndex;
      group.currentPageStep = typeof file.currentPageStep === 'undefined' ? group.currentPageStep : file.currentPageStep;
      group.downloadURL = group.downloadURL || file.downloadURL;
      group.uid = group.uid || file.uid;
      group.timestamp = group.timestamp || file.timestamp;
      group.ratio = file.ratio || group.ratio;
      group.scale = file.scale || group.scale;
      isExist = true;
      break;
    }
  }

  if (!isExist) {
    // 文件不存在
    this.groups.push({
      fid: file.fid,
      title: file.title,
      pageCount: file.pageCount,
      currentPageIndex: file.currentPageIndex || 0,
      currentPageStep: file.currentPageStep || 0,
      downloadURL: file.downloadURL,
      uid: file.uid,
      timestamp: file.timestamp,
      type: file.type || 0,
      ratio: file.ratio || 0,
      scale: file.scale
    });
  }
};
/**
 *  判断H5PPTURL是否被加载过
 */


Store.prototype.isExistH5PPTUrl = function (url) {
  var isExistUrl = false;
  var groups = this.getGroup() || [];

  for (var i = 0, len = groups.length; i < len; i++) {
    if (groups[i].downloadURL == url) {
      isExistUrl = true;
      break;
    }
  }

  return isExistUrl;
};
/**
 *  根据url获取H5PPT文件信息
 */


Store.prototype.getH5PPTByUrl = function (url) {
  var fileInfo = {};
  var groups = this.getGroup() || [];

  for (var i = 0, len = groups.length; i < len; i++) {
    if (groups[i].downloadURL == url) {
      fileInfo = groups[i];
      break;
    }
  }

  return fileInfo;
};

/* harmony default export */ __webpack_exports__["default"] = (Store);

/***/ }),

/***/ "./src/config/Config.js":
/*!******************************!*\
  !*** ./src/config/Config.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Config() {
  this.VERSION = '2.2.1';
  this.REPORT_VERSION = this.VERSION + '_20190621_1714_c70b838'; //nativeVersion

  this.NATIVEVERSION = 'web'; // 平台

  this.PLATFORM = 'web'; // 上报数据的服务器接口

  this.SERVER_URL = 'https://yun.tim.qq.com/v4/ilvb_edu/whiteboard?sdkappid='; // 测试环境

  this.TEST_SERVER_URL = 'https://yun.tim.qq.com/v4/ilvb_test/whiteboard?sdkappid='; // COS 服务 URL

  this.COS_SERVER_URL = 'https://cloud.tim.qq.com/v4/ilvb_cos/cos'; // COS 测试服务 URL

  this.TEST_COS_SERVER_URL = 'https://cloud-test.tim.qq.com/v4/ilvb_cos_test/cos'; // 白名单 服务 URL

  this.WHITELIST_SERVER_URL = 'https://yun.tim.qq.com/v4/ilvb_edu/whitelist?sdkappid='; // 白名单 测试服务 URL

  this.TEST_WHITELIST_SERVER_URL = 'https://yun.tim.qq.com/v4/ilvb_test/whitelist?sdkappid=';
  this.SUB_CMD = {
    // 从服务器获取白板数据
    GET_BOARD_DATA: 'get_board_data',
    // 白板数据同步到服务器
    REPORT_BOARD_DATA: 'report_board_data'
  }; // 是否显示资源加载进度条

  this.PROGRESS_ENABLE = false; // 资源加载进度条延迟显示时间

  this.PROGRESS_SHOW_DELAY = 100; // 普通白板所属分组

  this.COMMON_GROUP = '#DEFAULT'; // 普通白板默认的白板名

  this.COMMON_DEFAULT_BOARD = '#DEFAULT';
  this.SCALE = 100; // 缩放比 （实际值要除以100）

  this.MAX_SCALE = 1600; // 最大缩放比 （实际值要除以100）

  this.MIN_SCALE = 100; // 最小缩放比 （实际值要除以100）

  this.RATIO = '16:9'; // 默认分辨率
  // 线条的粗细值

  this.THIN = 100; // 涂鸦的平滑级别

  this.SMOOTH_LEVEL = 0.1; // 允许绘制的最小线宽（单位px）

  this.MIN_LINE_WIDTH = 1; // 文字输入最大长度

  this.TEXT_MAX_LENGTH = 140; // 文本输入大小

  this.TEXT_SIZE = 320; // 文字输入颜色

  this.TEXT_COLOR = 0; // 文字输入字体

  this.TEXT_FONT_FAMILY = 'sans-serif,serif,monospace'; // 数据同步开关

  this.DATA_SYNC_ENABLE = true; // 预加载深度

  this.PRELOAD_DEPTH = 5; // 文字样式 0：常规；1：粗体；2.斜体；3.粗斜体，默认填 0；

  this.TEXT_FONT_STYLE = {
    NORMAL: 0,
    BOLD: 1,
    ITALIC: 2,
    BOLD_ITALIC: 3
  }; // 文件类型

  this.FILE_TYPE = {
    IMG: 0,
    // 转IMG方案
    H5: 1 // 转H5方案

  }; // 协议上的事件

  this.PROTOCOL_ACTION = {
    LINE_START_ACTION: 1,
    // 画线的开始action
    LINE_MOVE_ACTION: 2,
    // 画线的移动action
    LINE_END_ACTION: 3,
    // 画线的结束action
    RASER_SHOW_ACTION: 6,
    // 激光笔显示action
    RASER_HIDE_ACTION: 7,
    // 激光笔隐藏action
    ERASER_ACTION: 8,
    // 线条显示隐藏的action
    MOVE_LINE_GRAPH_ACTION: 9,
    // 移动线条，图形的action
    GRAPH_LINE_ACTION: 10,
    // 新增直线的action
    GRAPH_CIRCLE_ACTION: 11,
    // 新增圆形的action
    GRAPH_RECT_ACTION: 12,
    // 新增矩形的action
    INPUT_TEXT_ACTION: 13,
    //新增文字输入action
    GRAPH_CLEAR_ALL_ACTION: 101,
    // 清空当前白板所有涂鸦+背景图+背景色
    GRAPH_CLEAR_ACTION: 102,
    // 清空当前白板所有涂鸦，保留背景图（背景色）
    FILE_CLEAR_ACTION: 103,
    // 清空fid对应文件白板上的所有涂鸦
    RESET_DATA_ACTION: 104,
    // 重置白板数据
    SET_BOARD_RATIO_ACTION: 105,
    // 设置白板分辨率
    SET_BOARD_FIT_MODE_ACTION: 106,
    // 设置白板内容填充方式
    UPDATE_BG_IMG_ACTION: 201,
    // 更新当前白板背景图
    DELETE_BG_IMG_ACTION: 202,
    // 删除当前白板背景图
    UPDATE_BG_COLOR_ACTION: 203,
    // 设置白板的背景颜色
    BOARD_MOVE_SCALE_ACTION: 301,
    // 白板位置，缩放操作
    SWITCH_ACTION: 401,
    // 白板操作，如删除白板，切换白板
    ADD_FILE_ACTION: 501 // 新增文件

  };
}

Config.prototype.setPlatform = function (platform) {
  this.PLATFORM = platform;
};

Config.prototype.setNativeVersion = function (nativeVersion) {
  this.NATIVEVERSION = nativeVersion;
};

/* harmony default export */ __webpack_exports__["default"] = (new Config());

/***/ }),

/***/ "./src/config/Constant.js":
/*!********************************!*\
  !*** ./src/config/Constant.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  // 白板操作类型
  BOARD_ACTION_TYPE: {
    'LINE': 'line',
    // 随便画线
    'ERASER': 'eraser',
    // 橡皮擦
    'RASER': 'raser',
    // 激光笔
    'POINTSELECT': 'pointselect',
    // 点选
    'SELECT': 'select',
    // 框选
    'MOVE': 'move',
    // 拖拽
    'GRAPH-LINE': 'graph-line',
    // 直线
    'GRAPH-CIRCLE': 'graph-circle',
    // 空心圆
    'GRAPH-RECT': 'graph-rect',
    // 空心矩形
    'GRAPH-OVAL': 'graph-oval',
    // 空心椭圆
    'GRAPH-CIRCLE-SOLID': 'graph-circle-solid',
    // 实心圆
    'GRAPH-RECT-SOLID': 'graph-rect-solid',
    // 实心矩形
    'GRAPH-OVAL-SOLID': 'graph-oval-solid',
    // 实心椭圆
    'INPUTTEXT': 'inputtext',
    //文字输入
    'MOUSE': "mouse",
    // 鼠标模式
    'ZOOM': 'zoom' // 缩放

  },
  // 白板模式
  BOARD_MODE: {
    BOARD: 0,
    // 纯白板模式
    FILE: 1 // 文件模式

  },
  // 背景类型，图片/H5
  BACKGROUND_TYPE: {
    IMAGE: 0,
    // 图片
    H5: 1 // H5

  },
  FILL_MODE: {
    DEFAULT: 0,
    // 默认自动缩放至最佳显示
    LEFT: 4,
    // 居左
    TOP: 5,
    // 居上
    RIGHT: 6,
    // 居右
    BOTTOM: 7 // 居底

  },
  COLOR: {
    RED: 4278190335,
    WHITE: 4294967295
  },
  EVENT: {
    // 同步历史数据完成
    HISTROY_DATA_COMPLETE: 'histroy_data_complete',
    // 增加白板
    ADD_BOARD: 'add_board',
    // 白板实时数据
    RT_DATA: 'real_time_data',
    // 白板实时数据
    REAL_TIME_DATA: 'real_time_data',
    // 接收到白板数据异常
    ADD_DATA_ERROR: 'add_data_error',
    // 删除白板
    DELETE_BOARD: 'delete_board',
    // 切换白板
    SWITCH_BOARD: 'switch_board',
    // 增加分组
    ADD_FILE: 'add_group',
    // 新增了H5PPT文件
    ADD_H5PPT_FILE: 'add_h5ppt_file',
    // 删除分组
    DELETE_FILE: 'delete_group',
    // 切换分组
    SWITCH_FILE: 'switch_group',
    // 图片开始加载
    IMG_START_LOAD: 'img_start_load',
    // 图片加载完成
    IMG_LOAD: 'img_load',
    // 图片加载错误
    IMG_ERROR: 'img_error',
    // 图片加载中断
    IMG_ABORT: 'img_abort',
    // 图片预加载事件（小程序独有）
    PRELOAD: 'preload',
    // 能否撤销
    BOARD_CAN_UNDO: 'board_can_undo',
    // 能否还原
    BOARD_CAN_REDO: 'board_can_redo',
    VERIFY_SDK_SUCC: 'verify_sdk_succ',
    VERIFY_SDK_ERROR: 'verify_sdk_error',
    CANVAS_MOUSEDOWN: 'canvas_mousedown',
    CANVAS_MOUSEMOVE: 'canvas_mousemove',
    CANVAS_MOUSEUP: 'canvas_mouseup',
    CANVAS_MOUSELEAVE: 'canvas_mouseleave',
    CANVAS_TOUCHSTART: 'canvas_touchstart',
    CANVAS_TOUCHMOVE: 'canvas_touchmove',
    CANVAS_TOUCHEND: 'CANVAS_touchend',
    CANVAS_TOUCHCANCEL: 'canvas_touchcancel',
    UPDATE_BACKGROUND_IMAGE_SUCCESS: 'update_background_image_success',
    UPDATE_BACKGROUND_IMAGE_ERROR: 'update_background_image_error',
    COS: {
      GET_SIGN_ERROR: 'get_sign_error',
      TASK_READY: 'task_ready',
      HASH_PROGRESS: 'hash_progress',
      PROGRESS: 'progress',
      GET_SIGN_SUCCESS: 'get_sign_success',
      DOES_NOT_SUPPORT_UPLOAD: 'does_not_support_upload',
      UPLOAD_SUCCESS: 'upload_success',
      UPLOAD_ERROR: 'upload_error'
    }
  }
});

/***/ }),

/***/ "./src/cos/FileCos.js":
/*!****************************!*\
  !*** ./src/cos/FileCos.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.typed.uint8-array */ "./node_modules/core-js/modules/es6.typed.uint8-array.js");
/* harmony import */ var core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.function.name */ "./node_modules/core-js/modules/es6.function.name.js");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _config_Constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../config/Constant */ "./src/config/Constant.js");
/* harmony import */ var _board_Event__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../board/Event */ "./src/board/Event.js");
/* harmony import */ var _net_Request__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../net/Request */ "./src/net/Request.js");
/* harmony import */ var _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../net/ELKLog */ "./src/net/ELKLog.js");
/* harmony import */ var js_md5__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! js-md5 */ "./node_modules/js-md5/src/md5.js");
/* harmony import */ var js_md5__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(js_md5__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _model_TEduBoardErrorCode__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../model/TEduBoardErrorCode */ "./src/model/TEduBoardErrorCode.js");
/* harmony import */ var _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../model/TEduBoardFileUploadStatus */ "./src/model/TEduBoardFileUploadStatus.js");


















function FileCos(options) {
  this.cos = null;
  this.options = options;
  this.options['cosData'] = options['cosData'] || {};
  this.options['cosData']['appid'] = options['cosData']['appid'] || 1257240443; // this.options['cosData']['bucket'] = options['cosData']['bucket'] || this.options.tlsData.sdkAppId;

  this.options['cosData']['bucket'] = options['cosData']['bucket'] || this.genBucket(this.options.tlsData.sdkAppId);
  this.options['cosData']['region'] = options['cosData']['region'] || 'ap-shanghai';
  this.options['cosData']['path'] = options['cosData']['path'] || '/TIC/WEB/';
  this.request = new _net_Request__WEBPACK_IMPORTED_MODULE_11__["default"](options);
  this.init(this.options);
  this.userDataKeyMap = {}; // userData和文件key映射关系
}

FileCos.prototype.init = function (config) {
  var _this = this;

  var COS = window.COS;

  if (!COS) {
    return;
  }

  this.cos = new COS({
    getAuthorization: function getAuthorization(options, callback) {
      // if (config.cosData.url) {
      //   axios.get(config.cosData.url).then((res) => {
      //     var data = res.data;
      //     if (data.Authorization) {
      //       callback({
      //         Authorization: data.Authorization,
      //         XCosSecurityToken: data.XCosSecurityToken
      //       });
      //     } else if (data.TmpSecretId) {
      //       callback({
      //         TmpSecretId: data.TmpSecretId,
      //         TmpSecretKey: data.TmpSecretKey,
      //         XCosSecurityToken: data.XCosSecurityToken,
      //         ExpiredTime: data.ExpiredTime
      //       });
      //     } else {
      //       event.fire(this, Constant.EVENT.COS.GET_SIGN_ERROR, data);
      //     }
      //   }).catch(error => {
      //     event.fire(this, Constant.EVENT.COS.GET_SIGN_ERROR, error);
      //   });
      // } else if (config.cosData.sign) {
      //   callback(config.cosData.sign);
      // } else { // 如果都没有配置，则用大账号cos
      //   this.request.getCosAuthData().then((res) => {
      //     try {
      //       if (res && res.data && res.data.error_code == 0) {
      //         var data = res.data;
      //         callback({
      //           TmpSecretId: data.tmp_secret_id,
      //           TmpSecretKey: data.tmp_secret_key,
      //           XCosSecurityToken: data.session_token,
      //           ExpiredTime: data.expired_time,
      //         });
      //       } else {
      //         event.fire(this, Constant.EVENT.COS.GET_SIGN_ERROR, res);
      //       }
      //     } catch (error) {
      //       event.fire(this, Constant.EVENT.COS.GET_SIGN_ERROR, error);
      //     }
      //   }).catch(error => {
      //     event.fire(this, Constant.EVENT.COS.GET_SIGN_ERROR, error);
      //   });
      // }
      var userData = _this.userDataKeyMap['/' + options.Query.prefix];

      _this.request.getCosAuthData().then(function (res) {
        try {
          if (res && res.data && res.data.error_code == 0) {
            var data = res.data;
            callback({
              TmpSecretId: data.tmp_secret_id,
              TmpSecretKey: data.tmp_secret_key,
              XCosSecurityToken: data.session_token,
              ExpiredTime: data.expired_time
            });
          } else {
            _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
              code: res.data.error_code,
              userData: userData,
              errorMsg: "get cos securitytoken fail, ".concat(res.data.error_msg)
            });
          }
        } catch (error) {
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
            code: -1,
            userData: userData,
            errorMsg: "get cos securitytoken fail"
          });
        }
      }).catch(function (error) {
        _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
          code: -2,
          userData: userData,
          errorMsg: "get cos securitytoken fail"
        });
      });
    }
  });
};

FileCos.prototype.uploadImgFile = function (file, succ) {
  var _this2 = this;

  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp();
  this.uploadCosFile(file).then(function (data) {
    var fileName = data.Key.substring(data.Key.indexOf('_') + 1);
    var fileUrl = "https://".concat(data.Location);
    var userData = data.userData;
    succ && succ(fileUrl);
    _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this2, 'TEB_SETBACKGROUNDIMAGE', fileName, fileUrl, userData);
    _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('cos_upload_file', {
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify({
        bucket: _this2.options.cosData.bucket,
        cos_appid: _this2.options.cosData.appid,
        region: _this2.options.cosData.region,
        data: data
      })
    });
  }).catch(function (err) {
    var userData = ''; // 透传字段

    if (Object.prototype.toString.call(file) === '[object File]') {
      userData = '';
    } else {
      userData = file.userData; // 透传字段
    }

    _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('cos_upload_file', {
      action_result: 1,
      action_info: JSON.stringify(err),
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify({
        bucket: _this2.options.cosData.bucket,
        cos_appid: _this2.options.cosData.appid,
        region: _this2.options.cosData.region,
        userData: userData
      })
    });
  });
};

FileCos.prototype.uploadFile = function (file, succ, fail) {
  var _this3 = this;

  var self = this;
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp();
  this.uploadCosFile(file).then(function (data) {
    // 如果是图片
    if (/\.(bmp|jpg|jpeg|png|gif|webp|svg|psd|ai)/i.test(data.Key)) {
      succ && succ(data.Key.substring(data.Key.indexOf('_') + 1), "https://".concat(data.Location), data.userData);
    } else {
      var startTime2 = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp();
      var retryCount = 0;

      var getDocTotalPage = function getDocTotalPage() {
        var _this4 = this;

        self.getDocTotalPage(data).then(function (res) {
          // 如果返回了总页数
          if (res.status === 200 && res.headers['user-returncode']) {
            var totalPage = res.headers['user-returncode'] * 1;
            var info = self.getFileUrl(data, totalPage);
            Object.assign(info, {
              code: 0,
              errorMsg: '',
              userData: data.userData
            });
            var imgBlob = window.URL.createObjectURL(res.data);
            self.getImgNaturalSize(imgBlob).then(function (_ref) {
              var width = _ref.width,
                  height = _ref.height;
              // 拿到宽高
              info.ratio = width + ':' + height;
              console.log(' 普调ppt 宽高:', width, height);
              succ && succ(totalPage, info);
              _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this4, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_SUCC, info);
            }, function () {
              // 拿不到宽高
              info.ratio = null;
              succ && succ(totalPage, info);
              _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this4, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_SUCC, info);
            });
            _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('get_file_total_page', {
              time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime,
              extra_info: JSON.stringify({
                extra_info: {
                  totalPage: totalPage,
                  info: info
                }
              })
            });
          } else {
            if (retryCount++ > 3) {
              fail && fail({
                userData: data.userData,
                statusCode: res.status,
                headers: res.headers
              });
              _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this4, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
                code: -4,
                userData: data.userData,
                errorMsg: 'failed to get the total number of pages'
              });
            } else {
              setTimeout(function () {
                getDocTotalPage();
              }, 1000);
            }

            _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('get_file_total_page', {
              action_result: 1,
              action_info: JSON.stringify(res),
              time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime2,
              extra_info: JSON.stringify({
                retryCount: retryCount
              })
            });
          }
        }).catch(function (err) {
          if (retryCount++ > 3) {
            // 2019/04/26 错误回调统一由事件抛出
            // fail && fail({
            //   userData: data.userData,
            //   statusCode: err.response.status,
            //   headers: err.response.headers
            // });
            _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this4, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
              code: -4,
              userData: data.userData,
              errorMsg: 'failed to get the total number of pages'
            });
          } else {
            setTimeout(function () {
              getDocTotalPage();
            }, 1000);
          }

          _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('get_file_total_page', {
            action_result: 1,
            action_info: JSON.stringify(err),
            time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime2,
            extra_info: JSON.stringify({
              retryCount: retryCount
            })
          });
        });
      };

      getDocTotalPage();
    }

    _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('cos_upload_file', {
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify({
        bucket: _this3.options.cosData.bucket,
        cos_appid: _this3.options.cosData.appid,
        region: _this3.options.cosData.region,
        data: data
      })
    });
  }).catch(function (err) {
    var userData = ''; // 透传字段

    if (Object.prototype.toString.call(file) === '[object File]') {
      userData = '';
    } else {
      userData = file.userData; // 透传字段
    } // 2019/04/26 错误回调统一由事件抛出
    // Object.assign(err, {
    //   userData: userData
    // });
    // fail && fail(err);


    _net_ELKLog__WEBPACK_IMPORTED_MODULE_12__["default"].report('cos_upload_file', {
      action_result: 1,
      action_info: JSON.stringify(err),
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify({
        bucket: _this3.options.cosData.bucket,
        cos_appid: _this3.options.cosData.appid,
        region: _this3.options.cosData.region,
        userData: userData
      })
    });
  });
};
/**
 * 上传文件到cos
 */


FileCos.prototype.uploadCosFile = function (file) {
  var body = null;
  var fileName = '';
  var userData = ''; // 透传字段

  if (Object.prototype.toString.call(file.data) === '[object File]') {
    body = file.data;
    fileName = file.data.name;
    userData = file.userData;
  } else {
    var dataURL = file.data;
    fileName = file.name;
    userData = file.userData; // 透传字段

    var arr = dataURL.split(',');
    var data = window.atob(arr[1]);
    var mime = arr[0].match(/:(.*?);/)[1];
    var ia = new Uint8Array(data.length);

    for (var i = 0; i < data.length; i++) {
      ia[i] = data.charCodeAt(i);
    }

    body = new Blob([ia], {
      type: mime
    });
  }

  var self = this;
  return new Promise(function (resolve, reject) {
    (function (resolve, reject, body, fileName, userData) {
      var _this5 = this;

      var key = self.options.cosData.path + _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].getTimeStamp() + '_' + fileName;
      self.userDataKeyMap[key] = userData;
      self.cos.sliceUploadFile({
        Bucket: self.options.cosData.bucket + '-' + self.options.cosData.appid,
        Region: self.options.cosData.region,
        Key: key,
        Body: body,
        TaskReady: function TaskReady(taskId) {
          /* 非必须 */
        },
        onHashProgress: function onHashProgress(progressData) {
          /* 非必须 */
        },
        onProgress: function onProgress(progressData) {
          /* 非必须 */
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(self, 'TEB_FILEUPLOADPROGRESS', Object.assign({
            userData: userData
          }, progressData));
        }
      }, function (err, data) {
        if (data && data.statusCode === 200) {
          Object.assign(data, {
            userData: userData
          });
          resolve(data);
        } else {
          // Object.assign(err, {
          //   userData: userData
          // });
          // 上传失败
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this5, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
            code: err.statusCode ? err.statusCode : -3,
            userData: userData,
            errorMsg: JSON.stringify(err.error)
          });
          reject(err);
        }
      });
    })(resolve, reject, body, fileName, userData);
  });
};

FileCos.prototype.addFileFromCosUrl = function (url, succ, fail) {
  if (!_util_util__WEBPACK_IMPORTED_MODULE_14__["default"].isCosUrl(url)) {
    fail && fail();
    return;
  }

  var previewBaseUrl = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].fileDownLoadUrlToPreviewUrl(url);
  var retryCount = 0;
  var self = this;

  var getDocTotalPage = function getDocTotalPage() {
    var _this6 = this;

    self.request.getDocTotalPage("".concat(previewBaseUrl, 1)).then(function (res) {
      // 如果返回了总页数
      if (res.status === 200 && res.headers['user-returncode']) {
        var totalPage = res.headers['user-returncode'] * 1;
        var picUrls = [];

        for (var i = 0; i < totalPage; i++) {
          picUrls.push("".concat(previewBaseUrl).concat(i + 1));
        }

        var fileName = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].cosUrlExtractFileName(url);
        var imgBlob = window.URL.createObjectURL(res.data);
        self.getImgNaturalSize(imgBlob).then(function (_ref2) {
          var width = _ref2.width,
              height = _ref2.height;
          // 拿到宽高
          succ && succ(totalPage, picUrls, fileName, width + ':' + height);
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this6, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_SUCC, {
            code: 0,
            errorMsg: '',
            fileName: fileName,
            fileUrl: url,
            picUrls: picUrls
          });
        }, function () {
          succ && succ(totalPage, picUrls, fileName, null);
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this6, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_SUCC, {
            code: 0,
            errorMsg: '',
            fileName: fileName,
            fileUrl: url,
            picUrls: picUrls
          });
        });
      } else {
        if (retryCount++ > 3) {
          fail && fail(res);
          _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this6, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
            code: -4,
            userData: '',
            errorMsg: 'failed to get the total number of pages'
          });
        } else {
          setTimeout(function () {
            getDocTotalPage();
          }, 1000);
        }
      }
    }).catch(function (err) {
      if (retryCount++ > 3) {
        fail && fail(err);
        _board_Event__WEBPACK_IMPORTED_MODULE_10__["default"].fire(_this6, 'TEB_FILEUPLOADSTATUS', _model_TEduBoardFileUploadStatus__WEBPACK_IMPORTED_MODULE_16__["default"].TEDU_BOARD_UPLOAD_ERROR, {
          code: -4,
          userData: '',
          errorMsg: 'failed to get the total number of pages'
        });
      } else {
        setTimeout(function () {
          getDocTotalPage();
        }, 1000);
      }
    });
  };

  getDocTotalPage();
};

FileCos.prototype.getDocTotalPage = function (returnCosData) {
  var url = "https://".concat(this.options.cosData.bucket, "-").concat(this.options.cosData.appid, ".preview.myqcloud.com/").concat(encodeURIComponent(returnCosData.Key), "?cmd=doc_preview&of=pic&page=1");
  return this.request.getDocTotalPage(url);
};

FileCos.prototype.getFileUrl = function (returnCosData) {
  var totalPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var picUrls = [];

  for (var i = 0; i < totalPage; i++) {
    picUrls.push("https://".concat(this.options.cosData.bucket, "-").concat(this.options.cosData.appid, ".preview.myqcloud.com/").concat(encodeURIComponent(returnCosData.Key), "?cmd=doc_preview&of=pic&page=").concat(i + 1));
  }

  return {
    picUrls: picUrls,
    fileName: returnCosData.Key.substring(returnCosData.Key.indexOf('_') + 1),
    fileUrl: 'https://' + returnCosData.Location
  };
};

FileCos.prototype.getInstance = function () {
  return this.cos;
};
/**
 * 生成COS大账号的sdkappid
 * @param {*} sdkappid 
 */


FileCos.prototype.genBucket = function (sdkappid) {
  var eduSdkappid = 'edu-' + sdkappid;
  var hashSdkappid = js_md5__WEBPACK_IMPORTED_MODULE_13___default()(eduSdkappid);
  return hashSdkappid.substring(0, 4) + '-' + eduSdkappid;
};

FileCos.prototype.getImgNaturalSize = function (imgBlob) {
  return new Promise(function (resolve, reject) {
    var tempImg = new Image();

    tempImg.onload = function () {
      // 求最大公约数
      var number = _util_util__WEBPACK_IMPORTED_MODULE_14__["default"].maxCommonDivisor(this.naturalWidth, this.naturalHeight);
      resolve({
        width: this.naturalWidth / number,
        height: this.naturalHeight / number
      });
    };

    tempImg.onerror = function () {
      reject();
    };

    tempImg.src = imgBlob;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (FileCos);

/***/ }),

/***/ "./src/model/BoardInfoModel.js":
/*!*************************************!*\
  !*** ./src/model/BoardInfoModel.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * 白板信息
 */
var TEduBoardInfo =
/*#__PURE__*/
function () {
  function TEduBoardInfo(boardId, backgroundUrl, backgroundColor) {
    _classCallCheck(this, TEduBoardInfo);

    this.boardId = boardId || '';
    this.backgroundUrl = '';

    if (backgroundUrl) {
      this.backgroundUrl = backgroundUrl.url || '';
    }

    this.backgroundColor = backgroundColor || '';
  }

  _createClass(TEduBoardInfo, [{
    key: "setBoardId",
    value: function setBoardId(boardId) {
      this.boardId = boardId;
    }
  }, {
    key: "setBackgroundUrl",
    value: function setBackgroundUrl(url) {
      this.backgroundUrl = url;
    }
  }, {
    key: "getBoardId",
    value: function getBoardId() {
      return this.boardId;
    }
  }, {
    key: "getBackgroundUrl",
    value: function getBackgroundUrl() {
      return this.backgroundUrl;
    }
  }, {
    key: "setBackgroundColor",
    value: function setBackgroundColor(color) {
      this.backgroundColor = color;
    }
  }, {
    key: "getBackgroundColor",
    value: function getBackgroundColor() {
      return this.backgroundColor;
    }
  }]);

  return TEduBoardInfo;
}();

/* harmony default export */ __webpack_exports__["default"] = (TEduBoardInfo);

/***/ }),

/***/ "./src/model/DragDataList.js":
/*!***********************************!*\
  !*** ./src/model/DragDataList.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DragDataList =
/*#__PURE__*/
function () {
  function DragDataList() {
    _classCallCheck(this, DragDataList);

    this.data = {};
  }

  _createClass(DragDataList, [{
    key: "addDragData",
    value: function addDragData(currentBoard, dragModel) {
      if (!this.data[currentBoard]) {
        this.data[currentBoard] = dragModel;
      }
    }
  }, {
    key: "getDragData",
    value: function getDragData(currentBoard) {
      return this.data[currentBoard];
    }
  }, {
    key: "updateDragData",
    value: function updateDragData(currentBoard, options) {
      var dragModel = this.data[currentBoard];
      dragModel.update(options);
    }
  }]);

  return DragDataList;
}();

/* harmony default export */ __webpack_exports__["default"] = (DragDataList);

/***/ }),

/***/ "./src/model/DragModel.js":
/*!********************************!*\
  !*** ./src/model/DragModel.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _util_Seq__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Seq */ "./src/util/Seq.js");


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// 拖拽数据模型




var DragModel =
/*#__PURE__*/
function () {
  function DragModel(options) {
    _classCallCheck(this, DragModel);

    this.action = _config_Config__WEBPACK_IMPORTED_MODULE_1__["default"].PROTOCOL_ACTION.BOARD_MOVE_SCALE_ACTION; // 301  白板位置、缩放操作

    this.scale = options.scale; // uint32 白板内容和白板大小的比例*100

    this.xOffsetRatio = options.xOffsetRatio; // 偏移的缩放比（同步的时候由xOffset归一化算出来）

    this.yOffsetRatio = options.yOffsetRatio; // 偏移的缩放比（同步的时候由yOffset归一化算出来）

    this.xOffset = options.xOffset; // uint32 白板展示框在内容view中的相对位置/展示框宽度*10000【最小值为0，最大值为（scale-100）*10000/100】

    this.yOffset = options.yOffset; // uint32 白板展示框在内容view中的相对位置/展示框高度*10000【最小值为0，最大值为（scale-100）*10000/100】
  }

  _createClass(DragModel, [{
    key: "update",
    value: function update(options) {
      Object.assign(this, options);
    }
  }, {
    key: "getReportData",
    value: function getReportData() {
      return {
        "updateTime": _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getSecondTime(),
        // 修改移动、缩放属性时，服务器时间戳（IM后台时间戳/秒）
        "xOffset": Math.floor(this.xOffset),
        //归一化*10000
        "yOffset": Math.floor(this.yOffset),
        //归一化*10000
        "scale": Math.floor(this.scale) //缩放比*100，最小为100

      };
    }
  }, {
    key: "getRealTimeData",
    value: function getRealTimeData() {
      return {
        action: this.action,
        time: _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp(),
        seq: _util_Seq__WEBPACK_IMPORTED_MODULE_3__["default"].getSeq(),
        scale: Math.floor(this.scale),
        xOffset: Math.floor(this.xOffset),
        yOffset: Math.floor(this.yOffset)
      };
    }
  }]);

  return DragModel;
}();

/* harmony default export */ __webpack_exports__["default"] = (DragModel);

/***/ }),

/***/ "./src/model/TEduBoardContentFitMode.js":
/*!**********************************************!*\
  !*** ./src/model/TEduBoardContentFitMode.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardContentFitMode = {
  TEDU_BOARD_FILE_FIT_MODE_NONE: 0,
  //不使用文件自适应，我们目前使用的模式，不自动调整白板宽高比，文件等比例缩放居中显示，文件宽高<=白板宽高
  TEDU_BOARD_FILE_FIT_MODE_CENTER_INSIDE: 1,
  //自动调整白板宽高比与文件一致，文件铺满白板，白板等比例缩放居中显示，白板宽高:容器宽高
  TEDU_BOARD_FILE_FIT_MODE_CENTER_COVER: 2 //自动调整白板宽高比与文件一致，文件铺满白板，白板等比例缩放居中显示，白板宽高>=容器宽高

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardContentFitMode);

/***/ }),

/***/ "./src/model/TEduBoardErrorCode.js":
/*!*****************************************!*\
  !*** ./src/model/TEduBoardErrorCode.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardErrorCode = {
  TEDU_BOARD_ERROR_INIT: 1,
  //初始化失败
  TEDU_BOARD_ERROR_AUTH: 2,
  //服务鉴权失败，请先购买服务
  TEDU_BOARD_ERROR_LOAD: 3,
  //文件加载失败
  TEDU_BOARD_ERROR_UPLOAD: 4,
  //上传文件失败 // 废弃
  TEDU_BOARD_ERROR_TIM_INVALID: 5,
  //腾讯云IMSDK不可用
  TEDU_BOARD_ERROR_HISTORYDATA: 6,
  //同步历史数据失败
  TEDU_BOARD_ERROR_RUNTIME: 7 //白板运行错误

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardErrorCode);

/***/ }),

/***/ "./src/model/TEduBoardFileUploadStatus.js":
/*!************************************************!*\
  !*** ./src/model/TEduBoardFileUploadStatus.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardFileUploadStatus = {
  TEDU_BOARD_UPLOAD_SUCC: 1,
  // 文件上传成功
  TEDU_BOARD_UPLOAD_ERROR: 2 // 文件上传失败

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardFileUploadStatus);

/***/ }),

/***/ "./src/model/TEduBoardImageStatus.js":
/*!*******************************************!*\
  !*** ./src/model/TEduBoardImageStatus.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardImageStatus = window.TEduBoardImageStatus = {
  TEDU_BOARD_IMAGE_STATUS_LOADING: 1,
  //背景图片正在加载        CONSTANT.EVENT.IMG_START_LOAD
  TEDU_BOARD_IMAGE_STATUS_LOAD_DONE: 2,
  //背景图片加载完成        CONSTANT.EVENT.IMG_LOAD
  TEDU_BOARD_IMAGE_STATUS_LOAD_ABORT: 3,
  //背景图片加载中断        CONSTANT.EVENT.IMG_ABORT
  TEDU_BOARD_IMAGE_STATUS_LOAD_ERROR: 4 //背景图片加载错误        CONSTANT.EVENT.IMG_ERROR

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardImageStatus);

/***/ }),

/***/ "./src/model/TEduBoardToolType.js":
/*!****************************************!*\
  !*** ./src/model/TEduBoardToolType.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardToolType = {
  TEDU_BOARD_TOOL_TYPE_MOUSE: 0,
  //鼠标            MOUSE
  TEDU_BOARD_TOOL_TYPE_PEN: 1,
  //画笔            LINE
  TEDU_BOARD_TOOL_TYPE_ERASER: 2,
  //橡皮擦            ERASER
  TEDU_BOARD_TOOL_TYPE_LASER: 3,
  //激光笔            RASER
  TEDU_BOARD_TOOL_TYPE_LINE: 4,
  //直线            GRAPH_LINE
  TEDU_BOARD_TOOL_TYPE_OVAL: 5,
  //空心椭圆        GRAPH_OVAL
  TEDU_BOARD_TOOL_TYPE_RECT: 6,
  //空心矩形        GRAPH_RECT
  TEDU_BOARD_TOOL_TYPE_OVAL_SOLID: 7,
  //实心椭圆        GRAPH_OVAL_SOLID
  TEDU_BOARD_TOOL_TYPE_RECT_SOLID: 8,
  //实心矩形        GRAPH_RECT_SOLID
  TEDU_BOARD_TOOL_TYPE_POINT_SELECT: 9,
  //点选工具        POINTSELECT
  TEDU_BOARD_TOOL_TYPE_RECT_SELECT: 10,
  //框选工具        SELECT
  TEDU_BOARD_TOOL_TYPE_TEXT: 11,
  //文本工具        INPUTTEXT
  TEDU_BOARD_TOOL_TYPE_ZOOM_DRAG: 12 //缩放工具      zoom

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardToolType);

/***/ }),

/***/ "./src/model/TEduBoardWarningCode.js":
/*!*******************************************!*\
  !*** ./src/model/TEduBoardWarningCode.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TEduBoardWarningCode = {
  TEDU_BOARD_WARNING_SYNC_DATA_PARSE_FAILED: 1,
  //接收到其他端的同步数据解析错误    CONSTANT.EVENT.ADD_DATA_ERROR
  TEDU_BOARD_WARNING_H5PPT_ALREADY_EXISTS: 3 //要添加的H5PPT已存在

};
/* harmony default export */ __webpack_exports__["default"] = (TEduBoardWarningCode);

/***/ }),

/***/ "./src/model/TeduBoardH5BackgroudStatus.js":
/*!*************************************************!*\
  !*** ./src/model/TeduBoardH5BackgroudStatus.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var TeduBoardH5BackgroudStatus = {
  TEDU_BOARD_H5_BACKGROUND_STATUS_LOADING: 1,
  //H5背景图片正在加载
  TEDU_BOARD_H5_BACKGROUND_STATUS_LOAD_DONE: 2 //H5背景图片加载完成

};
/* harmony default export */ __webpack_exports__["default"] = (TeduBoardH5BackgroudStatus);

/***/ }),

/***/ "./src/net/ELKLog.js":
/*!***************************!*\
  !*** ./src/net/ELKLog.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");

// const util = require('../util/util');
// const Config = require('../config/Config');


/**
 * ELK日志系统
 */

function ELKLog() {}

ELKLog.prototype = {
  // APIURL : 'http://123.206.118.43:8099/wawaji/logreport',
  APIURL: 'https://ilivelog.qcloud.com',
  // APIURL : 'https://webrtc.qq.com:8687/api/uploadlog',
  method: 'POST',
  //事件时机
  events: {
    start_draw_curve: 'start_draw_curve',
    // action 1 开始画线
    move_draw_curve: 'move_draw_curve',
    // action 2 正在画线
    end_draw_curve: 'end_draw_curve',
    // action 3 结束画线
    over_draw_curve: 'over_draw_curve',
    // 结束画线
    start_raser: 'start_raser',
    // action 6 开始激光笔
    end_raser: 'end_raser',
    // action 7 结束激光笔
    eraser: 'eraser',
    // action 8 设置线条是否显示(橡皮擦)
    move_scrawl: 'move_scrawl',
    // action 9 移动涂鸦
    draw_graph: 'draw_graph',
    // action 10 画直线
    clear_all: 'clear_all',
    // action 101 清空全部白板数据
    clear_scrawl: 'clear_scrawl',
    // action 102 清空全部涂鸦，保留背景
    set_bg_img: 'set_bg_img',
    // action 201 设置白板背景图片
    clear_bg_img: 'clear_bg_img',
    // action 202 清除白板背景图片
    set_bg_color: 'set_bg_color',
    // action 203 设置白板背景颜色
    // end_raser: 'end_raser', // action 301 白板位置、缩放
    switch_board: 'switch_board',
    // action 401 切换白板
    start_select: 'start_select',
    // 开始框选
    move_select: 'move_select',
    // 移动框选
    end_select: 'end_select',
    // 结束框选
    point_select: 'point_select' // 点选

  },
  levels: {
    info: 'info',
    warn: 'warn',
    error: 'error'
  },
  send: function send(datas) {
    try {
      // datas['net_type'] = (navigator.connection.effectiveType || '').toUpperCase();
      datas['userAgent'] = navigator.userAgent;
      datas = this.fillDatas(datas);
      var xhr = this.getXHR();
      xhr.onreadystatechange = this.reporterHandel(xhr);
      xhr.open(this.method, this.APIURL, true);
      xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhr.send(JSON.stringify(datas));
    } catch (e) {
      console.log(e);
    }
  },
  fillDatas: function fillDatas(datas) {
    var self = this;
    var dt = {};

    for (var p in self.defDatas) {
      if (['sdkappid', 'classid', 'userid'].indexOf(p) >= 0) {
        dt[p] = self.defDatas[p];
        continue;
      }

      dt[p] = typeof datas[p] != 'undefined' ? datas[p] : self.defDatas[p];
    }

    dt.device = _config_Config__WEBPACK_IMPORTED_MODULE_2__["default"].PLATFORM;
    dt.nativeVersion = _config_Config__WEBPACK_IMPORTED_MODULE_2__["default"].NATIVEVERSION;
    return dt;
  },
  datasParseToString: function datasParseToString(datas) {
    var tmp = [];

    for (var p in datas) {
      tmp.push(p + '=' + encodeURIComponent(datas[p]));
    }

    return tmp.join('&');
  },
  getXHR: function getXHR() {
    var xmlhttp = null;
    var ActiveXObject = window.ActiveXObject;

    if (window.XMLHttpRequest) {
      // code for all new browsers
      xmlhttp = new XMLHttpRequest();
    } else if (ActiveXObject) {
      // code for IE5 and IE6
      try {
        xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
      } catch (e) {
        try {
          xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) {}
      }
    }

    if (xmlhttp == null) {
      console.log("Your browser does not support XMLHTTP.");
      return;
    }

    return xmlhttp;
  },
  reporterHandel: function reporterHandel(xhr) {
    return function () {
      if (xhr && xhr.readyState) {
        switch (xhr.readyState) {
          case 0:
            break;

          case 1:
            break;

          case 2:
            break;

          case 3:
            break;

          case 4:
            break;
        }
      }
    };
  },
  log: function log(key, value) {
    this.send({
      'action': key,
      'action_result': value || 0,
      'log_msg': key,
      'log_level': this.levels.info
    });
  },
  warn: function warn(key, value) {
    this.send({
      'action': key,
      'action_result': value || 0,
      'log_msg': key,
      'log_level': this.levels.warn
    });
  },
  error: function error(key, value) {
    this.send({
      'action': key,
      'action_result': value || 0,
      'log_msg': key,
      'log_level': this.levels.error
    });
  },
  defDatas: {
    "action": "",
    // 	事件名称
    "version": _config_Config__WEBPACK_IMPORTED_MODULE_2__["default"].REPORT_VERSION,
    // TICSDK版本号
    "action_result": 0,
    // 事件错误码
    "action_info": "",
    // 	错误详细信息
    "userid": "",
    // 登录用户的id
    "time_consume": 0,
    //事件耗时，单位毫秒
    "sdkappid": "",
    // sdkappid
    "device": _config_Config__WEBPACK_IMPORTED_MODULE_2__["default"].PLATFORM,
    // 事件对应的平台
    "log_time": 0,
    //  时间上报时的本地秒级时间戳
    "business": 'ticsdk',
    //  业务sdk名字
    "roomid": "",
    // 房间id，进房以及在房间中的所有事件都要带上
    "boardid": '',
    // 白板id, 所有在白板上的操作都要带上
    "image_url": '',
    // 图片下载地址，设置白本背景图时需要带上
    "boardid_list": [],
    // 白板id数组，创建白板时需要带上
    "to_boardId": '',
    // 删除白板id时，需要带上，删除白板后跳转到哪一个白板
    "color": null,
    // 颜色值，设置白板背景色时需要带上
    "file_id": '',
    // 文件id,添加文件或删除文件时需要带上
    "file_title": '',
    // 文件title,添加文件时需要带上
    "isfinish": 0,
    // 拉取会议全量消息时需要带上，0:拉取未完成 1:拉取完成
    "msgLength": 20,
    // 拉取会议全量消息时需要带上，单次拉取到的消息个数
    "bucket": '',
    // cos空间名，上传文件时需要带上
    "cos_appid": null,
    // cosappid，上传文件时需要带上
    "extra_info": "",
    // 可扩展字段
    "net_type": 'unknown',
    // 
    "userAgent": null
  },
  setSdkAppid: function setSdkAppid(id) {
    if (id == undefined || id == null) {
      console.log('sdkappid invalid!');
      return;
    }

    this.defDatas.sdkappid = id;
  },
  setRoomId: function setRoomId(id) {
    if (id == undefined || id == null) {
      console.log('roomid invalid!');
      return;
    }

    this.defDatas.roomid = id;
  },
  setUserId: function setUserId(id) {
    if (id == undefined || id == null) {
      console.log('userid invalid!');
      return;
    }

    this.defDatas.userid = id;
  },
  boardAction: function boardAction(action, content) {
    this.report(action, content);
  },
  // 上报日志
  report: function report(action) {
    var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    try {
      this.send(Object.assign({
        action_result: 0,
        time_consume: 0
      }, content, {
        'action': action,
        'log_time': _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
      }));
    } catch (error) {}
  }
};
/* harmony default export */ __webpack_exports__["default"] = (new ELKLog());

/***/ }),

/***/ "./src/net/Report.js":
/*!***************************!*\
  !*** ./src/net/Report.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_Seq__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Seq */ "./src/util/Seq.js");
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _ELKLog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ELKLog */ "./src/net/ELKLog.js");
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _config_Constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/Constant */ "./src/config/Constant.js");






function Report(request) {
  this.request = request;
}

Report.prototype.reportCreateBoards = function (currentBoard, boardId) {
  var boards = [];

  if (Array.isArray(boardId)) {
    boards = boardId;
  } else {
    boards = [boardId];
  }

  if (boards.length === 0) {
    return;
  }

  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'createBoards',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      fid: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].boardId2Fid(boards[0]),
      createBoards: boards,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('createBoards', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: currentBoard,
        boardid_list: boards,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('createBoards', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: currentBoard,
        boardid_list: boards,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('createBoards', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: currentBoard,
      boardid_list: boards,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportDeleteBoard = function (deleteBoards, currentBoard) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'deleteBoards',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      deleteBoards: deleteBoards,
      toBoardId: currentBoard,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteBoards', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: deleteBoards,
        image_url: null,
        to_boardId: currentBoard,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteBoards', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: deleteBoards,
        image_url: null,
        to_boardId: currentBoard,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteBoards', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: deleteBoards,
      image_url: null,
      to_boardId: currentBoard,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportSetBoardBgColor = function (boardId, color) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    "type": "setBoardBG",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": {
      "boardId": boardId,
      "updateTime": _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp(),
      "colorRGBA": color
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setBoardBG', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: color,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setBoardBG', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: color,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setBoardBG', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: boardId,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: color,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportClear = function (boardID) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'clean',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      boardId: boardID,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('clean', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardID,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('clean', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardID,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('clean', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: boardID,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportClearDraws = function (boardID) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'cleanDraws',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      boardId: boardID,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanDraws', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardID,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanDraws', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardID,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanDraws', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: boardID,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportImage = function (boardId, url) {
  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _config_Constant__WEBPACK_IMPORTED_MODULE_4__["default"].FILL_MODE.DEFAULT;
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _config_Constant__WEBPACK_IMPORTED_MODULE_4__["default"].BACKGROUND_TYPE.IMAGE;
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'image',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      fid: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].boardId2Fid(boardId),
      boardId: boardId,
      url: url,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp(),
      type: type,
      mode: mode
    }
  }], function (res) {
    var boardInfo = {};
    boardInfo[boardId] = url;

    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: [boardInfo],
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: [boardInfo],
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    var boardInfo = {};
    boardInfo[boardId] = url;
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: [boardInfo],
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportImages = function (reportMsg) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();

  for (var i = 0, len = Math.ceil(reportMsg.length / 100); i < len; i++) {
    var msgs = [];
    msgs = reportMsg.slice(i * 100, (i + 1) * 100);
    this.request.reportMsg(msgs, function (res) {
      var boardInfoList = [];
      reportMsg.forEach(function (item) {
        var obj = {};
        obj[item.content.boardId] = item.content.url;
        boardInfoList.push(obj);
      });

      if (res.ErrorCode || res.error_code) {
        _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
          action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
          action_info: res.ErrorInfo || res.error_msg,
          time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
          boardid: null,
          boardid_list: boardInfoList,
          to_boardId: null,
          color: null,
          file_id: null,
          file_title: null
        });
      } else {
        _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
          action_result: 0,
          action_info: null,
          time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
          boardid: null,
          boardid_list: boardInfoList,
          to_boardId: null,
          color: null,
          file_id: null,
          file_title: null
        });
      }
    }, function (error) {
      var boardInfoList = [];
      reportMsg.forEach(function (item) {
        var obj = {};
        obj[item.content.boardId] = item.content.url;
        boardInfoList.push(obj);
      });
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('image', {
        action_result: -9999,
        action_info: error && error.message,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: boardInfoList,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    });
  }
};

Report.prototype.reportSwitchBoard = function (boardId) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'switchBoard',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      boardId: boardId,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('switchBoard', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('switchBoard', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('switchBoard', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: boardId,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

Report.prototype.reportGlobalBgColor = function (color) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    "type": "setGlobalBG",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": {
      "updateTime": _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp(),
      "colorRGBA": color
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setGlobalBG', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: color,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setGlobalBG', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: color,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('setGlobalBG', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: color,
      file_id: null,
      file_title: null
    });
  });
}; // 上报增加line


Report.prototype.reportAddLine = function (content) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'addLine',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: content
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addLine', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: content.colorRGBA,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addLine', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: content.colorRGBA,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addLine', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: content.boardId,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: content.colorRGBA,
      file_id: null,
      file_title: null
    });
  });
}; // 上报增加Text


Report.prototype.reportAddText = function (content) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'addText',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: content
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addText', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: content.colorRGBA,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addText', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: content.colorRGBA,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addText', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: content.boardId,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: content.colorRGBA,
      file_id: null,
      file_title: null
    });
  });
}; // 隐藏、显示线条（橡皮擦）


Report.prototype.reportDisplayLine = function (content) {
  console.log("reportDisplayLine: ");
  console.log(content);
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'displayLine',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: content
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('displayLine', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null,
        display: content.display
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('displayLine', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: content.boardId,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null,
        display: content.display
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('displayLine', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: content.boardId,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null,
      display: content.display
    });
  });
};

Report.prototype.reportGraphData = function (reportMsg) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg(reportMsg, function (res) {
    reportMsg.forEach(function (item) {
      if (res.ErrorCode || res.error_code) {
        _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction(item.type, {
          action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
          action_info: res.ErrorInfo || res.error_msg,
          time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
          boardid: item.content.boardId,
          boardid_list: null,
          to_boardId: null,
          color: item.content.colorRGBA,
          file_id: null,
          file_title: null
        });
      } else {
        _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction(item.type, {
          action_result: 0,
          action_info: null,
          time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
          boardid: item.content.boardId,
          boardid_list: null,
          to_boardId: null,
          color: item.content.colorRGBA,
          file_id: null,
          file_title: null
        });
      }
    });
  }, function (error) {
    reportMsg.forEach(function (item) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction(item.type, {
        action_result: -9999,
        action_info: error && error.message,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: item.content.boardId,
        boardid_list: null,
        to_boardId: null,
        color: item.content.colorRGBA,
        file_id: null,
        file_title: null
      });
    });
  });
}; // fid, title, downloadURL, pageCount, currentPageIndex, userId


Report.prototype.reportAddFile = function (file) {
  var fid = file.fid;
  var title = file.title;
  var downloadURL = file.downloadURL;
  var pageCount = file.pageCount;
  var currentPageIndex = file.currentPageIndex;
  var currentPageStep = file.currentPageStep;
  var userId = file.uid;
  var timestamp = file.timestamp;
  var platform = file.platform;
  var type = file.type;
  var ratio = file.ratio;
  var scale = file.scale;
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    "type": "addFile",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": {
      "updateTime": _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp(),
      "fid": fid,
      // 文件唯一标识
      "title": title,
      // 文件名称
      "downloadURL": downloadURL,
      "pageCount": pageCount,
      "currentPageIndex": currentPageIndex,
      "currentPageStep": currentPageStep,
      "uid": userId,
      // 上传者的userid
      "timestamp": timestamp,
      // 生成白板的时间戳
      "platform": platform || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].PLATFORM,
      // 上传者的platform pc/web/ios/android
      "type": type || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].FILE_TYPE.IMG,
      "ratio": ratio,
      "scale": scale
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addFile', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        extra_info: JSON.stringify({
          "downloadURL": downloadURL,
          "pageCount": pageCount,
          "currentPageIndex": currentPageIndex,
          "currentPageStep": currentPageStep,
          "uid": userId,
          // 上传者的userid
          "timestamp": timestamp,
          // 生成白板的时间戳
          "platform": platform || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].PLATFORM,
          // 上传者的platform pc/web/ios/android
          "type": type || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].FILE_TYPE.IMG,
          "ratio": ratio,
          "scale": scale
        }),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: fid,
        file_title: title
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addFile', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: fid,
        file_title: title,
        extra_info: JSON.stringify({
          "downloadURL": downloadURL,
          "pageCount": pageCount,
          "currentPageIndex": currentPageIndex,
          "currentPageStep": currentPageStep,
          "uid": userId,
          // 上传者的userid
          "timestamp": timestamp,
          // 生成白板的时间戳
          "platform": platform || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].PLATFORM,
          // 上传者的platform pc/web/ios/android
          "type": type || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].FILE_TYPE.IMG,
          "ratio": ratio,
          "scale": scale
        })
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('addFile', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: fid,
      file_title: title,
      extra_info: JSON.stringify({
        "downloadURL": downloadURL,
        "pageCount": pageCount,
        "currentPageIndex": currentPageIndex,
        "currentPageStep": currentPageStep,
        "uid": userId,
        // 上传者的userid
        "timestamp": timestamp,
        // 生成白板的时间戳
        "platform": platform || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].PLATFORM,
        // 上传者的platform pc/web/ios/android
        "type": type || _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].FILE_TYPE.IMG,
        "ratio": ratio,
        "scale": scale
      })
    });
  });
};

Report.prototype.reportDeleteFile = function (fid) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    type: 'deleteFile',
    seq: _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    content: {
      fid: fid,
      updateTime: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp()
    }
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteFile', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: fid,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteFile', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: fid,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('deleteFile', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: fid,
      file_title: null
    });
  });
};
/**
 * 设置分辨率
 */


Report.prototype.reportDrag = function (dragData) {
  this.request.reportMsg([{
    "type": "drag",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": dragData
  }], function (res) {}, function (error) {});
};
/**
 * 设置分辨率
 */


Report.prototype.reportsetBoardRatio = function (ratioData) {
  this.request.reportMsg([{
    "type": "setRatio",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": ratioData
  }], function (res) {}, function (error) {});
};
/**
 * 设置分辨率
 */


Report.prototype.reportsetBoardContentFitMode = function (modeData) {
  this.request.reportMsg([{
    "type": "setBoardContentFitMode",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq(),
    "content": modeData
  }], function (res) {}, function (error) {});
};
/**
 * 清空所有数据
 */


Report.prototype.reportCleanAll = function () {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeStamp();
  this.request.reportMsg([{
    "type": "cleanAll",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_0__["default"].getSeq()
  }], function (res) {
    if (res.ErrorCode || res.error_code) {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanAll', {
        action_result: res.ErrorCode ? "ErrorCode:".concat(res.ErrorCode) : "error_code:".concat(res.error_code),
        action_info: res.ErrorInfo || res.error_msg,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    } else {
      _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanAll', {
        action_result: 0,
        action_info: null,
        time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
        boardid: null,
        boardid_list: null,
        image_url: null,
        to_boardId: null,
        color: null,
        file_id: null,
        file_title: null
      });
    }
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_2__["default"].boardAction('cleanAll', {
      action_result: -9999,
      action_info: error && error.message,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_1__["default"].getTimeDiff(startTime),
      boardid: null,
      boardid_list: null,
      image_url: null,
      to_boardId: null,
      color: null,
      file_id: null,
      file_title: null
    });
  });
};

/* harmony default export */ __webpack_exports__["default"] = (Report);

/***/ }),

/***/ "./src/net/Request.js":
/*!****************************!*\
  !*** ./src/net/Request.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_Seq__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Seq */ "./src/util/Seq.js");
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/util */ "./src/util/util.js");
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _ELKLog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ELKLog */ "./src/net/ELKLog.js");

// const Config = require('../config/Config');
// const elkLog = require('./ELKLog');





function Request(options) {
  this.permissions = false;
  this.reportEnable = false;
  this.option = Object.assign({}, options);

  if (!this.option.tlsData) {
    throw new Error('not found sdkAppId|userId|userSig');
  }

  if (!this.option.tlsData.sdkAppId) {
    throw new Error('not found sdkAppId');
  }

  if (!this.option.tlsData.identifier) {
    throw new Error('not found userId');
  }

  if (!this.option.tlsData.userSig) {
    throw new Error('not found userSig');
  }

  this.BOARD_URL = (options.isTest ? _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].TEST_SERVER_URL : _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].SERVER_URL) + this.option.tlsData.sdkAppId;
  this.COS_SERVER_URL = options.isTest ? _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].TEST_COS_SERVER_URL : _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].COS_SERVER_URL;
  this.WHITELIST_SERVER_URL = (options.isTest ? _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].TEST_WHITELIST_SERVER_URL : _config_Config__WEBPACK_IMPORTED_MODULE_3__["default"].WHITELIST_SERVER_URL) + this.option.tlsData.sdkAppId;
}

Request.prototype.setPermissions = function () {
  var permissions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  this.permissions = permissions;
};

Request.prototype.initXmlHttp = function () {
  var ActiveXObject = window.ActiveXObject;
  var xmlHttp = null;

  if (XMLHttpRequest) {
    xmlHttp = new XMLHttpRequest();
  } else {
    xmlHttp = new ActiveXObject('Microsoft.XMLHTTP');
  }

  return xmlHttp;
};

Request.prototype.setReportEnable = function () {
  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  this.reportEnable = enable;
}; // 上报数据


Request.prototype.reportMsg = function (data, callback, errorCallback) {
  if (!this.option.classId || !this.permissions || !this.reportEnable) {
    // 如果没有课堂ID，则不上报  没有权限也不上报，禁止上报也不上报
    return;
  }

  data = {
    "cmd": "open_conf_svc",
    "sub_cmd": "report_board_data",
    "conf_id": parseInt(this.option.classId, 10),
    "board_data_list": data
  };
  this.post(data, callback, errorCallback);
}; // 获取白板的历史数据


Request.prototype.getBoardData = function () {
  var isFirstRequest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var callback = arguments.length > 1 ? arguments[1] : undefined;
  var errorCallback = arguments.length > 2 ? arguments[2] : undefined;
  var data = {
    "first_time": isFirstRequest,
    "cmd": "open_conf_svc",
    "sub_cmd": "get_board_data",
    "seq": _util_Seq__WEBPACK_IMPORTED_MODULE_1__["default"].getSeq(),
    "conf_id": parseInt(this.option.classId, 10),
    "version": 1
  };
  this.post(data, callback, errorCallback);
}; // 获取白板的某条线的数据


Request.prototype.getLineData = function (data, callback, errorCallback) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp();
  var params = {
    "cmd": "open_conf_svc",
    "sub_cmd": "get_line",
    "conf_id": parseInt(this.option.classId, 10),
    "boardId": data.boardId,
    "owner": data.owner,
    "seq": data.seq
  };
  this.post(params, function (res) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_4__["default"].report('getLineData', {
      action_result: 0,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify(res)
    });
    callback && callback(res);
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_4__["default"].report('getLineData', {
      action_result: -1,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify(error)
    });
    errorCallback && errorCallback(error);
  });
}; // 获取指定文件


Request.prototype.getFileInfo = function (data, callback, errorCallback) {
  var startTime = _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp();
  var params = {
    "cmd": "open_conf_svc",
    "sub_cmd": "get_file",
    "conf_id": parseInt(this.option.classId, 10),
    "fid": data.fid
  };
  this.post(params, function (res) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_4__["default"].report('getFileInfo', {
      action_result: 0,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify(res)
    });
    callback && callback(res);
  }, function (error) {
    _ELKLog__WEBPACK_IMPORTED_MODULE_4__["default"].report('getFileInfo', {
      action_result: -1,
      time_consume: _util_util__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeStamp() - startTime,
      extra_info: JSON.stringify(error)
    });
    errorCallback && errorCallback(error);
  });
}; // 获取总页数


Request.prototype.getDocTotalPage = function (cosUrl) {
  return window.axios.get(cosUrl, {
    responseType: 'blob' // 默认的

  });
};
/**
 * 获取cos鉴权信息
 */


Request.prototype.getCosAuthData = function () {
  var url = this.COS_SERVER_URL + "?SdkAppId=".concat(this.option.tlsData.sdkAppId, "&Identifier=").concat(this.option.tlsData.identifier, "&UserSig=").concat(this.option.tlsData.identifier);
  return window.axios.post(url, {
    "cmd": "open_cos_svc",
    "sub_cmd": "get_cos_token",
    "duration": 300,
    "version": 1
  });
};
/**
 * 申请权限
 */


Request.prototype.applyPermissions = function () {
  var url = this.WHITELIST_SERVER_URL + '&usersig=' + this.option.tlsData.userSig + '&identifier=' + this.option.tlsData.identifier;
  return window.axios.post(url, {
    "cmd": "open_conf_svc",
    "sub_cmd": "verify_sdk",
    "sdkappid": this.option.tlsData.sdkAppId * 1
  });
}; // 发送post请求


Request.prototype.urlPost = function (url, data, callback, errorCallback) {
  if (typeof axios === 'undefined') {
    this.cPost(url, data, callback, errorCallback);
  } else {
    this.axiosPost(url, data, callback, errorCallback);
  }
}; // 发送post请求


Request.prototype.post = function (data, callback, errorCallback) {
  var url = this.BOARD_URL + '&usersig=' + this.option.tlsData.userSig + '&identifier=' + this.option.tlsData.identifier;

  if (typeof axios === 'undefined') {
    this.cPost(url, data, callback, errorCallback);
  } else {
    this.axiosPost(url, data, callback, errorCallback);
  }
};

Request.prototype.axiosPost = function (url, data, callback, errorCallback) {
  window.axios.post(url, data).then(function (response) {
    console.log(response.data);
    callback && callback(response.data);
  }).catch(function (error) {
    errorCallback && errorCallback(error);
  });
};

Request.prototype.cPost = function (url, data, callback, errorCallback) {
  var xmlHttp = this.initXmlHttp();
  var self = this;
  xmlHttp.open("POST", url, true);
  xmlHttp.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
  xmlHttp.send(JSON.stringify(data));

  xmlHttp.onreadystatechange = function () {
    if (xmlHttp.readyState == 4) {
      if (xmlHttp.status >= 200 && xmlHttp.status < 300 || xmlHttp.status == 304) {
        var ret = null;

        try {
          ret = JSON.parse(xmlHttp.responseText);
          console.log('data:', data, '  ret:', ret);
          callback && callback(ret);
        } catch (e) {
          errorCallback && errorCallback(e);
        }
      } else {
        var error = new Error("Network Error");
        errorCallback && errorCallback(error);
      }
    }
  };
};

/* harmony default export */ __webpack_exports__["default"] = (Request);

/***/ }),

/***/ "./src/util/FitCurve.js":
/*!******************************!*\
  !*** ./src/util/FitCurve.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.string.iterator */ "./node_modules/core-js/modules/es6.string.iterator.js");
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es6.math.hypot */ "./node_modules/core-js/modules/es6.math.hypot.js");
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _net_Report__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../net/Report */ "./src/net/Report.js");










function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// ==ClosureCompiler==
// @output_file_name fit-curve.min.js
// @compilation_level SIMPLE_OPTIMIZATIONS
// ==/ClosureCompiler==

/**
 *  @preserve  JavaScript implementation of
 *  Algorithm for Automatically Fitting Digitized Curves
 *  by Philip J. Schneider
 *  "Graphics Gems", Academic Press, 1990
 *
 *  The MIT License (MIT)
 *
 *  https://github.com/soswow/fit-curves
 */

/**
 * Fit one or more Bezier curves to a set of points.
 *
 * @param {Array<Array<Number>>} points - Array of digitized points, e.g. [[5,5],[5,50],[110,140],[210,160],[320,110]]
 * @param {Number} maxError - Tolerance, squared error between points and fitted curve
 * @param {Function} progressCallback - progress callback
 * @returns {Array<Array<Array<Number>>>} Array of Bezier curves, where each element is [first-point, control-point-1, control-point-2, second-point] and points are [x, y]
 */

function FitCurve(points, maxError, progressCallback) {
  if (!Array.isArray(points)) {
    throw new TypeError("First argument should be an array");
  }

  points.forEach(function (point) {
    if (!Array.isArray(point) || point.some(function (item) {
      return typeof item !== 'number';
    }) || point.length !== points[0].length) {
      throw Error("Each point should be an array of numbers. Each point should have the same amount of numbers.");
    }
  }); // Remove duplicate points

  points = points.filter(function (point, i) {
    return i === 0 || !point.every(function (val, j) {
      return val === points[i - 1][j];
    });
  });

  if (points.length < 2) {
    return [];
  }

  var len = points.length;
  var leftTangent = createTangent(points[1], points[0]);
  var rightTangent = createTangent(points[len - 2], points[len - 1]);
  return fitCubic(points, leftTangent, rightTangent, maxError, progressCallback);
}
/**
 * Fit a Bezier curve to a (sub)set of digitized points.
 * Your code should not call this function directly. Use {@link fitCurve} instead.
 *
 * @param {Array<Array<Number>>} points - Array of digitized points, e.g. [[5,5],[5,50],[110,140],[210,160],[320,110]]
 * @param {Array<Number>} leftTangent - Unit tangent vector at start point
 * @param {Array<Number>} rightTangent - Unit tangent vector at end point
 * @param {Number} error - Tolerance, squared error between points and fitted curve
 * @returns {Array<Array<Array<Number>>>} Array of Bezier curves, where each element is [first-point, control-point-1, control-point-2, second-point] and points are [x, y]
 */


function fitCubic(points, leftTangent, rightTangent, error, progressCallback) {
  var MaxIterations = 20; //Max times to try iterating (to find an acceptable curve)

  var bezCurve, //Control points of fitted Bezier curve
  u, //Parameter values for point
  uPrime, //Improved parameter values
  maxError, prevErr, //Maximum fitting error
  splitPoint, prevSplit, //Point to split point set at if we need more than one curve
  centerVector, toCenterTangent, fromCenterTangent, //Unit tangent vector(s) at splitPoint
  beziers, //Array of fitted Bezier curves if we need more than one curve
  dist, i; //console.log('fitCubic, ', points.length);
  //Use heuristic if region only has two points in it

  if (points.length === 2) {
    dist = maths.vectorLen(maths.subtract(points[0], points[1])) / 3.0;
    bezCurve = [points[0], maths.addArrays(points[0], maths.mulItems(leftTangent, dist)), maths.addArrays(points[1], maths.mulItems(rightTangent, dist)), points[1]];
    return [bezCurve];
  } //Parameterize points, and attempt to fit curve


  u = chordLengthParameterize(points);

  var _generateAndReport = generateAndReport(points, u, u, leftTangent, rightTangent, progressCallback);

  var _generateAndReport2 = _slicedToArray(_generateAndReport, 3);

  bezCurve = _generateAndReport2[0];
  maxError = _generateAndReport2[1];
  splitPoint = _generateAndReport2[2];

  if (maxError < error) {
    return [bezCurve];
  } //If error not too large, try some reparameterization and iteration


  if (maxError < error * error) {
    uPrime = u;
    prevErr = maxError;
    prevSplit = splitPoint;

    for (i = 0; i < MaxIterations; i++) {
      uPrime = reparameterize(bezCurve, points, uPrime);

      var _generateAndReport3 = generateAndReport(points, u, uPrime, leftTangent, rightTangent, progressCallback);

      var _generateAndReport4 = _slicedToArray(_generateAndReport3, 3);

      bezCurve = _generateAndReport4[0];
      maxError = _generateAndReport4[1];
      splitPoint = _generateAndReport4[2];

      if (maxError < error) {
        return [bezCurve];
      } //If the development of the fitted curve grinds to a halt,
      //we abort this attempt (and try a shorter curve):
      else if (splitPoint === prevSplit) {
          var errChange = maxError / prevErr;

          if (errChange > .9999 && errChange < 1.0001) {
            break;
          }
        }

      prevErr = maxError;
      prevSplit = splitPoint;
    }
  } //Fitting failed -- split at max error point and fit recursively


  beziers = []; //To create a smooth transition from one curve segment to the next, we
  //calculate the line between the points directly before and after the
  //center, and use that as the tangent both to and from the center point.

  centerVector = maths.subtract(points[splitPoint - 1], points[splitPoint + 1]); //However, this won't work if they're the same point, because the line we
  //want to use as a tangent would be 0. Instead, we calculate the line from
  //that "double-point" to the center point, and use its tangent.

  if (centerVector.every(function (val) {
    return val === 0;
  })) {
    //[x,y] -> [-y,x]: http://stackoverflow.com/a/4780141/1869660
    centerVector = maths.subtract(points[splitPoint - 1], points[splitPoint]);
    var _ref = [-centerVector[1], centerVector[0]];
    centerVector[0] = _ref[0];
    centerVector[1] = _ref[1];
  }

  toCenterTangent = maths.normalize(centerVector); //To and from need to point in opposite directions:

  fromCenterTangent = maths.mulItems(toCenterTangent, -1);
  /*
  Note: An alternative to this "divide and conquer" recursion could be to always
        let new curve segments start by trying to go all the way to the end,
        instead of only to the end of the current subdivided polyline.
        That might let many segments fit a few points more, reducing the number of total segments.
          However, a few tests have shown that the segment reduction is insignificant
        (240 pts, 100 err: 25 curves vs 27 curves. 140 pts, 100 err: 17 curves on both),
        and the results take twice as many steps and milliseconds to finish,
        without looking any better than what we already have.
  */

  beziers = beziers.concat(fitCubic(points.slice(0, splitPoint + 1), leftTangent, toCenterTangent, error, progressCallback));
  beziers = beziers.concat(fitCubic(points.slice(splitPoint), fromCenterTangent, rightTangent, error, progressCallback));
  return beziers;
}

function generateAndReport(points, paramsOrig, paramsPrime, leftTangent, rightTangent, progressCallback) {
  var bezCurve, maxError, splitPoint;
  bezCurve = generateBezier(points, paramsPrime, leftTangent, rightTangent, progressCallback); //Find max deviation of points to fitted curve.
  //Here we always use the original parameters (from chordLengthParameterize()),
  //because we need to compare the current curve to the actual source polyline,
  //and not the currently iterated parameters which reparameterize() & generateBezier() use,
  //as those have probably drifted far away and may no longer be in ascending order.

  var _computeMaxError = computeMaxError(points, bezCurve, paramsOrig);

  var _computeMaxError2 = _slicedToArray(_computeMaxError, 2);

  maxError = _computeMaxError2[0];
  splitPoint = _computeMaxError2[1];

  if (progressCallback) {
    progressCallback({
      bez: bezCurve,
      points: points,
      params: paramsOrig,
      maxErr: maxError,
      maxPoint: splitPoint
    });
  }

  return [bezCurve, maxError, splitPoint];
}
/**
 * Use least-squares method to find Bezier control points for region.
 *
 * @param {Array<Array<Number>>} points - Array of digitized points
 * @param {Array<Number>} parameters - Parameter values for region
 * @param {Array<Number>} leftTangent - Unit tangent vector at start point
 * @param {Array<Number>} rightTangent - Unit tangent vector at end point
 * @returns {Array<Array<Number>>} Approximated Bezier curve: [first-point, control-point-1, control-point-2, second-point] where points are [x, y]
 */


function generateBezier(points, parameters, leftTangent, rightTangent) {
  var bezCurve,
      //Bezier curve ctl pts
  A,
      a,
      //Precomputed rhs for eqn
  C,
      X,
      //Matrices C & X
  det_C0_C1,
      det_C0_X,
      det_X_C1,
      //Determinants of matrices
  alpha_l,
      alpha_r,
      //Alpha values, left and right
  epsilon,
      segLength,
      i,
      len,
      tmp,
      u,
      ux,
      firstPoint = points[0],
      lastPoint = points[points.length - 1];
  bezCurve = [firstPoint, null, null, lastPoint]; //console.log('gb', parameters.length);
  //Compute the A's

  A = maths.zeros_Xx2x2(parameters.length);

  for (i = 0, len = parameters.length; i < len; i++) {
    u = parameters[i];
    ux = 1 - u;
    a = A[i];
    a[0] = maths.mulItems(leftTangent, 3 * u * (ux * ux));
    a[1] = maths.mulItems(rightTangent, 3 * ux * (u * u));
  } //Create the C and X matrices


  C = [[0, 0], [0, 0]];
  X = [0, 0];

  for (i = 0, len = points.length; i < len; i++) {
    u = parameters[i];
    a = A[i];
    C[0][0] += maths.dot(a[0], a[0]);
    C[0][1] += maths.dot(a[0], a[1]);
    C[1][0] += maths.dot(a[0], a[1]);
    C[1][1] += maths.dot(a[1], a[1]);
    tmp = maths.subtract(points[i], bezier.q([firstPoint, firstPoint, lastPoint, lastPoint], u));
    X[0] += maths.dot(a[0], tmp);
    X[1] += maths.dot(a[1], tmp);
  } //Compute the determinants of C and X


  det_C0_C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1];
  det_C0_X = C[0][0] * X[1] - C[1][0] * X[0];
  det_X_C1 = X[0] * C[1][1] - X[1] * C[0][1]; //Finally, derive alpha values

  alpha_l = det_C0_C1 === 0 ? 0 : det_X_C1 / det_C0_C1;
  alpha_r = det_C0_C1 === 0 ? 0 : det_C0_X / det_C0_C1; //If alpha negative, use the Wu/Barsky heuristic (see text).
  //If alpha is 0, you get coincident control points that lead to
  //divide by zero in any subsequent NewtonRaphsonRootFind() call.

  segLength = maths.vectorLen(maths.subtract(firstPoint, lastPoint));
  epsilon = 1.0e-6 * segLength;

  if (alpha_l < epsilon || alpha_r < epsilon) {
    //Fall back on standard (probably inaccurate) formula, and subdivide further if needed.
    bezCurve[1] = maths.addArrays(firstPoint, maths.mulItems(leftTangent, segLength / 3.0));
    bezCurve[2] = maths.addArrays(lastPoint, maths.mulItems(rightTangent, segLength / 3.0));
  } else {
    //First and last control points of the Bezier curve are
    //positioned exactly at the first and last data points
    //Control points 1 and 2 are positioned an alpha distance out
    //on the tangent vectors, left and right, respectively
    bezCurve[1] = maths.addArrays(firstPoint, maths.mulItems(leftTangent, alpha_l));
    bezCurve[2] = maths.addArrays(lastPoint, maths.mulItems(rightTangent, alpha_r));
  }

  return bezCurve;
}
/**
 * Given set of points and their parameterization, try to find a better parameterization.
 *
 * @param {Array<Array<Number>>} bezier - Current fitted curve
 * @param {Array<Array<Number>>} points - Array of digitized points
 * @param {Array<Number>} parameters - Current parameter values
 * @returns {Array<Number>} New parameter values
 */


function reparameterize(bezier, points, parameters) {
  /*
  var j, len, point, results, u;
  results = [];
  for (j = 0, len = points.length; j < len; j++) {
      point = points[j], u = parameters[j];
        results.push(newtonRaphsonRootFind(bezier, point, u));
  }
  return results;
  //*/
  return parameters.map(function (p, i) {
    return newtonRaphsonRootFind(bezier, points[i], p);
  });
}
/**
 * Use Newton-Raphson iteration to find better root.
 *
 * @param {Array<Array<Number>>} bez - Current fitted curve
 * @param {Array<Number>} point - Digitized point
 * @param {Number} u - Parameter value for "P"
 * @returns {Number} New u
 */


function newtonRaphsonRootFind(bez, point, u) {
  /*
      Newton's root finding algorithm calculates f(x)=0 by reiterating
      x_n+1 = x_n - f(x_n)/f'(x_n)
      We are trying to find curve parameter u for some point p that minimizes
      the distance from that point to the curve. Distance point to curve is d=q(u)-p.
      At minimum distance the point is perpendicular to the curve.
      We are solving
      f = q(u)-p * q'(u) = 0
      with
      f' = q'(u) * q'(u) + q(u)-p * q''(u)
      gives
      u_n+1 = u_n - |q(u_n)-p * q'(u_n)| / |q'(u_n)**2 + q(u_n)-p * q''(u_n)|
  */
  var d = maths.subtract(bezier.q(bez, u), point),
      qprime = bezier.qprime(bez, u),
      numerator = maths.mulMatrix(d, qprime),
      denominator = maths.sum(maths.squareItems(qprime)) + 2 * maths.mulMatrix(d, bezier.qprimeprime(bez, u));

  if (denominator === 0) {
    return u;
  } else {
    return u - numerator / denominator;
  }
}
/**
 * Assign parameter values to digitized points using relative distances between points.
 *
 * @param {Array<Array<Number>>} points - Array of digitized points
 * @returns {Array<Number>} Parameter values
 */


function chordLengthParameterize(points) {
  var u = [],
      currU,
      prevU,
      prevP;
  points.forEach(function (p, i) {
    currU = i ? prevU + maths.vectorLen(maths.subtract(p, prevP)) : 0;
    u.push(currU);
    prevU = currU;
    prevP = p;
  });
  u = u.map(function (x) {
    return x / prevU;
  });
  return u;
}
/**
 * Find the maximum squared distance of digitized points to fitted curve.
 *
 * @param {Array<Array<Number>>} points - Array of digitized points
 * @param {Array<Array<Number>>} bez - Fitted curve
 * @param {Array<Number>} parameters - Parameterization of points
 * @returns {Array<Number>} Maximum error (squared) and point of max error
 */


function computeMaxError(points, bez, parameters) {
  var dist, //Current error
  maxDist, //Maximum error
  splitPoint, //Point of maximum error
  v, //Vector from point to curve
  i, count, point, t;
  maxDist = 0;
  splitPoint = points.length / 2;
  var t_distMap = mapTtoRelativeDistances(bez, 10);

  for (i = 0, count = points.length; i < count; i++) {
    point = points[i]; //Find 't' for a point on the bez curve that's as close to 'point' as possible:

    t = find_t(bez, parameters[i], t_distMap, 10);
    v = maths.subtract(bezier.q(bez, t), point);
    dist = v[0] * v[0] + v[1] * v[1];

    if (dist > maxDist) {
      maxDist = dist;
      splitPoint = i;
    }
  }

  return [maxDist, splitPoint];
} //Sample 't's and map them to relative distances along the curve:


var mapTtoRelativeDistances = function mapTtoRelativeDistances(bez, B_parts) {
  var B_t_curr;
  var B_t_dist = [0];
  var B_t_prev = bez[0];
  var sumLen = 0;

  for (var i = 1; i <= B_parts; i++) {
    B_t_curr = bezier.q(bez, i / B_parts);
    sumLen += maths.vectorLen(maths.subtract(B_t_curr, B_t_prev));
    B_t_dist.push(sumLen);
    B_t_prev = B_t_curr;
  } //Normalize B_length to the same interval as the parameter distances; 0 to 1:


  B_t_dist = B_t_dist.map(function (x) {
    return x / sumLen;
  });
  return B_t_dist;
};

function find_t(bez, param, t_distMap, B_parts) {
  if (param < 0) {
    return 0;
  }

  if (param > 1) {
    return 1;
  }
  /*
      'param' is a value between 0 and 1 telling us the relative position
      of a point on the source polyline (linearly from the start (0) to the end (1)).
      To see if a given curve - 'bez' - is a close approximation of the polyline,
      we compare such a poly-point to the point on the curve that's the same
      relative distance along the curve's length.
        But finding that curve-point takes a little work:
      There is a function "B(t)" to find points along a curve from the parametric parameter 't'
      (also relative from 0 to 1: http://stackoverflow.com/a/32841764/1869660
                                  http://pomax.github.io/bezierinfo/#explanation),
      but 't' isn't linear by length (http://gamedev.stackexchange.com/questions/105230).
        So, we sample some points along the curve using a handful of values for 't'.
      Then, we calculate the length between those samples via plain euclidean distance;
      B(t) concentrates the points around sharp turns, so this should give us a good-enough outline of the curve.
      Thus, for a given relative distance ('param'), we can now find an upper and lower value
      for the corresponding 't' by searching through those sampled distances.
      Finally, we just use linear interpolation to find a better value for the exact 't'.
        More info:
          http://gamedev.stackexchange.com/questions/105230/points-evenly-spaced-along-a-bezier-curve
          http://stackoverflow.com/questions/29438398/cheap-way-of-calculating-cubic-bezier-length
          http://steve.hollasch.net/cgindex/curves/cbezarclen.html
          https://github.com/retuxx/tinyspline
  */


  var lenMax, lenMin, tMax, tMin, t; //Find the two t-s that the current param distance lies between,
  //and then interpolate a somewhat accurate value for the exact t:

  for (var i = 1; i <= B_parts; i++) {
    if (param <= t_distMap[i]) {
      tMin = (i - 1) / B_parts;
      tMax = i / B_parts;
      lenMin = t_distMap[i - 1];
      lenMax = t_distMap[i];
      t = (param - lenMin) / (lenMax - lenMin) * (tMax - tMin) + tMin;
      break;
    }
  }

  return t;
}
/**
 * Creates a vector of length 1 which shows the direction from B to A
 */


function createTangent(pointA, pointB) {
  return maths.normalize(maths.subtract(pointA, pointB));
}
/*
    Simplified versions of what we need from math.js
    Optimized for our input, which is only numbers and 1x2 arrays (i.e. [x, y] coordinates).
*/


var maths =
/*#__PURE__*/
function () {
  function maths() {
    _classCallCheck(this, maths);
  }

  _createClass(maths, null, [{
    key: "zeros_Xx2x2",
    //zeros = logAndRun(math.zeros);
    value: function zeros_Xx2x2(x) {
      var zs = [];

      while (x--) {
        zs.push([0, 0]);
      }

      return zs;
    } //multiply = logAndRun(math.multiply);

  }, {
    key: "mulItems",
    value: function mulItems(items, multiplier) {
      return items.map(function (x) {
        return x * multiplier;
      });
    }
  }, {
    key: "mulMatrix",
    value: function mulMatrix(m1, m2) {
      //https://en.wikipedia.org/wiki/Matrix_multiplication#Matrix_product_.28two_matrices.29
      //Simplified to only handle 1-dimensional matrices (i.e. arrays) of equal length:
      return m1.reduce(function (sum, x1, i) {
        return sum + x1 * m2[i];
      }, 0);
    } //Only used to subract to points (or at least arrays):
    //  subtract = logAndRun(math.subtract);

  }, {
    key: "subtract",
    value: function subtract(arr1, arr2) {
      return arr1.map(function (x1, i) {
        return x1 - arr2[i];
      });
    } //add = logAndRun(math.add);

  }, {
    key: "addArrays",
    value: function addArrays(arr1, arr2) {
      return arr1.map(function (x1, i) {
        return x1 + arr2[i];
      });
    }
  }, {
    key: "addItems",
    value: function addItems(items, addition) {
      return items.map(function (x) {
        return x + addition;
      });
    } //var sum = logAndRun(math.sum);

  }, {
    key: "sum",
    value: function sum(items) {
      return items.reduce(function (sum, x) {
        return sum + x;
      });
    } //chain = math.chain;
    //Only used on two arrays. The dot product is equal to the matrix product in this case:
    //  dot = logAndRun(math.dot);

  }, {
    key: "dot",
    value: function dot(m1, m2) {
      return maths.mulMatrix(m1, m2);
    } //https://en.wikipedia.org/wiki/Norm_(mathematics)#Euclidean_norm
    //  var norm = logAndRun(math.norm);

  }, {
    key: "vectorLen",
    value: function vectorLen(v) {
      return Math.hypot.apply(Math, _toConsumableArray(v));
    } //math.divide = logAndRun(math.divide);

  }, {
    key: "divItems",
    value: function divItems(items, divisor) {
      return items.map(function (x) {
        return x / divisor;
      });
    } //var dotPow = logAndRun(math.dotPow);

  }, {
    key: "squareItems",
    value: function squareItems(items) {
      return items.map(function (x) {
        return x * x;
      });
    }
  }, {
    key: "normalize",
    value: function normalize(v) {
      return this.divItems(v, this.vectorLen(v));
    } //Math.pow = logAndRun(Math.pow);

  }]);

  return maths;
}();

var bezier =
/*#__PURE__*/
function () {
  function bezier() {
    _classCallCheck(this, bezier);
  }

  _createClass(bezier, null, [{
    key: "q",
    //Evaluates cubic bezier at t, return point
    value: function q(ctrlPoly, t) {
      var tx = 1.0 - t;
      var pA = maths.mulItems(ctrlPoly[0], tx * tx * tx),
          pB = maths.mulItems(ctrlPoly[1], 3 * tx * tx * t),
          pC = maths.mulItems(ctrlPoly[2], 3 * tx * t * t),
          pD = maths.mulItems(ctrlPoly[3], t * t * t);
      return maths.addArrays(maths.addArrays(pA, pB), maths.addArrays(pC, pD));
    } //Evaluates cubic bezier first derivative at t, return point

  }, {
    key: "qprime",
    value: function qprime(ctrlPoly, t) {
      var tx = 1.0 - t;
      var pA = maths.mulItems(maths.subtract(ctrlPoly[1], ctrlPoly[0]), 3 * tx * tx),
          pB = maths.mulItems(maths.subtract(ctrlPoly[2], ctrlPoly[1]), 6 * tx * t),
          pC = maths.mulItems(maths.subtract(ctrlPoly[3], ctrlPoly[2]), 3 * t * t);
      return maths.addArrays(maths.addArrays(pA, pB), pC);
    } //Evaluates cubic bezier second derivative at t, return point

  }, {
    key: "qprimeprime",
    value: function qprimeprime(ctrlPoly, t) {
      return maths.addArrays(maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[2], maths.mulItems(ctrlPoly[1], 2)), ctrlPoly[0]), 6 * (1.0 - t)), maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[3], maths.mulItems(ctrlPoly[2], 2)), ctrlPoly[1]), 6 * t));
    }
  }]);

  return bezier;
}();

/* harmony default export */ __webpack_exports__["default"] = (FitCurve);

/***/ }),

/***/ "./src/util/Seq.js":
/*!*************************!*\
  !*** ./src/util/Seq.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! long */ "./node_modules/long/src/long.js");
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ "./src/util/util.js");





/* harmony default export */ __webpack_exports__["default"] = ({
  serverTime: 0,
  localTime: 0,
  localServerTimeDiff: 0,
  seq: 0,
  getCurrentTimeStamp: function getCurrentTimeStamp() {
    var time = 0;

    if (isNaN(this.localServerTimeDiff)) {
      this.localServerTimeDiff = 0;
    }

    time = Date.now() - this.localServerTimeDiff;
    return time;
  },
  getSeq: function getSeq() {
    var time = parseInt(this.getCurrentTimeStamp() / 1000);
    var longValue = new long__WEBPACK_IMPORTED_MODULE_3___default.a(time >>> 0 << 15 | this.seq++ & 0x7fff, time >>> 0 >> 17);
    return longValue.toString() * 1;
  }
});

/***/ }),

/***/ "./src/util/util.js":
/*!**************************!*\
  !*** ./src/util/util.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.string.starts-with */ "./node_modules/core-js/modules/es6.string.starts-with.js");
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.number.constructor */ "./node_modules/core-js/modules/es6.number.constructor.js");
/* harmony import */ var core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../config/Config */ "./src/config/Config.js");
/* harmony import */ var _Seq__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Seq */ "./src/util/Seq.js");










/* harmony default export */ __webpack_exports__["default"] = ({
  // 十进制转换为十六进制的rgba
  decimalToRgba: function decimalToRgba(decimal) {
    var rgb = [];
    decimal.replace(/../g, function (color) {
      rgb.push(parseInt(color, 0x10)); //按16进制将字符串转换为数字
    });
    return "rgba(" + rgb.join(",") + ",1)";
  },
  // 十六进制转换为rgba
  hexToRgba: function hexToRgba(hex) {
    var c;

    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
      c = hex.substring(1).split('');

      if (c.length == 3) {
        c = [c[0], c[0], c[1], c[1], c[2], c[2]];
      }

      hex = '#' + c.join('');
      return 'rgba(' + parseInt("0x" + hex.slice(1, 3)) + "," + parseInt("0x" + hex.slice(3, 5)) + "," + parseInt("0x" + hex.slice(5, 7)) + ',1)';
    }
  },
  rgbaToDecimal: function rgbaToDecimal(rgba) {
    var color = rgba.toString().match(/\d+/g);
    var hex = '';

    for (var i = 0; i < 3; i++) {
      hex += ("0" + Number(color[i]).toString(16)).slice(-2);
    }

    return hex;
  },
  // 数字颜色转为rgba
  dealColor: function dealColor(color) {
    if (color < 0) {
      // 对负数特殊处理
      var r = color >> 24 & 0xff;
      var g = color >> 16 & 0xff;
      var b = color >> 8 & 0xff;
      return "rgba(" + r + "," + g + "," + b + ",1)";
    }

    var temp = parseInt(color).toString(16);
    temp = temp.substr(0, temp.length - 2);
    temp = '000000' + temp;
    temp = temp.substring(temp.length - 6, temp.length);
    return this.decimalToRgba(temp);
  },
  // 将rgba转换为数字
  formatColor: function formatColor(color) {
    var temp = this.rgbaToDecimal(color);
    return parseInt(temp + 'ff', 16);
  },
  getEffectivePoint: function getEffectivePoint(point, thin) {
    if (point <= 0) {
      point = Math.floor(thin / 2);
    } else if (point >= 10000) {
      point = 10000 - Math.floor(thin / 2);
    }

    return point;
  },
  getAVSdkTimestamp: function getAVSdkTimestamp() {
    var time = this.getTimeStamp() + '';
    var high = time.substring(0, 5) + '00000000'; // 高位

    var low = time.substr(5); // 低位

    var binHigh = parseInt(high, 10).toString(2); // 转为2进制

    var effectiveBinHigh = binHigh.substr(-32); // 因为是& 0xFFFFFFFF 所有只有32位有效

    return parseInt(effectiveBinHigh, 2) + (low & 0xFFFFFFFF); // 将有效的位转为10进制 + 低位&0xFFFFFFFF
  },

  /**
   * 获取毫秒级别时间戳
   */
  getTimeStamp: function getTimeStamp() {
    return _Seq__WEBPACK_IMPORTED_MODULE_9__["default"].getCurrentTimeStamp();
  },

  /**
   * 获取秒级别的时间戳
   */
  getSecondTime: function getSecondTime() {
    return parseInt(this.getTimeStamp() / 1000);
  },

  /**
   * 计算时间差
   * @param {*} start 
   */
  getTimeDiff: function getTimeDiff(start) {
    return this.getTimeStamp() - start;
  },

  /**
   * 根据白板ID提取fid
   * @param {*} boardId 
   */
  boardId2Fid: function boardId2Fid(boardId) {
    return boardId.substring(boardId.indexOf('#'));
  },

  /**
   * 根据白板ID提取UID
   * @param {*} boardId 
   */
  boardId2Uid: function boardId2Uid(boardId) {
    if (boardId === _config_Config__WEBPACK_IMPORTED_MODULE_8__["default"].COMMON_DEFAULT_BOARD) {
      return '';
    } else {
      var uid = '';

      try {
        uid = boardId.substring(0, boardId.match(/_\d+_\d+_#\w+$/).index);
        uid = uid.substring(uid.indexOf('_') + 1);
      } catch (error) {}

      return uid;
    }
  },

  /**
   * 根据白板Id提取Seq
   * @param {*} boardId 
   */
  boardIdGetSeq: function boardIdGetSeq(boardId) {
    return boardId.match(/\d+_#/)[0].replace(/\D/ig, '');
  },
  // 简单判断是否是cos的下载地址
  isCosUrl: function isCosUrl(url) {
    if (url.indexOf('myqcloud.com') > -1 && url.indexOf('cos') > -1) {
      return true;
    } else {
      return false;
    }
  },
  // cosUrl中提取中文名
  cosUrlExtractFileName: function cosUrlExtractFileName(url) {
    if (url.indexOf('?') > -1) {
      // 如果有？
      url = url.substring(0, url.indexOf('?'));
    }

    var fileName = url.substring(url.lastIndexOf('/') + 1);

    if (url.indexOf('-1257240443') > -1) {
      // 如果是大账号
      if (fileName.match(/\d+_/)) {
        fileName = fileName.substr(fileName.match(/^\d+_/)[0].length);
      }
    }

    return decodeURIComponent(fileName);
  },
  // 将下载地址转换为转码预览地址
  fileDownLoadUrlToPreviewUrl: function fileDownLoadUrlToPreviewUrl(url) {
    if (url.startsWith('https')) {// 如果是https则跳过
    } else if (url.startsWith('http')) {
      url = url.replace('http', 'https');
    } else {
      url = 'https://' + url;
    }

    if (url.indexOf('?') > -1) {
      url = url.substring(0, url.indexOf('?'));
    }

    var key = '//';

    if (url.indexOf(key) > -1) {
      url = url.substring(url.indexOf(key) + key.length);
    }

    key = '.';
    var bucketIndex = url.indexOf(key);
    var bucket = url.substr(0, bucketIndex);
    key = '.com';
    var path = url.substring(url.indexOf(key) + key.length);
    return 'https://' + bucket + '.preview.myqcloud.com' + path + '?cmd=doc_preview&of=pic&page=';
  },
  fontStyle2CanvasFontStyle: function fontStyle2CanvasFontStyle(fontStyle) {
    var style = '';

    if (fontStyle === 0) {
      style = '';
    } else if (fontStyle === 1) {
      style = 'bold';
    } else if (fontStyle === 2) {
      style = 'italic';
    } else if (fontStyle === 3) {
      style = 'italic bold';
    }

    return style + ' ';
  },
  // 最大公约数
  maxCommonDivisor: function maxCommonDivisor(num1, num2) {
    return num2 != 0 ? this.maxCommonDivisor(num2, num1 % num2) : num1;
  },
  // 计算白板的宽高比
  calcRatioWidthHeight: function calcRatioWidthHeight(ratio, defaultRatio) {
    var ratioWidth, ratioHeight;

    try {
      var ratios = ratio.split(':');
      ratioWidth = ratios[0] * 1;
      ratioWidth = isNaN(ratioWidth) ? defaultRatio.split(':')[0] : ratioWidth;
      ratioHeight = ratios[1] * 1;
      ratioHeight = isNaN(ratioHeight) ? defaultRatio.split(':')[1] : ratioHeight;
    } catch (error) {
      return this.calcRatioWidthHeight(defaultRatio);
    }

    return {
      ratioWidth: ratioWidth,
      ratioHeight: ratioHeight
    };
  },
  // 移动端设备
  isMobile: function isMobile() {
    return /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase());
  },

  /*
  str:要绘制的字符串
  canvas:canvas对象
  initX:绘制字符串起始x坐标
  initY:绘制字符串起始y坐标
  lineHeight:字行高，自己定义个值即可
  */
  canvasTextAutoLine: function canvasTextAutoLine(ctx, text, initX, initY, canvasWidth, lineHeight) {
    var lineWidth = 0;
    var lastSubStrIndex = 0;
    var textArr = text.split('\n');
    var textHeight = 0; // 记录文字在canvas上的高度

    textArr.forEach(function (text, index) {
      if (index > 0) {
        initY += lineHeight;
      }

      lineWidth = 0;
      lastSubStrIndex = 0;

      for (var i = 0; i < text.length; i++) {
        lineWidth += ctx.measureText(text[i]).width;

        if (lineWidth > canvasWidth - initX - 10 - 2 - 1) {
          //减去initX,防止边界出现的问题
          ctx.fillText(text.substring(lastSubStrIndex, i), initX, initY);
          textHeight += lineHeight;
          initY += lineHeight;
          lineWidth = 0;
          lastSubStrIndex = i;
        }

        if (i == text.length - 1) {
          ctx.fillText(text.substring(lastSubStrIndex, i + 1), initX, initY);
          textHeight += lineHeight;
        }
      }
    });
    return textHeight;
  },
  // 计算canvas的高度
  calcCanvasTextHeight: function calcCanvasTextHeight(ctx, text, initX, initY, canvasWidth, lineHeight) {
    var lineWidth = 0;
    var lastSubStrIndex = 0;
    var textArr = text.split('\n');
    var textHeight = 0;
    textArr.forEach(function (text, index) {
      if (index > 0) {
        initY += lineHeight;
        textHeight += textHeight;
      }

      lineWidth = 0;
      lastSubStrIndex = 0;

      for (var i = 0; i < text.length; i++) {
        lineWidth += ctx.measureText(text[i]).width;

        if (lineWidth > canvasWidth - initX - 10 - 2 - 1) {
          //减去initX,防止边界出现的问题
          initY += lineHeight;
          lineWidth = 0;
          lastSubStrIndex = i;
          textHeight += lineHeight;
        }

        if (i == text.length - 1) {
          textHeight += textHeight;
        }
      }
    });
    return textHeight;
  }
});

/***/ })

/******/ })["default"];
});
//# sourceMappingURL=TEduBoard.min.js.map